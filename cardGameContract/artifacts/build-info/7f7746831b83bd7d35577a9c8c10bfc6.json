{"id":"7f7746831b83bd7d35577a9c8c10bfc6","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/CardGame.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/**\n * @title TradingCardGame\n * @dev A smart contract for a simple trading card game where players can register,\n * create battles against a computer opponent, and resolve battles based on card stats.\n * The contract uses OpenZeppelin's Ownable contract for access control, allowing certain\n * functions to be restricted to the contract owner.\n */\ncontract TradingCardGame is Ownable {\n    /// @notice The ERC721 contract representing the trading cards used in the game.\n    IERC721 public cardContract;\n\n    /// @notice The address representing the computer opponent in battles.\n    address public computerAddress;\n\n    /// @dev Structure representing a player in the game.\n    struct Player {\n        address playerAddress;  // The player's Ethereum address\n        string playerName;      // The player's chosen name\n        uint256 wins;           // The number of battles won by the player\n        uint256 losses;         // The number of battles lost by the player\n    }\n\n    /// @dev Structure representing a battle between a player and the computer.\n    struct Battle {\n        BattleStatus battleStatus; // The current status of the battle\n        uint256 battleId;          // Unique identifier for the battle\n        address player;            // The address of the player\n        uint256 playerCardId;      // The ID of the player's card\n        uint256 computerCardId;    // The ID of the computer's card\n        uint256 playerStatValue;   // The stat value of the player's card\n        uint256 computerStatValue; // The stat value of the computer's card\n        address winner;            // The address of the battle winner\n    }\n\n    /// @dev Enum representing the status of a battle.\n    enum BattleStatus {\n        Pending,    // Battle is pending (not started)\n        InProgress, // Battle is currently in progress\n        Finished    // Battle has finished\n    }\n\n    /// @dev Mapping of player addresses to their corresponding Player struct.\n    mapping(address => Player) public players;\n\n    /// @dev Mapping of battle IDs to their corresponding Battle struct.\n    mapping(uint256 => Battle) public battles;\n\n    /// @notice Emitted when a new player registers in the game.\n    /// @param player The address of the new player\n    /// @param name The name of the new player\n    event NewPlayer(address indexed player, string name);\n\n    /// @notice Emitted when a new battle is started.\n    /// @param battleId The unique identifier for the battle\n    /// @param player The address of the player\n    /// @param playerCardId The ID of the player's card\n    /// @param computerCardId The ID of the computer's card\n    event BattleStarted(uint256 indexed battleId, address indexed player, uint256 playerCardId, uint256 computerCardId);\n\n    /// @notice Emitted when a battle is finished.\n    /// @param battleId The unique identifier for the battle\n    /// @param winner The address of the battle winner\n    /// @param loser The address of the battle loser\n    event BattleFinished(uint256 indexed battleId, address indexed winner, address indexed loser);\n\n    /**\n     * @dev Constructor to initialize the TradingCardGame contract.\n     * @param _cardContractAddress The address of the ERC721 card contract\n     * @param _computerAddress The address representing the computer opponent\n     */\n    constructor(address _cardContractAddress, address _computerAddress) Ownable(msg.sender) {\n        cardContract = IERC721(_cardContractAddress);\n        computerAddress = _computerAddress; // Set the computer's address\n    }\n\n    /**\n     * @notice Register a new player in the game.\n     * @param _name The name chosen by the player\n     * @dev The player must not already be registered.\n     */\n    function registerPlayer(string memory _name) external {\n        require(bytes(players[msg.sender].playerName).length == 0, \"Already registered\");\n        players[msg.sender] = Player(msg.sender, _name, 0, 0);\n        emit NewPlayer(msg.sender, _name);\n    }\n\n    /**\n     * @notice Create a new battle against the computer with a provided battle ID.\n     * @param _battleId The unique identifier for the battle\n     * @param _playerCardId The ID of the player's card\n     * @param _computerCardId The ID of the computer's card\n     * @param _playerStatValue The stat value of the player's card\n     * @param _computerStatValue The stat value of the computer's card\n     * @dev The player must own the card with ID `_playerCardId`.\n     * The battle is automatically started upon creation.\n     */\n    function createBattle(uint256 _battleId, uint256 _playerCardId, uint256 _computerCardId, uint256 _playerStatValue, uint256 _computerStatValue) external {\n        require(cardContract.ownerOf(_playerCardId) == msg.sender, \"You don't own this card\");\n        require(battles[_battleId].battleId == 0, \"Battle ID already exists\");\n\n        battles[_battleId] = Battle(\n            BattleStatus.InProgress,\n            _battleId,\n            msg.sender,\n            _playerCardId,\n            _computerCardId,\n            _playerStatValue,\n            _computerStatValue,\n            address(0)\n        );\n\n        emit BattleStarted(_battleId, msg.sender, _playerCardId, _computerCardId);\n    }\n\n    /**\n     * @notice Resolve an in-progress battle and determine the winner.\n     * @param _battleId The ID of the battle to resolve\n     * @dev Only the player who initiated the battle or the contract owner can resolve the battle.\n     * The winner is determined by comparing the player's card stat value with the computer's card stat value.\n     */\n    function resolveBattle(uint256 _battleId) external {\n        Battle storage battle = battles[_battleId];\n        require(battle.battleStatus == BattleStatus.InProgress, \"Battle not in progress\");\n        require(msg.sender == battle.player || msg.sender == owner(), \"Not authorized to resolve\");\n\n        battle.winner = battle.playerStatValue >= battle.computerStatValue ? battle.player : computerAddress;\n        battle.battleStatus = BattleStatus.Finished;\n\n        Player storage player = players[battle.player];\n        if (battle.winner == battle.player) {\n            player.wins++;\n        } else {\n            player.losses++;\n        }\n\n        emit BattleFinished(_battleId, battle.winner, battle.winner == battle.player ? computerAddress : battle.player);\n    }\n\n    /**\n     * @notice Update the address representing the computer opponent.\n     * @param _newAddress The new address for the computer opponent\n     * @dev Only the contract owner can update the computer address.\n     */\n    function updateComputerAddress(address _newAddress) external onlyOwner {\n        computerAddress = _newAddress;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[294],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":295,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":294,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,294],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[306],"IERC721":[264]},"id":265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":265,"sourceUnit":307,"src":"134:62:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"142:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":153,"name":"IERC165","nameLocations":["287:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"287:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"287:7:1"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"198:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":264,"linearizedBaseContracts":[264,306],"name":"IERC721","nameLocation":"276:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"301:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":163,"name":"Transfer","nameLocation":"400:8:1","nodeType":"EventDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:1","nodeType":"VariableDeclaration","scope":163,"src":"409:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":159,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:1","nodeType":"VariableDeclaration","scope":163,"src":"431:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":161,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:1","nodeType":"VariableDeclaration","scope":163,"src":"451:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:1"},"src":"394:82:1"},{"anonymous":false,"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"482:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":172,"name":"Approval","nameLocation":"587:8:1","nodeType":"EventDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:1","nodeType":"VariableDeclaration","scope":172,"src":"596:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:1","nodeType":"VariableDeclaration","scope":172,"src":"619:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:1","nodeType":"VariableDeclaration","scope":172,"src":"645:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:1"},"src":"581:89:1"},{"anonymous":false,"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"676:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":181,"name":"ApprovalForAll","nameLocation":"804:14:1","nodeType":"EventDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:1","nodeType":"VariableDeclaration","scope":181,"src":"819:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":177,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:1","nodeType":"VariableDeclaration","scope":181,"src":"842:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:1","nodeType":"VariableDeclaration","scope":181,"src":"868:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":178,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:1"},"src":"798:85:1"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"889:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"owner","nameLocation":"997:5:1","nodeType":"VariableDeclaration","scope":189,"src":"989:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"1035:7:1","nodeType":"VariableDeclaration","scope":189,"src":"1027:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:1"},"scope":264,"src":"970:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1050:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":197,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:1","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:1","nodeType":"VariableDeclaration","scope":197,"src":"1203:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1251:5:1","nodeType":"VariableDeclaration","scope":197,"src":"1243:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:1"},"scope":264,"src":"1186:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1264:565:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:1","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"from","nameLocation":"1868:4:1","nodeType":"VariableDeclaration","scope":209,"src":"1860:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"to","nameLocation":"1882:2:1","nodeType":"VariableDeclaration","scope":209,"src":"1874:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":209,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"data","nameLocation":"1918:4:1","nodeType":"VariableDeclaration","scope":209,"src":"1903:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":205,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"1932:0:1"},"scope":264,"src":"1834:99:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"1939:705:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"from","nameLocation":"2683:4:1","nodeType":"VariableDeclaration","scope":219,"src":"2675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"2697:2:1","nodeType":"VariableDeclaration","scope":219,"src":"2689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:1","nodeType":"VariableDeclaration","scope":219,"src":"2701:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2726:0:1"},"scope":264,"src":"2649:78:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"2733:732:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"from","nameLocation":"3500:4:1","nodeType":"VariableDeclaration","scope":229,"src":"3492:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"to","nameLocation":"3514:2:1","nodeType":"VariableDeclaration","scope":229,"src":"3506:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:1","nodeType":"VariableDeclaration","scope":229,"src":"3518:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"3543:0:1"},"scope":264,"src":"3470:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"3550:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:1","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"to","nameLocation":"4032:2:1","nodeType":"VariableDeclaration","scope":237,"src":"4024:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:1","nodeType":"VariableDeclaration","scope":237,"src":"4036:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:1"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"4061:0:1"},"scope":264,"src":"4007:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4068:315:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":245,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"operator","nameLocation":"4423:8:1","nodeType":"VariableDeclaration","scope":245,"src":"4415:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"approved","nameLocation":"4438:8:1","nodeType":"VariableDeclaration","scope":245,"src":"4433:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"4456:0:1"},"scope":264,"src":"4388:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"4463:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":253,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:1","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:1","nodeType":"VariableDeclaration","scope":253,"src":"4628:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:1"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"operator","nameLocation":"4676:8:1","nodeType":"VariableDeclaration","scope":253,"src":"4668:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:1"},"scope":264,"src":"4607:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"4692:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":263,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"owner","nameLocation":"4869:5:1","nodeType":"VariableDeclaration","scope":263,"src":"4861:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"operator","nameLocation":"4884:8:1","nodeType":"VariableDeclaration","scope":263,"src":"4876:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"4917:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":260,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:1"},"scope":264,"src":"4835:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":265,"src":"266:4659:1","usedErrors":[],"usedEvents":[163,172,181]}],"src":"108:4818:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[294]},"id":295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":266,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":294,"linearizedBaseContracts":[294],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":275,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":271,"id":274,"nodeType":"Return","src":"728:17:2"}]},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":294,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":280,"id":283,"nodeType":"Return","src":"835:15:2"}]},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":278,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":294,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":289,"id":291,"nodeType":"Return","src":"945:8:2"}]},"id":293,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":294,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":295,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[306]},"id":307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":296,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"141:279:3","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":306,"linearizedBaseContracts":[306],"name":"IERC165","nameLocation":"431:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"445:340:3","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:3","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:3","nodeType":"VariableDeclaration","scope":305,"src":"817:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":299,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:3"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"860:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:3"},"scope":306,"src":"790:76:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":307,"src":"421:447:3","usedErrors":[],"usedEvents":[]}],"src":"115:754:3"},"id":3},"contracts/CardGame.sol":{"ast":{"absolutePath":"contracts/CardGame.sol","exportedSymbols":{"Context":[294],"IERC165":[306],"IERC721":[264],"Ownable":[147],"TradingCardGame":[635]},"id":636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":308,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":636,"sourceUnit":148,"src":"58:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":636,"sourceUnit":265,"src":"111:58:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":312,"name":"Ownable","nameLocations":["548:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"548:7:4"},"id":313,"nodeType":"InheritanceSpecifier","src":"548:7:4"}],"canonicalName":"TradingCardGame","contractDependencies":[],"contractKind":"contract","documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"171:348:4","text":" @title TradingCardGame\n @dev A smart contract for a simple trading card game where players can register,\n create battles against a computer opponent, and resolve battles based on card stats.\n The contract uses OpenZeppelin's Ownable contract for access control, allowing certain\n functions to be restricted to the contract owner."},"fullyImplemented":true,"id":635,"linearizedBaseContracts":[635,147,294],"name":"TradingCardGame","nameLocation":"529:15:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"562:80:4","text":"@notice The ERC721 contract representing the trading cards used in the game."},"functionSelector":"693bd2d0","id":317,"mutability":"mutable","name":"cardContract","nameLocation":"662:12:4","nodeType":"VariableDeclaration","scope":635,"src":"647:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"},"typeName":{"id":316,"nodeType":"UserDefinedTypeName","pathNode":{"id":315,"name":"IERC721","nameLocations":["647:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"647:7:4"},"referencedDeclaration":264,"src":"647:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"}},"visibility":"public"},{"constant":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"681:70:4","text":"@notice The address representing the computer opponent in battles."},"functionSelector":"3a7c2b71","id":320,"mutability":"mutable","name":"computerAddress","nameLocation":"771:15:4","nodeType":"VariableDeclaration","scope":635,"src":"756:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"TradingCardGame.Player","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"793:53:4","text":"@dev Structure representing a player in the game."},"id":330,"members":[{"constant":false,"id":323,"mutability":"mutable","name":"playerAddress","nameLocation":"883:13:4","nodeType":"VariableDeclaration","scope":330,"src":"875:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"playerName","nameLocation":"947:10:4","nodeType":"VariableDeclaration","scope":330,"src":"940:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":324,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"wins","nameLocation":"1008:4:4","nodeType":"VariableDeclaration","scope":330,"src":"1000:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"losses","nameLocation":"1083:6:4","nodeType":"VariableDeclaration","scope":330,"src":"1075:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Player","nameLocation":"858:6:4","nodeType":"StructDefinition","scope":635,"src":"851:297:4","visibility":"public"},{"canonicalName":"TradingCardGame.Battle","documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"1154:75:4","text":"@dev Structure representing a battle between a player and the computer."},"id":349,"members":[{"constant":false,"id":334,"mutability":"mutable","name":"battleStatus","nameLocation":"1271:12:4","nodeType":"VariableDeclaration","scope":349,"src":"1258:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"},"typeName":{"id":333,"nodeType":"UserDefinedTypeName","pathNode":{"id":332,"name":"BattleStatus","nameLocations":["1258:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"1258:12:4"},"referencedDeclaration":354,"src":"1258:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"battleId","nameLocation":"1337:8:4","nodeType":"VariableDeclaration","scope":349,"src":"1329:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"player","nameLocation":"1408:6:4","nodeType":"VariableDeclaration","scope":349,"src":"1400:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"1400:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"playerCardId","nameLocation":"1472:12:4","nodeType":"VariableDeclaration","scope":349,"src":"1464:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"computerCardId","nameLocation":"1538:14:4","nodeType":"VariableDeclaration","scope":349,"src":"1530:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"playerStatValue","nameLocation":"1606:15:4","nodeType":"VariableDeclaration","scope":349,"src":"1598:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"computerStatValue","nameLocation":"1680:17:4","nodeType":"VariableDeclaration","scope":349,"src":"1672:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"winner","nameLocation":"1756:6:4","nodeType":"VariableDeclaration","scope":349,"src":"1748:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Battle","nameLocation":"1241:6:4","nodeType":"StructDefinition","scope":635,"src":"1234:582:4","visibility":"public"},{"canonicalName":"TradingCardGame.BattleStatus","documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"1822:50:4","text":"@dev Enum representing the status of a battle."},"id":354,"members":[{"id":351,"name":"Pending","nameLocation":"1905:7:4","nodeType":"EnumValue","src":"1905:7:4"},{"id":352,"name":"InProgress","nameLocation":"1960:10:4","nodeType":"EnumValue","src":"1960:10:4"},{"id":353,"name":"Finished","nameLocation":"2015:8:4","nodeType":"EnumValue","src":"2015:8:4"}],"name":"BattleStatus","nameLocation":"1882:12:4","nodeType":"EnumDefinition","src":"1877:178:4"},{"constant":false,"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2061:74:4","text":"@dev Mapping of player addresses to their corresponding Player struct."},"functionSelector":"e2eb41ff","id":360,"mutability":"mutable","name":"players","nameLocation":"2174:7:4","nodeType":"VariableDeclaration","scope":635,"src":"2140:41:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$330_storage_$","typeString":"mapping(address => struct TradingCardGame.Player)"},"typeName":{"id":359,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2140:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$330_storage_$","typeString":"mapping(address => struct TradingCardGame.Player)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":358,"nodeType":"UserDefinedTypeName","pathNode":{"id":357,"name":"Player","nameLocations":["2159:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":330,"src":"2159:6:4"},"referencedDeclaration":330,"src":"2159:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage_ptr","typeString":"struct TradingCardGame.Player"}}},"visibility":"public"},{"constant":false,"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2188:68:4","text":"@dev Mapping of battle IDs to their corresponding Battle struct."},"functionSelector":"606d2e96","id":366,"mutability":"mutable","name":"battles","nameLocation":"2295:7:4","nodeType":"VariableDeclaration","scope":635,"src":"2261:41:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Battle_$349_storage_$","typeString":"mapping(uint256 => struct TradingCardGame.Battle)"},"typeName":{"id":365,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2269:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2261:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Battle_$349_storage_$","typeString":"mapping(uint256 => struct TradingCardGame.Battle)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":364,"nodeType":"UserDefinedTypeName","pathNode":{"id":363,"name":"Battle","nameLocations":["2280:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2280:6:4"},"referencedDeclaration":349,"src":"2280:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2309:159:4","text":"@notice Emitted when a new player registers in the game.\n @param player The address of the new player\n @param name The name of the new player"},"eventSelector":"81ef79d1cda814a60c0fc60792e648a06d9c6bae67176346d1cc8b63030bfccd","id":373,"name":"NewPlayer","nameLocation":"2479:9:4","nodeType":"EventDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2505:6:4","nodeType":"VariableDeclaration","scope":373,"src":"2489:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2520:4:4","nodeType":"VariableDeclaration","scope":373,"src":"2513:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":370,"name":"string","nodeType":"ElementaryTypeName","src":"2513:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2488:37:4"},"src":"2473:53:4"},{"anonymous":false,"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"2532:274:4","text":"@notice Emitted when a new battle is started.\n @param battleId The unique identifier for the battle\n @param player The address of the player\n @param playerCardId The ID of the player's card\n @param computerCardId The ID of the computer's card"},"eventSelector":"7b010b92649cab9c2407084cd3618bec17673efa5ac581cd215068a8558580dc","id":384,"name":"BattleStarted","nameLocation":"2817:13:4","nodeType":"EventDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"indexed":true,"mutability":"mutable","name":"battleId","nameLocation":"2847:8:4","nodeType":"VariableDeclaration","scope":384,"src":"2831:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2831:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":378,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2873:6:4","nodeType":"VariableDeclaration","scope":384,"src":"2857:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":380,"indexed":false,"mutability":"mutable","name":"playerCardId","nameLocation":"2889:12:4","nodeType":"VariableDeclaration","scope":384,"src":"2881:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2881:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":382,"indexed":false,"mutability":"mutable","name":"computerCardId","nameLocation":"2911:14:4","nodeType":"VariableDeclaration","scope":384,"src":"2903:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2830:96:4"},"src":"2811:116:4"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"2933:215:4","text":"@notice Emitted when a battle is finished.\n @param battleId The unique identifier for the battle\n @param winner The address of the battle winner\n @param loser The address of the battle loser"},"eventSelector":"c77dc6cd4b51c8efc4af40a582ca4cf229fda505a830b4486b200ddcbdb1383f","id":393,"name":"BattleFinished","nameLocation":"3159:14:4","nodeType":"EventDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":true,"mutability":"mutable","name":"battleId","nameLocation":"3190:8:4","nodeType":"VariableDeclaration","scope":393,"src":"3174:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"3174:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":389,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"3216:6:4","nodeType":"VariableDeclaration","scope":393,"src":"3200:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"3200:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"indexed":true,"mutability":"mutable","name":"loser","nameLocation":"3240:5:4","nodeType":"VariableDeclaration","scope":393,"src":"3224:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"3224:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3173:73:4"},"src":"3153:94:4"},{"body":{"id":415,"nodeType":"Block","src":"3578:135:4","statements":[{"expression":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"cardContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3588:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":407,"name":"_cardContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3611:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3603:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$264_$","typeString":"type(contract IERC721)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"}},"src":"3588:44:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"}},"id":410,"nodeType":"ExpressionStatement","src":"3588:44:4"},{"expression":{"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"computerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"3642:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":412,"name":"_computerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3660:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3642:34:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":414,"nodeType":"ExpressionStatement","src":"3642:34:4"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"3253:232:4","text":" @dev Constructor to initialize the TradingCardGame contract.\n @param _cardContractAddress The address of the ERC721 card contract\n @param _computerAddress The address representing the computer opponent"},"id":416,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3566:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3570:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3566:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":403,"kind":"baseConstructorSpecifier","modifierName":{"id":400,"name":"Ownable","nameLocations":["3558:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3558:7:4"},"nodeType":"ModifierInvocation","src":"3558:19:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"_cardContractAddress","nameLocation":"3510:20:4","nodeType":"VariableDeclaration","scope":416,"src":"3502:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3502:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"_computerAddress","nameLocation":"3540:16:4","nodeType":"VariableDeclaration","scope":416,"src":"3532:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"3532:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3501:56:4"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"3578:0:4"},"scope":635,"src":"3490:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":456,"nodeType":"Block","src":"3944:203:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":425,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"3968:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$330_storage_$","typeString":"mapping(address => struct TradingCardGame.Player storage ref)"}},"id":428,"indexExpression":{"expression":{"id":426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3976:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3980:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3976:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3968:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage","typeString":"struct TradingCardGame.Player storage ref"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3988:10:4","memberName":"playerName","nodeType":"MemberAccess","referencedDeclaration":325,"src":"3968:30:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3962:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:4","typeDescriptions":{}}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:6:4","memberName":"length","nodeType":"MemberAccess","src":"3962:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3962:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4013:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"3954:80:4"},{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":437,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4044:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$330_storage_$","typeString":"mapping(address => struct TradingCardGame.Player storage ref)"}},"id":440,"indexExpression":{"expression":{"id":438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4052:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4052:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4044:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage","typeString":"struct TradingCardGame.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4077:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4073:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4085:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4095:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":441,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4066:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$330_storage_ptr_$","typeString":"type(struct TradingCardGame.Player storage pointer)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_memory_ptr","typeString":"struct TradingCardGame.Player memory"}},"src":"4044:53:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage","typeString":"struct TradingCardGame.Player storage ref"}},"id":449,"nodeType":"ExpressionStatement","src":"4044:53:4"},{"eventCall":{"arguments":[{"expression":{"id":451,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4122:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4126:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4122:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4134:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":450,"name":"NewPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4112:9:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4112:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"4107:33:4"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"3719:166:4","text":" @notice Register a new player in the game.\n @param _name The name chosen by the player\n @dev The player must not already be registered."},"functionSelector":"b3446f85","id":457,"implemented":true,"kind":"function","modifiers":[],"name":"registerPlayer","nameLocation":"3899:14:4","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"_name","nameLocation":"3928:5:4","nodeType":"VariableDeclaration","scope":457,"src":"3914:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"3914:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3913:21:4"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"3944:0:4"},"scope":635,"src":"3890:257:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":520,"nodeType":"Block","src":"4843:539:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":474,"name":"_playerCardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4882:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":472,"name":"cardContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4861:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$264","typeString":"contract IERC721"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":197,"src":"4861:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4861:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4900:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4904:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4900:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4861:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520646f6e2774206f776e20746869732063617264","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3afb092d64fcfebeb1708138e27e032546cd5a67e62e6ca98cb36f26f0cc1abe","typeString":"literal_string \"You don't own this card\""},"value":"You don't own this card"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3afb092d64fcfebeb1708138e27e032546cd5a67e62e6ca98cb36f26f0cc1abe","typeString":"literal_string \"You don't own this card\""}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4853:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4853:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"ExpressionStatement","src":"4853:85:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":483,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4956:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Battle_$349_storage_$","typeString":"mapping(uint256 => struct TradingCardGame.Battle storage ref)"}},"id":485,"indexExpression":{"id":484,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4964:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4956:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage","typeString":"struct TradingCardGame.Battle storage ref"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4975:8:4","memberName":"battleId","nodeType":"MemberAccess","referencedDeclaration":336,"src":"4956:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4987:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4956:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520494420616c726561647920657869737473","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4990:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bf3e846f44a2dc9e1f910f2fb7fa1b9c84daacdeb1187926858c401614800a5","typeString":"literal_string \"Battle ID already exists\""},"value":"Battle ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8bf3e846f44a2dc9e1f910f2fb7fa1b9c84daacdeb1187926858c401614800a5","typeString":"literal_string \"Battle ID already exists\""}],"id":482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4948:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4948:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"4948:69:4"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":492,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5028:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Battle_$349_storage_$","typeString":"mapping(uint256 => struct TradingCardGame.Battle storage ref)"}},"id":494,"indexExpression":{"id":493,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"5036:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5028:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage","typeString":"struct TradingCardGame.Battle storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":496,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5069:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$354_$","typeString":"type(enum TradingCardGame.BattleStatus)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5082:10:4","memberName":"InProgress","nodeType":"MemberAccess","referencedDeclaration":352,"src":"5069:23:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},{"id":498,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"5106:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5129:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5133:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5129:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"_playerCardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5153:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":502,"name":"_computerCardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5180:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":503,"name":"_playerStatValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5209:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":504,"name":"_computerStatValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5239:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5279:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5271:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"5271:7:4","typeDescriptions":{}}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5271:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":495,"name":"Battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5049:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Battle_$349_storage_ptr_$","typeString":"type(struct TradingCardGame.Battle storage pointer)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:242:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_memory_ptr","typeString":"struct TradingCardGame.Battle memory"}},"src":"5028:263:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage","typeString":"struct TradingCardGame.Battle storage ref"}},"id":511,"nodeType":"ExpressionStatement","src":"5028:263:4"},{"eventCall":{"arguments":[{"id":513,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"5321:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5332:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5336:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5332:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"_playerCardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5344:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"_computerCardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5359:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":512,"name":"BattleStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5307:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5307:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"EmitStatement","src":"5302:73:4"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"4153:533:4","text":" @notice Create a new battle against the computer with a provided battle ID.\n @param _battleId The unique identifier for the battle\n @param _playerCardId The ID of the player's card\n @param _computerCardId The ID of the computer's card\n @param _playerStatValue The stat value of the player's card\n @param _computerStatValue The stat value of the computer's card\n @dev The player must own the card with ID `_playerCardId`.\n The battle is automatically started upon creation."},"functionSelector":"255c9e6f","id":521,"implemented":true,"kind":"function","modifiers":[],"name":"createBattle","nameLocation":"4700:12:4","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"_battleId","nameLocation":"4721:9:4","nodeType":"VariableDeclaration","scope":521,"src":"4713:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"_playerCardId","nameLocation":"4740:13:4","nodeType":"VariableDeclaration","scope":521,"src":"4732:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4732:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"_computerCardId","nameLocation":"4763:15:4","nodeType":"VariableDeclaration","scope":521,"src":"4755:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"_playerStatValue","nameLocation":"4788:16:4","nodeType":"VariableDeclaration","scope":521,"src":"4780:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4780:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"_computerStatValue","nameLocation":"4814:18:4","nodeType":"VariableDeclaration","scope":521,"src":"4806:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4712:121:4"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"4843:0:4"},"scope":635,"src":"4691:691:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":620,"nodeType":"Block","src":"5792:722:4","statements":[{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"battle","nameLocation":"5817:6:4","nodeType":"VariableDeclaration","scope":620,"src":"5802:21:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"Battle","nameLocations":["5802:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"5802:6:4"},"referencedDeclaration":349,"src":"5802:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle"}},"visibility":"internal"}],"id":533,"initialValue":{"baseExpression":{"id":530,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5826:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Battle_$349_storage_$","typeString":"mapping(uint256 => struct TradingCardGame.Battle storage ref)"}},"id":532,"indexExpression":{"id":531,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5834:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5826:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage","typeString":"struct TradingCardGame.Battle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5802:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":535,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5862:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5869:12:4","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":334,"src":"5862:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":537,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5885:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$354_$","typeString":"type(enum TradingCardGame.BattleStatus)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5898:10:4","memberName":"InProgress","nodeType":"MemberAccess","referencedDeclaration":352,"src":"5885:23:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"src":"5862:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c65206e6f7420696e2070726f6772657373","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5910:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1c7cd9553ca65c6a2c63bd7aefffe6f98bd6a8fda9409d65aaa5406702ab21b","typeString":"literal_string \"Battle not in progress\""},"value":"Battle not in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1c7cd9553ca65c6a2c63bd7aefffe6f98bd6a8fda9409d65aaa5406702ab21b","typeString":"literal_string \"Battle not in progress\""}],"id":534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5854:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5854:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"5854:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5953:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5957:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5953:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":546,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5967:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5974:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"5967:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5953:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5984:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5988:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5984:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5998:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5984:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5953:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f207265736f6c7665","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6007:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b505ce087a48417edb145c0615ec91fa53261eab7f095369a503e89e1051aada","typeString":"literal_string \"Not authorized to resolve\""},"value":"Not authorized to resolve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b505ce087a48417edb145c0615ec91fa53261eab7f095369a503e89e1051aada","typeString":"literal_string \"Not authorized to resolve\""}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5945:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5945:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"5945:90:4"},{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":558,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6046:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6053:6:4","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6046:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":561,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6062:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6069:15:4","memberName":"playerStatValue","nodeType":"MemberAccess","referencedDeclaration":344,"src":"6062:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":563,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6088:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6095:17:4","memberName":"computerStatValue","nodeType":"MemberAccess","referencedDeclaration":346,"src":"6088:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6062:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":568,"name":"computerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"6131:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6062:84:4","trueExpression":{"expression":{"id":566,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6115:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6122:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6115:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6046:100:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":571,"nodeType":"ExpressionStatement","src":"6046:100:4"},{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":572,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6156:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6163:12:4","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":334,"src":"6156:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":575,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6178:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$354_$","typeString":"type(enum TradingCardGame.BattleStatus)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6191:8:4","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":353,"src":"6178:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"src":"6156:43:4","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$354","typeString":"enum TradingCardGame.BattleStatus"}},"id":578,"nodeType":"ExpressionStatement","src":"6156:43:4"},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"player","nameLocation":"6225:6:4","nodeType":"VariableDeclaration","scope":620,"src":"6210:21:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage_ptr","typeString":"struct TradingCardGame.Player"},"typeName":{"id":580,"nodeType":"UserDefinedTypeName","pathNode":{"id":579,"name":"Player","nameLocations":["6210:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":330,"src":"6210:6:4"},"referencedDeclaration":330,"src":"6210:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage_ptr","typeString":"struct TradingCardGame.Player"}},"visibility":"internal"}],"id":586,"initialValue":{"baseExpression":{"id":582,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6234:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$330_storage_$","typeString":"mapping(address => struct TradingCardGame.Player storage ref)"}},"id":585,"indexExpression":{"expression":{"id":583,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6242:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6249:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6242:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6234:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage","typeString":"struct TradingCardGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6210:46:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":587,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6270:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6277:6:4","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6270:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":589,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6287:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6294:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6287:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6270:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":603,"nodeType":"Block","src":"6346:40:4","statements":[{"expression":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6360:15:4","subExpression":{"expression":{"id":598,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"6360:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage_ptr","typeString":"struct TradingCardGame.Player storage pointer"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6367:6:4","memberName":"losses","nodeType":"MemberAccess","referencedDeclaration":329,"src":"6360:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ExpressionStatement","src":"6360:15:4"}]},"id":604,"nodeType":"IfStatement","src":"6266:120:4","trueBody":{"id":597,"nodeType":"Block","src":"6302:38:4","statements":[{"expression":{"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6316:13:4","subExpression":{"expression":{"id":592,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"6316:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$330_storage_ptr","typeString":"struct TradingCardGame.Player storage pointer"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6323:4:4","memberName":"wins","nodeType":"MemberAccess","referencedDeclaration":327,"src":"6316:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":596,"nodeType":"ExpressionStatement","src":"6316:13:4"}]}},{"eventCall":{"arguments":[{"id":606,"name":"_battleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"6416:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":607,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6427:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6434:6:4","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6427:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":609,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6442:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6449:6:4","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6442:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":611,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6459:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6466:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6459:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6442:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":615,"name":"battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6493:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$349_storage_ptr","typeString":"struct TradingCardGame.Battle storage pointer"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6500:6:4","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6493:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6442:64:4","trueExpression":{"id":614,"name":"computerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"6475:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":605,"name":"BattleFinished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6401:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6401:106:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"EmitStatement","src":"6396:111:4"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"5388:348:4","text":" @notice Resolve an in-progress battle and determine the winner.\n @param _battleId The ID of the battle to resolve\n @dev Only the player who initiated the battle or the contract owner can resolve the battle.\n The winner is determined by comparing the player's card stat value with the computer's card stat value."},"functionSelector":"d93705a5","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"resolveBattle","nameLocation":"5750:13:4","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"_battleId","nameLocation":"5772:9:4","nodeType":"VariableDeclaration","scope":621,"src":"5764:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5763:19:4"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"5792:0:4"},"scope":635,"src":"5741:773:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":633,"nodeType":"Block","src":"6814:46:4","statements":[{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"computerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"6824:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":630,"name":"_newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6842:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6824:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":632,"nodeType":"ExpressionStatement","src":"6824:29:4"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"6520:218:4","text":" @notice Update the address representing the computer opponent.\n @param _newAddress The new address for the computer opponent\n @dev Only the contract owner can update the computer address."},"functionSelector":"7016f931","id":634,"implemented":true,"kind":"function","modifiers":[{"id":627,"kind":"modifierInvocation","modifierName":{"id":626,"name":"onlyOwner","nameLocations":["6804:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6804:9:4"},"nodeType":"ModifierInvocation","src":"6804:9:4"}],"name":"updateComputerAddress","nameLocation":"6752:21:4","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"_newAddress","nameLocation":"6782:11:4","nodeType":"VariableDeclaration","scope":634,"src":"6774:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"6774:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6773:21:4"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"6814:0:4"},"scope":635,"src":"6743:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":636,"src":"520:6342:4","usedErrors":[13,18],"usedEvents":[24,373,384,393]}],"src":"32:6831:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"contracts/CardGame.sol":{"TradingCardGame":{"abi":[{"inputs":[{"internalType":"address","name":"_cardContractAddress","type":"address"},{"internalType":"address","name":"_computerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"battleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":true,"internalType":"address","name":"loser","type":"address"}],"name":"BattleFinished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"battleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"playerCardId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"computerCardId","type":"uint256"}],"name":"BattleStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"NewPlayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"battles","outputs":[{"internalType":"enum TradingCardGame.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"uint256","name":"battleId","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"playerCardId","type":"uint256"},{"internalType":"uint256","name":"computerCardId","type":"uint256"},{"internalType":"uint256","name":"playerStatValue","type":"uint256"},{"internalType":"uint256","name":"computerStatValue","type":"uint256"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cardContract","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"computerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_battleId","type":"uint256"},{"internalType":"uint256","name":"_playerCardId","type":"uint256"},{"internalType":"uint256","name":"_computerCardId","type":"uint256"},{"internalType":"uint256","name":"_playerStatValue","type":"uint256"},{"internalType":"uint256","name":"_computerStatValue","type":"uint256"}],"name":"createBattle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"players","outputs":[{"internalType":"address","name":"playerAddress","type":"address"},{"internalType":"string","name":"playerName","type":"string"},{"internalType":"uint256","name":"wins","type":"uint256"},{"internalType":"uint256","name":"losses","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"registerPlayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_battleId","type":"uint256"}],"name":"resolveBattle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAddress","type":"address"}],"name":"updateComputerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_416":{"entryPoint":null,"id":416,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":144,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":252,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:699:5","nodeType":"YulBlock","src":"0:699:5","statements":[{"nativeSrc":"6:3:5","nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nativeSrc":"74:117:5","nodeType":"YulBlock","src":"74:117:5","statements":[{"nativeSrc":"84:22:5","nodeType":"YulAssignment","src":"84:22:5","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:5","nodeType":"YulIdentifier","src":"99:6:5"}],"functionName":{"name":"mload","nativeSrc":"93:5:5","nodeType":"YulIdentifier","src":"93:5:5"},"nativeSrc":"93:13:5","nodeType":"YulFunctionCall","src":"93:13:5"},"variableNames":[{"name":"value","nativeSrc":"84:5:5","nodeType":"YulIdentifier","src":"84:5:5"}]},{"body":{"nativeSrc":"169:16:5","nodeType":"YulBlock","src":"169:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:5","nodeType":"YulLiteral","src":"178:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:5","nodeType":"YulLiteral","src":"181:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:5","nodeType":"YulIdentifier","src":"171:6:5"},"nativeSrc":"171:12:5","nodeType":"YulFunctionCall","src":"171:12:5"},"nativeSrc":"171:12:5","nodeType":"YulExpressionStatement","src":"171:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:5","nodeType":"YulIdentifier","src":"128:5:5"},{"arguments":[{"name":"value","nativeSrc":"139:5:5","nodeType":"YulIdentifier","src":"139:5:5"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:5","nodeType":"YulLiteral","src":"154:3:5","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:5","nodeType":"YulLiteral","src":"159:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:5","nodeType":"YulIdentifier","src":"150:3:5"},"nativeSrc":"150:11:5","nodeType":"YulFunctionCall","src":"150:11:5"},{"kind":"number","nativeSrc":"163:1:5","nodeType":"YulLiteral","src":"163:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:5","nodeType":"YulIdentifier","src":"146:3:5"},"nativeSrc":"146:19:5","nodeType":"YulFunctionCall","src":"146:19:5"}],"functionName":{"name":"and","nativeSrc":"135:3:5","nodeType":"YulIdentifier","src":"135:3:5"},"nativeSrc":"135:31:5","nodeType":"YulFunctionCall","src":"135:31:5"}],"functionName":{"name":"eq","nativeSrc":"125:2:5","nodeType":"YulIdentifier","src":"125:2:5"},"nativeSrc":"125:42:5","nodeType":"YulFunctionCall","src":"125:42:5"}],"functionName":{"name":"iszero","nativeSrc":"118:6:5","nodeType":"YulIdentifier","src":"118:6:5"},"nativeSrc":"118:50:5","nodeType":"YulFunctionCall","src":"118:50:5"},"nativeSrc":"115:70:5","nodeType":"YulIf","src":"115:70:5"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:5","nodeType":"YulTypedName","src":"53:6:5","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:5","nodeType":"YulTypedName","src":"64:5:5","type":""}],"src":"14:177:5"},{"body":{"nativeSrc":"294:195:5","nodeType":"YulBlock","src":"294:195:5","statements":[{"body":{"nativeSrc":"340:16:5","nodeType":"YulBlock","src":"340:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:5","nodeType":"YulLiteral","src":"349:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:5","nodeType":"YulLiteral","src":"352:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:5","nodeType":"YulIdentifier","src":"342:6:5"},"nativeSrc":"342:12:5","nodeType":"YulFunctionCall","src":"342:12:5"},"nativeSrc":"342:12:5","nodeType":"YulExpressionStatement","src":"342:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:5","nodeType":"YulIdentifier","src":"315:7:5"},{"name":"headStart","nativeSrc":"324:9:5","nodeType":"YulIdentifier","src":"324:9:5"}],"functionName":{"name":"sub","nativeSrc":"311:3:5","nodeType":"YulIdentifier","src":"311:3:5"},"nativeSrc":"311:23:5","nodeType":"YulFunctionCall","src":"311:23:5"},{"kind":"number","nativeSrc":"336:2:5","nodeType":"YulLiteral","src":"336:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:5","nodeType":"YulIdentifier","src":"307:3:5"},"nativeSrc":"307:32:5","nodeType":"YulFunctionCall","src":"307:32:5"},"nativeSrc":"304:52:5","nodeType":"YulIf","src":"304:52:5"},{"nativeSrc":"365:50:5","nodeType":"YulAssignment","src":"365:50:5","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:5","nodeType":"YulIdentifier","src":"405:9:5"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:5","nodeType":"YulIdentifier","src":"375:29:5"},"nativeSrc":"375:40:5","nodeType":"YulFunctionCall","src":"375:40:5"},"variableNames":[{"name":"value0","nativeSrc":"365:6:5","nodeType":"YulIdentifier","src":"365:6:5"}]},{"nativeSrc":"424:59:5","nodeType":"YulAssignment","src":"424:59:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:5","nodeType":"YulIdentifier","src":"468:9:5"},{"kind":"number","nativeSrc":"479:2:5","nodeType":"YulLiteral","src":"479:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:5","nodeType":"YulIdentifier","src":"464:3:5"},"nativeSrc":"464:18:5","nodeType":"YulFunctionCall","src":"464:18:5"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:5","nodeType":"YulIdentifier","src":"434:29:5"},"nativeSrc":"434:49:5","nodeType":"YulFunctionCall","src":"434:49:5"},"variableNames":[{"name":"value1","nativeSrc":"424:6:5","nodeType":"YulIdentifier","src":"424:6:5"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:5","nodeType":"YulTypedName","src":"252:9:5","type":""},{"name":"dataEnd","nativeSrc":"263:7:5","nodeType":"YulTypedName","src":"263:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:5","nodeType":"YulTypedName","src":"275:6:5","type":""},{"name":"value1","nativeSrc":"283:6:5","nodeType":"YulTypedName","src":"283:6:5","type":""}],"src":"196:293:5"},{"body":{"nativeSrc":"595:102:5","nodeType":"YulBlock","src":"595:102:5","statements":[{"nativeSrc":"605:26:5","nodeType":"YulAssignment","src":"605:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:5","nodeType":"YulIdentifier","src":"617:9:5"},{"kind":"number","nativeSrc":"628:2:5","nodeType":"YulLiteral","src":"628:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:5","nodeType":"YulIdentifier","src":"613:3:5"},"nativeSrc":"613:18:5","nodeType":"YulFunctionCall","src":"613:18:5"},"variableNames":[{"name":"tail","nativeSrc":"605:4:5","nodeType":"YulIdentifier","src":"605:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:5","nodeType":"YulIdentifier","src":"647:9:5"},{"arguments":[{"name":"value0","nativeSrc":"662:6:5","nodeType":"YulIdentifier","src":"662:6:5"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"678:3:5","nodeType":"YulLiteral","src":"678:3:5","type":"","value":"160"},{"kind":"number","nativeSrc":"683:1:5","nodeType":"YulLiteral","src":"683:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"674:3:5","nodeType":"YulIdentifier","src":"674:3:5"},"nativeSrc":"674:11:5","nodeType":"YulFunctionCall","src":"674:11:5"},{"kind":"number","nativeSrc":"687:1:5","nodeType":"YulLiteral","src":"687:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"670:3:5","nodeType":"YulIdentifier","src":"670:3:5"},"nativeSrc":"670:19:5","nodeType":"YulFunctionCall","src":"670:19:5"}],"functionName":{"name":"and","nativeSrc":"658:3:5","nodeType":"YulIdentifier","src":"658:3:5"},"nativeSrc":"658:32:5","nodeType":"YulFunctionCall","src":"658:32:5"}],"functionName":{"name":"mstore","nativeSrc":"640:6:5","nodeType":"YulIdentifier","src":"640:6:5"},"nativeSrc":"640:51:5","nodeType":"YulFunctionCall","src":"640:51:5"},"nativeSrc":"640:51:5","nodeType":"YulExpressionStatement","src":"640:51:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"494:203:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:5","nodeType":"YulTypedName","src":"564:9:5","type":""},{"name":"value0","nativeSrc":"575:6:5","nodeType":"YulTypedName","src":"575:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:5","nodeType":"YulTypedName","src":"586:4:5","type":""}],"src":"494:203:5"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610f02380380610f0283398101604081905261002f916100fc565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610090565b50600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561012f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f757600080fd5b919050565b6000806040838503121561010f57600080fd5b610118836100e0565b9150610126602084016100e0565b90509250929050565b610dc48061013e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063d93705a51161005b578063d93705a5146101db578063e2eb41ff146101ee578063f2fde38b1461021157600080fd5b8063715018a6146101af5780638da5cb5b146101b7578063b3446f85146101c857600080fd5b8063606d2e96116100b2578063606d2e9614610113578063693bd2d0146101895780637016f9311461019c57600080fd5b8063255c9e6f146100ce5780633a7c2b71146100e3575b600080fd5b6100e16100dc3660046109a5565b610224565b005b6002546100f6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101756101213660046109e0565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff9095169693956001600160a01b03938416959293919290911688565b60405161010a989796959493929190610a0f565b6001546100f6906001600160a01b031681565b6100e16101aa366004610a86565b61048e565b6100e16104b8565b6000546001600160a01b03166100f6565b6100e16101d6366004610ac0565b6104cc565b6100e16101e93660046109e0565b6105eb565b6102016101fc366004610a86565b6107fd565b60405161010a9493929190610bb7565b6100e161021f366004610a86565b6108b8565b6001546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810186905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610bec565b6001600160a01b0316146103055760405162461bcd60e51b815260206004820152601760248201527f596f7520646f6e2774206f776e2074686973206361726400000000000000000060448201526064015b60405180910390fd5b600085815260046020526040902060010154156103645760405162461bcd60e51b815260206004820152601860248201527f426174746c6520494420616c726561647920657869737473000000000000000060448201526064016102fc565b6040805161010081019091528060018152602080820188905233604080840191909152606083018890526080830187905260a0830186905260c08301859052600060e09093018390528883526004909152902081518154829060ff191660018360028111156103d5576103d56109f9565b021790555060208281015160018301556040808401516002840180546001600160a01b03199081166001600160a01b0393841617909155606086015160038601556080860151600486015560a0860151600586015560c0860151600686015560e090950151600790940180549095169316929092179092558051868152918201859052339187917f7b010b92649cab9c2407084cd3618bec17673efa5ac581cd215068a8558580dc910160405180910390a35050505050565b61049661090f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6104c061090f565b6104ca6000610955565b565b33600090815260036020526040902060010180546104e990610c09565b1590506105385760405162461bcd60e51b815260206004820152601260248201527f416c72656164792072656769737465726564000000000000000000000000000060448201526064016102fc565b604080516080810182523380825260208083018581526000848601819052606085018190529283526003909152929020815181546001600160a01b0319166001600160a01b03909116178155915190919060018201906105989082610c94565b5060408281015160028301556060909201516003909101555133907f81ef79d1cda814a60c0fc60792e648a06d9c6bae67176346d1cc8b63030bfccd906105e0908490610d54565b60405180910390a250565b60008181526004602052604090206001815460ff166002811115610611576106116109f9565b1461065e5760405162461bcd60e51b815260206004820152601660248201527f426174746c65206e6f7420696e2070726f67726573730000000000000000000060448201526064016102fc565b60028101546001600160a01b031633148061068357506000546001600160a01b031633145b6106cf5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420617574686f72697a656420746f207265736f6c76650000000000000060448201526064016102fc565b8060060154816005015410156106f0576002546001600160a01b03166106ff565b60028101546001600160a01b03165b6007820180546001600160a01b039283166001600160a01b03199091168117909155825460ff191660029081178455830154909116600081815260036020526040902091036107645760028101805490600061075a83610d67565b919050555061077c565b60038101805490600061077683610d67565b91905055505b600282015460078301546001600160a01b039081169116146107ab5760028201546001600160a01b03166107b8565b6002546001600160a01b03165b60078301546040516001600160a01b03928316929091169085907fc77dc6cd4b51c8efc4af40a582ca4cf229fda505a830b4486b200ddcbdb1383f90600090a4505050565b600360205260009081526040902080546001820180546001600160a01b03909216929161082990610c09565b80601f016020809104026020016040519081016040528092919081815260200182805461085590610c09565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b5050505050908060020154908060030154905084565b6108c061090f565b6001600160a01b038116610903576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102fc565b61090c81610955565b50565b6000546001600160a01b031633146104ca576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600060a086880312156109bd57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156109f257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b610100810160038a10610a3257634e487b7160e01b600052602160045260246000fd5b98815260208101979097526001600160a01b0395861660408801526060870194909452608086019290925260a085015260c08401521660e09091015290565b6001600160a01b038116811461090c57600080fd5b600060208284031215610a9857600080fd5b8135610aa381610a71565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ad257600080fd5b813567ffffffffffffffff80821115610aea57600080fd5b818401915084601f830112610afe57600080fd5b813581811115610b1057610b10610aaa565b604051601f8201601f19908116603f01168101908382118183101715610b3857610b38610aaa565b81604052828152876020848701011115610b5157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610b9757602081850181015186830182015201610b7b565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0385168152608060208201526000610bd96080830186610b71565b6040830194909452506060015292915050565b600060208284031215610bfe57600080fd5b8151610aa381610a71565b600181811c90821680610c1d57607f821691505b602082108103610c3d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c8f576000816000526020600020601f850160051c81016020861015610c6c5750805b601f850160051c820191505b81811015610c8b57828155600101610c78565b5050505b505050565b815167ffffffffffffffff811115610cae57610cae610aaa565b610cc281610cbc8454610c09565b84610c43565b602080601f831160018114610cf75760008415610cdf5750858301515b600019600386901b1c1916600185901b178555610c8b565b600085815260208120601f198616915b82811015610d2657888601518255948401946001909101908401610d07565b5085821015610d445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610aa36020830184610b71565b600060018201610d8757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bacf57ba16eab5efc50e6967589a7af64ea1c3f384add7087ed6bd174d089c5564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF02 CODESIZE SUB DUP1 PUSH2 0xF02 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xFC JUMP JUMPDEST CALLER DUP1 PUSH2 0x55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E DUP2 PUSH2 0x90 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 DUP4 PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x126 PUSH1 0x20 DUP5 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD93705A5 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD93705A5 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xB3446F85 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x606D2E96 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x693BD2D0 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x7016F931 EQ PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x255C9E6F EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x3A7C2B71 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD PUSH1 0xFF SWAP1 SWAP6 AND SWAP7 SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 AND DUP9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E20746869732063617264000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C6520494420616C7265616479206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE DUP9 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x9F9 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 DUP8 SWAP2 PUSH32 0x7B010B92649CAB9C2407084CD3618BEC17673EFA5AC581CD215068A8558580DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x496 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x4CA PUSH1 0x0 PUSH2 0x955 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0xC09 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x0 DUP5 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x598 SWAP1 DUP3 PUSH2 0xC94 JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE MLOAD CALLER SWAP1 PUSH32 0x81EF79D1CDA814A60C0FC60792E648A06D9C6BAE67176346D1CC8B63030BFCCD SWAP1 PUSH2 0x5E0 SWAP1 DUP5 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x9F9 JUMP JUMPDEST EQ PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C65206E6F7420696E2070726F677265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x683 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207265736F6C766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR DUP5 SSTORE DUP4 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SUB PUSH2 0x764 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x75A DUP4 PUSH2 0xD67 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x77C JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x776 DUP4 PUSH2 0xD67 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x7AB JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xC77DC6CD4B51C8EFC4AF40A582CA4CF229FDA505A830B4486B200DDCBDB1383F SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x829 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x855 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x877 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x885 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x90C DUP2 PUSH2 0x955 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD PUSH1 0x3 DUP11 LT PUSH2 0xA32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAA3 DUP2 PUSH2 0xA71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB10 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB38 JUMPI PUSH2 0xB38 PUSH2 0xAAA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB97 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB7B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xBD9 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAA3 DUP2 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC1D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xC6C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC78 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCAE JUMPI PUSH2 0xCAE PUSH2 0xAAA JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xCBC DUP5 SLOAD PUSH2 0xC09 JUMP JUMPDEST DUP5 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xCDF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD07 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD44 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xCF JUMPI 0xBA AND 0xEA 0xB5 0xEF 0xC5 0xE PUSH10 0x67589A7AF64EA1C3F384 0xAD 0xD7 ADDMOD PUSH31 0xD6BD174D089C5564736F6C6343000818003300000000000000000000000000 ","sourceMap":"520:6342:4:-:0;;;3490:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3566:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:5;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3588:12:4::1;:44:::0;;-1:-1:-1;;;;;3588:44:4;;::::1;-1:-1:-1::0;;;;;;3588:44:4;;::::1;;::::0;;;3642:15:::1;:34:::0;;;;;::::1;::::0;::::1;;::::0;;520:6342;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;520:6342:4;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2319,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_276":{"entryPoint":null,"id":276,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2389,"id":146,"parameterSlots":1,"returnSlots":0},"@battles_366":{"entryPoint":null,"id":366,"parameterSlots":0,"returnSlots":0},"@cardContract_317":{"entryPoint":null,"id":317,"parameterSlots":0,"returnSlots":0},"@computerAddress_320":{"entryPoint":null,"id":320,"parameterSlots":0,"returnSlots":0},"@createBattle_521":{"entryPoint":548,"id":521,"parameterSlots":5,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@players_360":{"entryPoint":2045,"id":360,"parameterSlots":0,"returnSlots":0},"@registerPlayer_457":{"entryPoint":1228,"id":457,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1208,"id":98,"parameterSlots":0,"returnSlots":0},"@resolveBattle_621":{"entryPoint":1515,"id":621,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2232,"id":126,"parameterSlots":1,"returnSlots":0},"@updateComputerAddress_634":{"entryPoint":1166,"id":634,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":2752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256":{"entryPoint":2469,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_string":{"entryPoint":2929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2999,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC721_$264__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_BattleStatus_$354_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint8_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":2575,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3afb092d64fcfebeb1708138e27e032546cd5a67e62e6ca98cb36f26f0cc1abe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8bf3e846f44a2dc9e1f910f2fb7fa1b9c84daacdeb1187926858c401614800a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b505ce087a48417edb145c0615ec91fa53261eab7f095369a503e89e1051aada__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1c7cd9553ca65c6a2c63bd7aefffe6f98bd6a8fda9409d65aaa5406702ab21b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":3139,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3220,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3081,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":3431,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":2553,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2730,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":2673,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10356:5","nodeType":"YulBlock","src":"0:10356:5","statements":[{"nativeSrc":"6:3:5","nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nativeSrc":"152:316:5","nodeType":"YulBlock","src":"152:316:5","statements":[{"body":{"nativeSrc":"199:16:5","nodeType":"YulBlock","src":"199:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"208:1:5","nodeType":"YulLiteral","src":"208:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"211:1:5","nodeType":"YulLiteral","src":"211:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"201:6:5","nodeType":"YulIdentifier","src":"201:6:5"},"nativeSrc":"201:12:5","nodeType":"YulFunctionCall","src":"201:12:5"},"nativeSrc":"201:12:5","nodeType":"YulExpressionStatement","src":"201:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"173:7:5","nodeType":"YulIdentifier","src":"173:7:5"},{"name":"headStart","nativeSrc":"182:9:5","nodeType":"YulIdentifier","src":"182:9:5"}],"functionName":{"name":"sub","nativeSrc":"169:3:5","nodeType":"YulIdentifier","src":"169:3:5"},"nativeSrc":"169:23:5","nodeType":"YulFunctionCall","src":"169:23:5"},{"kind":"number","nativeSrc":"194:3:5","nodeType":"YulLiteral","src":"194:3:5","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"165:3:5","nodeType":"YulIdentifier","src":"165:3:5"},"nativeSrc":"165:33:5","nodeType":"YulFunctionCall","src":"165:33:5"},"nativeSrc":"162:53:5","nodeType":"YulIf","src":"162:53:5"},{"nativeSrc":"224:33:5","nodeType":"YulAssignment","src":"224:33:5","value":{"arguments":[{"name":"headStart","nativeSrc":"247:9:5","nodeType":"YulIdentifier","src":"247:9:5"}],"functionName":{"name":"calldataload","nativeSrc":"234:12:5","nodeType":"YulIdentifier","src":"234:12:5"},"nativeSrc":"234:23:5","nodeType":"YulFunctionCall","src":"234:23:5"},"variableNames":[{"name":"value0","nativeSrc":"224:6:5","nodeType":"YulIdentifier","src":"224:6:5"}]},{"nativeSrc":"266:42:5","nodeType":"YulAssignment","src":"266:42:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"293:9:5","nodeType":"YulIdentifier","src":"293:9:5"},{"kind":"number","nativeSrc":"304:2:5","nodeType":"YulLiteral","src":"304:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"289:3:5","nodeType":"YulIdentifier","src":"289:3:5"},"nativeSrc":"289:18:5","nodeType":"YulFunctionCall","src":"289:18:5"}],"functionName":{"name":"calldataload","nativeSrc":"276:12:5","nodeType":"YulIdentifier","src":"276:12:5"},"nativeSrc":"276:32:5","nodeType":"YulFunctionCall","src":"276:32:5"},"variableNames":[{"name":"value1","nativeSrc":"266:6:5","nodeType":"YulIdentifier","src":"266:6:5"}]},{"nativeSrc":"317:42:5","nodeType":"YulAssignment","src":"317:42:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"344:9:5","nodeType":"YulIdentifier","src":"344:9:5"},{"kind":"number","nativeSrc":"355:2:5","nodeType":"YulLiteral","src":"355:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"340:3:5","nodeType":"YulIdentifier","src":"340:3:5"},"nativeSrc":"340:18:5","nodeType":"YulFunctionCall","src":"340:18:5"}],"functionName":{"name":"calldataload","nativeSrc":"327:12:5","nodeType":"YulIdentifier","src":"327:12:5"},"nativeSrc":"327:32:5","nodeType":"YulFunctionCall","src":"327:32:5"},"variableNames":[{"name":"value2","nativeSrc":"317:6:5","nodeType":"YulIdentifier","src":"317:6:5"}]},{"nativeSrc":"368:42:5","nodeType":"YulAssignment","src":"368:42:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"395:9:5","nodeType":"YulIdentifier","src":"395:9:5"},{"kind":"number","nativeSrc":"406:2:5","nodeType":"YulLiteral","src":"406:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"391:3:5","nodeType":"YulIdentifier","src":"391:3:5"},"nativeSrc":"391:18:5","nodeType":"YulFunctionCall","src":"391:18:5"}],"functionName":{"name":"calldataload","nativeSrc":"378:12:5","nodeType":"YulIdentifier","src":"378:12:5"},"nativeSrc":"378:32:5","nodeType":"YulFunctionCall","src":"378:32:5"},"variableNames":[{"name":"value3","nativeSrc":"368:6:5","nodeType":"YulIdentifier","src":"368:6:5"}]},{"nativeSrc":"419:43:5","nodeType":"YulAssignment","src":"419:43:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"446:9:5","nodeType":"YulIdentifier","src":"446:9:5"},{"kind":"number","nativeSrc":"457:3:5","nodeType":"YulLiteral","src":"457:3:5","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"442:3:5","nodeType":"YulIdentifier","src":"442:3:5"},"nativeSrc":"442:19:5","nodeType":"YulFunctionCall","src":"442:19:5"}],"functionName":{"name":"calldataload","nativeSrc":"429:12:5","nodeType":"YulIdentifier","src":"429:12:5"},"nativeSrc":"429:33:5","nodeType":"YulFunctionCall","src":"429:33:5"},"variableNames":[{"name":"value4","nativeSrc":"419:6:5","nodeType":"YulIdentifier","src":"419:6:5"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256","nativeSrc":"14:454:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"86:9:5","nodeType":"YulTypedName","src":"86:9:5","type":""},{"name":"dataEnd","nativeSrc":"97:7:5","nodeType":"YulTypedName","src":"97:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"109:6:5","nodeType":"YulTypedName","src":"109:6:5","type":""},{"name":"value1","nativeSrc":"117:6:5","nodeType":"YulTypedName","src":"117:6:5","type":""},{"name":"value2","nativeSrc":"125:6:5","nodeType":"YulTypedName","src":"125:6:5","type":""},{"name":"value3","nativeSrc":"133:6:5","nodeType":"YulTypedName","src":"133:6:5","type":""},{"name":"value4","nativeSrc":"141:6:5","nodeType":"YulTypedName","src":"141:6:5","type":""}],"src":"14:454:5"},{"body":{"nativeSrc":"574:125:5","nodeType":"YulBlock","src":"574:125:5","statements":[{"nativeSrc":"584:26:5","nodeType":"YulAssignment","src":"584:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"596:9:5","nodeType":"YulIdentifier","src":"596:9:5"},{"kind":"number","nativeSrc":"607:2:5","nodeType":"YulLiteral","src":"607:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"592:3:5","nodeType":"YulIdentifier","src":"592:3:5"},"nativeSrc":"592:18:5","nodeType":"YulFunctionCall","src":"592:18:5"},"variableNames":[{"name":"tail","nativeSrc":"584:4:5","nodeType":"YulIdentifier","src":"584:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"626:9:5","nodeType":"YulIdentifier","src":"626:9:5"},{"arguments":[{"name":"value0","nativeSrc":"641:6:5","nodeType":"YulIdentifier","src":"641:6:5"},{"kind":"number","nativeSrc":"649:42:5","nodeType":"YulLiteral","src":"649:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"637:3:5","nodeType":"YulIdentifier","src":"637:3:5"},"nativeSrc":"637:55:5","nodeType":"YulFunctionCall","src":"637:55:5"}],"functionName":{"name":"mstore","nativeSrc":"619:6:5","nodeType":"YulIdentifier","src":"619:6:5"},"nativeSrc":"619:74:5","nodeType":"YulFunctionCall","src":"619:74:5"},"nativeSrc":"619:74:5","nodeType":"YulExpressionStatement","src":"619:74:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"473:226:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"543:9:5","nodeType":"YulTypedName","src":"543:9:5","type":""},{"name":"value0","nativeSrc":"554:6:5","nodeType":"YulTypedName","src":"554:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"565:4:5","nodeType":"YulTypedName","src":"565:4:5","type":""}],"src":"473:226:5"},{"body":{"nativeSrc":"774:110:5","nodeType":"YulBlock","src":"774:110:5","statements":[{"body":{"nativeSrc":"820:16:5","nodeType":"YulBlock","src":"820:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"829:1:5","nodeType":"YulLiteral","src":"829:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"832:1:5","nodeType":"YulLiteral","src":"832:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"822:6:5","nodeType":"YulIdentifier","src":"822:6:5"},"nativeSrc":"822:12:5","nodeType":"YulFunctionCall","src":"822:12:5"},"nativeSrc":"822:12:5","nodeType":"YulExpressionStatement","src":"822:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"795:7:5","nodeType":"YulIdentifier","src":"795:7:5"},{"name":"headStart","nativeSrc":"804:9:5","nodeType":"YulIdentifier","src":"804:9:5"}],"functionName":{"name":"sub","nativeSrc":"791:3:5","nodeType":"YulIdentifier","src":"791:3:5"},"nativeSrc":"791:23:5","nodeType":"YulFunctionCall","src":"791:23:5"},{"kind":"number","nativeSrc":"816:2:5","nodeType":"YulLiteral","src":"816:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"787:3:5","nodeType":"YulIdentifier","src":"787:3:5"},"nativeSrc":"787:32:5","nodeType":"YulFunctionCall","src":"787:32:5"},"nativeSrc":"784:52:5","nodeType":"YulIf","src":"784:52:5"},{"nativeSrc":"845:33:5","nodeType":"YulAssignment","src":"845:33:5","value":{"arguments":[{"name":"headStart","nativeSrc":"868:9:5","nodeType":"YulIdentifier","src":"868:9:5"}],"functionName":{"name":"calldataload","nativeSrc":"855:12:5","nodeType":"YulIdentifier","src":"855:12:5"},"nativeSrc":"855:23:5","nodeType":"YulFunctionCall","src":"855:23:5"},"variableNames":[{"name":"value0","nativeSrc":"845:6:5","nodeType":"YulIdentifier","src":"845:6:5"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"704:180:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"740:9:5","nodeType":"YulTypedName","src":"740:9:5","type":""},{"name":"dataEnd","nativeSrc":"751:7:5","nodeType":"YulTypedName","src":"751:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"763:6:5","nodeType":"YulTypedName","src":"763:6:5","type":""}],"src":"704:180:5"},{"body":{"nativeSrc":"921:152:5","nodeType":"YulBlock","src":"921:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"938:1:5","nodeType":"YulLiteral","src":"938:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"941:77:5","nodeType":"YulLiteral","src":"941:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"931:6:5","nodeType":"YulIdentifier","src":"931:6:5"},"nativeSrc":"931:88:5","nodeType":"YulFunctionCall","src":"931:88:5"},"nativeSrc":"931:88:5","nodeType":"YulExpressionStatement","src":"931:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1035:1:5","nodeType":"YulLiteral","src":"1035:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"1038:4:5","nodeType":"YulLiteral","src":"1038:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"1028:6:5","nodeType":"YulIdentifier","src":"1028:6:5"},"nativeSrc":"1028:15:5","nodeType":"YulFunctionCall","src":"1028:15:5"},"nativeSrc":"1028:15:5","nodeType":"YulExpressionStatement","src":"1028:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1059:1:5","nodeType":"YulLiteral","src":"1059:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1062:4:5","nodeType":"YulLiteral","src":"1062:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1052:6:5","nodeType":"YulIdentifier","src":"1052:6:5"},"nativeSrc":"1052:15:5","nodeType":"YulFunctionCall","src":"1052:15:5"},"nativeSrc":"1052:15:5","nodeType":"YulExpressionStatement","src":"1052:15:5"}]},"name":"panic_error_0x21","nativeSrc":"889:184:5","nodeType":"YulFunctionDefinition","src":"889:184:5"},{"body":{"nativeSrc":"1389:671:5","nodeType":"YulBlock","src":"1389:671:5","statements":[{"nativeSrc":"1399:27:5","nodeType":"YulAssignment","src":"1399:27:5","value":{"arguments":[{"name":"headStart","nativeSrc":"1411:9:5","nodeType":"YulIdentifier","src":"1411:9:5"},{"kind":"number","nativeSrc":"1422:3:5","nodeType":"YulLiteral","src":"1422:3:5","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"1407:3:5","nodeType":"YulIdentifier","src":"1407:3:5"},"nativeSrc":"1407:19:5","nodeType":"YulFunctionCall","src":"1407:19:5"},"variableNames":[{"name":"tail","nativeSrc":"1399:4:5","nodeType":"YulIdentifier","src":"1399:4:5"}]},{"body":{"nativeSrc":"1468:168:5","nodeType":"YulBlock","src":"1468:168:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1489:1:5","nodeType":"YulLiteral","src":"1489:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1492:77:5","nodeType":"YulLiteral","src":"1492:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1482:6:5","nodeType":"YulIdentifier","src":"1482:6:5"},"nativeSrc":"1482:88:5","nodeType":"YulFunctionCall","src":"1482:88:5"},"nativeSrc":"1482:88:5","nodeType":"YulExpressionStatement","src":"1482:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1590:1:5","nodeType":"YulLiteral","src":"1590:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"1593:4:5","nodeType":"YulLiteral","src":"1593:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"1583:6:5","nodeType":"YulIdentifier","src":"1583:6:5"},"nativeSrc":"1583:15:5","nodeType":"YulFunctionCall","src":"1583:15:5"},"nativeSrc":"1583:15:5","nodeType":"YulExpressionStatement","src":"1583:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1618:1:5","nodeType":"YulLiteral","src":"1618:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1621:4:5","nodeType":"YulLiteral","src":"1621:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1611:6:5","nodeType":"YulIdentifier","src":"1611:6:5"},"nativeSrc":"1611:15:5","nodeType":"YulFunctionCall","src":"1611:15:5"},"nativeSrc":"1611:15:5","nodeType":"YulExpressionStatement","src":"1611:15:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1448:6:5","nodeType":"YulIdentifier","src":"1448:6:5"},{"kind":"number","nativeSrc":"1456:1:5","nodeType":"YulLiteral","src":"1456:1:5","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"1445:2:5","nodeType":"YulIdentifier","src":"1445:2:5"},"nativeSrc":"1445:13:5","nodeType":"YulFunctionCall","src":"1445:13:5"}],"functionName":{"name":"iszero","nativeSrc":"1438:6:5","nodeType":"YulIdentifier","src":"1438:6:5"},"nativeSrc":"1438:21:5","nodeType":"YulFunctionCall","src":"1438:21:5"},"nativeSrc":"1435:201:5","nodeType":"YulIf","src":"1435:201:5"},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1652:9:5","nodeType":"YulIdentifier","src":"1652:9:5"},{"name":"value0","nativeSrc":"1663:6:5","nodeType":"YulIdentifier","src":"1663:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1645:6:5","nodeType":"YulIdentifier","src":"1645:6:5"},"nativeSrc":"1645:25:5","nodeType":"YulFunctionCall","src":"1645:25:5"},"nativeSrc":"1645:25:5","nodeType":"YulExpressionStatement","src":"1645:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1690:9:5","nodeType":"YulIdentifier","src":"1690:9:5"},{"kind":"number","nativeSrc":"1701:2:5","nodeType":"YulLiteral","src":"1701:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1686:3:5","nodeType":"YulIdentifier","src":"1686:3:5"},"nativeSrc":"1686:18:5","nodeType":"YulFunctionCall","src":"1686:18:5"},{"name":"value1","nativeSrc":"1706:6:5","nodeType":"YulIdentifier","src":"1706:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1679:6:5","nodeType":"YulIdentifier","src":"1679:6:5"},"nativeSrc":"1679:34:5","nodeType":"YulFunctionCall","src":"1679:34:5"},"nativeSrc":"1679:34:5","nodeType":"YulExpressionStatement","src":"1679:34:5"},{"nativeSrc":"1722:52:5","nodeType":"YulVariableDeclaration","src":"1722:52:5","value":{"kind":"number","nativeSrc":"1732:42:5","nodeType":"YulLiteral","src":"1732:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1726:2:5","nodeType":"YulTypedName","src":"1726:2:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1794:9:5","nodeType":"YulIdentifier","src":"1794:9:5"},{"kind":"number","nativeSrc":"1805:2:5","nodeType":"YulLiteral","src":"1805:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1790:3:5","nodeType":"YulIdentifier","src":"1790:3:5"},"nativeSrc":"1790:18:5","nodeType":"YulFunctionCall","src":"1790:18:5"},{"arguments":[{"name":"value2","nativeSrc":"1814:6:5","nodeType":"YulIdentifier","src":"1814:6:5"},{"name":"_1","nativeSrc":"1822:2:5","nodeType":"YulIdentifier","src":"1822:2:5"}],"functionName":{"name":"and","nativeSrc":"1810:3:5","nodeType":"YulIdentifier","src":"1810:3:5"},"nativeSrc":"1810:15:5","nodeType":"YulFunctionCall","src":"1810:15:5"}],"functionName":{"name":"mstore","nativeSrc":"1783:6:5","nodeType":"YulIdentifier","src":"1783:6:5"},"nativeSrc":"1783:43:5","nodeType":"YulFunctionCall","src":"1783:43:5"},"nativeSrc":"1783:43:5","nodeType":"YulExpressionStatement","src":"1783:43:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1846:9:5","nodeType":"YulIdentifier","src":"1846:9:5"},{"kind":"number","nativeSrc":"1857:2:5","nodeType":"YulLiteral","src":"1857:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1842:3:5","nodeType":"YulIdentifier","src":"1842:3:5"},"nativeSrc":"1842:18:5","nodeType":"YulFunctionCall","src":"1842:18:5"},{"name":"value3","nativeSrc":"1862:6:5","nodeType":"YulIdentifier","src":"1862:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1835:6:5","nodeType":"YulIdentifier","src":"1835:6:5"},"nativeSrc":"1835:34:5","nodeType":"YulFunctionCall","src":"1835:34:5"},"nativeSrc":"1835:34:5","nodeType":"YulExpressionStatement","src":"1835:34:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1889:9:5","nodeType":"YulIdentifier","src":"1889:9:5"},{"kind":"number","nativeSrc":"1900:3:5","nodeType":"YulLiteral","src":"1900:3:5","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1885:3:5","nodeType":"YulIdentifier","src":"1885:3:5"},"nativeSrc":"1885:19:5","nodeType":"YulFunctionCall","src":"1885:19:5"},{"name":"value4","nativeSrc":"1906:6:5","nodeType":"YulIdentifier","src":"1906:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1878:6:5","nodeType":"YulIdentifier","src":"1878:6:5"},"nativeSrc":"1878:35:5","nodeType":"YulFunctionCall","src":"1878:35:5"},"nativeSrc":"1878:35:5","nodeType":"YulExpressionStatement","src":"1878:35:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1933:9:5","nodeType":"YulIdentifier","src":"1933:9:5"},{"kind":"number","nativeSrc":"1944:3:5","nodeType":"YulLiteral","src":"1944:3:5","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"1929:3:5","nodeType":"YulIdentifier","src":"1929:3:5"},"nativeSrc":"1929:19:5","nodeType":"YulFunctionCall","src":"1929:19:5"},{"name":"value5","nativeSrc":"1950:6:5","nodeType":"YulIdentifier","src":"1950:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1922:6:5","nodeType":"YulIdentifier","src":"1922:6:5"},"nativeSrc":"1922:35:5","nodeType":"YulFunctionCall","src":"1922:35:5"},"nativeSrc":"1922:35:5","nodeType":"YulExpressionStatement","src":"1922:35:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1977:9:5","nodeType":"YulIdentifier","src":"1977:9:5"},{"kind":"number","nativeSrc":"1988:3:5","nodeType":"YulLiteral","src":"1988:3:5","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"1973:3:5","nodeType":"YulIdentifier","src":"1973:3:5"},"nativeSrc":"1973:19:5","nodeType":"YulFunctionCall","src":"1973:19:5"},{"name":"value6","nativeSrc":"1994:6:5","nodeType":"YulIdentifier","src":"1994:6:5"}],"functionName":{"name":"mstore","nativeSrc":"1966:6:5","nodeType":"YulIdentifier","src":"1966:6:5"},"nativeSrc":"1966:35:5","nodeType":"YulFunctionCall","src":"1966:35:5"},"nativeSrc":"1966:35:5","nodeType":"YulExpressionStatement","src":"1966:35:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2021:9:5","nodeType":"YulIdentifier","src":"2021:9:5"},{"kind":"number","nativeSrc":"2032:3:5","nodeType":"YulLiteral","src":"2032:3:5","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2017:3:5","nodeType":"YulIdentifier","src":"2017:3:5"},"nativeSrc":"2017:19:5","nodeType":"YulFunctionCall","src":"2017:19:5"},{"arguments":[{"name":"value7","nativeSrc":"2042:6:5","nodeType":"YulIdentifier","src":"2042:6:5"},{"name":"_1","nativeSrc":"2050:2:5","nodeType":"YulIdentifier","src":"2050:2:5"}],"functionName":{"name":"and","nativeSrc":"2038:3:5","nodeType":"YulIdentifier","src":"2038:3:5"},"nativeSrc":"2038:15:5","nodeType":"YulFunctionCall","src":"2038:15:5"}],"functionName":{"name":"mstore","nativeSrc":"2010:6:5","nodeType":"YulIdentifier","src":"2010:6:5"},"nativeSrc":"2010:44:5","nodeType":"YulFunctionCall","src":"2010:44:5"},"nativeSrc":"2010:44:5","nodeType":"YulExpressionStatement","src":"2010:44:5"}]},"name":"abi_encode_tuple_t_enum$_BattleStatus_$354_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint8_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nativeSrc":"1078:982:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1302:9:5","nodeType":"YulTypedName","src":"1302:9:5","type":""},{"name":"value7","nativeSrc":"1313:6:5","nodeType":"YulTypedName","src":"1313:6:5","type":""},{"name":"value6","nativeSrc":"1321:6:5","nodeType":"YulTypedName","src":"1321:6:5","type":""},{"name":"value5","nativeSrc":"1329:6:5","nodeType":"YulTypedName","src":"1329:6:5","type":""},{"name":"value4","nativeSrc":"1337:6:5","nodeType":"YulTypedName","src":"1337:6:5","type":""},{"name":"value3","nativeSrc":"1345:6:5","nodeType":"YulTypedName","src":"1345:6:5","type":""},{"name":"value2","nativeSrc":"1353:6:5","nodeType":"YulTypedName","src":"1353:6:5","type":""},{"name":"value1","nativeSrc":"1361:6:5","nodeType":"YulTypedName","src":"1361:6:5","type":""},{"name":"value0","nativeSrc":"1369:6:5","nodeType":"YulTypedName","src":"1369:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1380:4:5","nodeType":"YulTypedName","src":"1380:4:5","type":""}],"src":"1078:982:5"},{"body":{"nativeSrc":"2181:125:5","nodeType":"YulBlock","src":"2181:125:5","statements":[{"nativeSrc":"2191:26:5","nodeType":"YulAssignment","src":"2191:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"2203:9:5","nodeType":"YulIdentifier","src":"2203:9:5"},{"kind":"number","nativeSrc":"2214:2:5","nodeType":"YulLiteral","src":"2214:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2199:3:5","nodeType":"YulIdentifier","src":"2199:3:5"},"nativeSrc":"2199:18:5","nodeType":"YulFunctionCall","src":"2199:18:5"},"variableNames":[{"name":"tail","nativeSrc":"2191:4:5","nodeType":"YulIdentifier","src":"2191:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2233:9:5","nodeType":"YulIdentifier","src":"2233:9:5"},{"arguments":[{"name":"value0","nativeSrc":"2248:6:5","nodeType":"YulIdentifier","src":"2248:6:5"},{"kind":"number","nativeSrc":"2256:42:5","nodeType":"YulLiteral","src":"2256:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2244:3:5","nodeType":"YulIdentifier","src":"2244:3:5"},"nativeSrc":"2244:55:5","nodeType":"YulFunctionCall","src":"2244:55:5"}],"functionName":{"name":"mstore","nativeSrc":"2226:6:5","nodeType":"YulIdentifier","src":"2226:6:5"},"nativeSrc":"2226:74:5","nodeType":"YulFunctionCall","src":"2226:74:5"},"nativeSrc":"2226:74:5","nodeType":"YulExpressionStatement","src":"2226:74:5"}]},"name":"abi_encode_tuple_t_contract$_IERC721_$264__to_t_address__fromStack_reversed","nativeSrc":"2065:241:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2150:9:5","nodeType":"YulTypedName","src":"2150:9:5","type":""},{"name":"value0","nativeSrc":"2161:6:5","nodeType":"YulTypedName","src":"2161:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2172:4:5","nodeType":"YulTypedName","src":"2172:4:5","type":""}],"src":"2065:241:5"},{"body":{"nativeSrc":"2356:109:5","nodeType":"YulBlock","src":"2356:109:5","statements":[{"body":{"nativeSrc":"2443:16:5","nodeType":"YulBlock","src":"2443:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2452:1:5","nodeType":"YulLiteral","src":"2452:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"2455:1:5","nodeType":"YulLiteral","src":"2455:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2445:6:5","nodeType":"YulIdentifier","src":"2445:6:5"},"nativeSrc":"2445:12:5","nodeType":"YulFunctionCall","src":"2445:12:5"},"nativeSrc":"2445:12:5","nodeType":"YulExpressionStatement","src":"2445:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2379:5:5","nodeType":"YulIdentifier","src":"2379:5:5"},{"arguments":[{"name":"value","nativeSrc":"2390:5:5","nodeType":"YulIdentifier","src":"2390:5:5"},{"kind":"number","nativeSrc":"2397:42:5","nodeType":"YulLiteral","src":"2397:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2386:3:5","nodeType":"YulIdentifier","src":"2386:3:5"},"nativeSrc":"2386:54:5","nodeType":"YulFunctionCall","src":"2386:54:5"}],"functionName":{"name":"eq","nativeSrc":"2376:2:5","nodeType":"YulIdentifier","src":"2376:2:5"},"nativeSrc":"2376:65:5","nodeType":"YulFunctionCall","src":"2376:65:5"}],"functionName":{"name":"iszero","nativeSrc":"2369:6:5","nodeType":"YulIdentifier","src":"2369:6:5"},"nativeSrc":"2369:73:5","nodeType":"YulFunctionCall","src":"2369:73:5"},"nativeSrc":"2366:93:5","nodeType":"YulIf","src":"2366:93:5"}]},"name":"validator_revert_address","nativeSrc":"2311:154:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2345:5:5","nodeType":"YulTypedName","src":"2345:5:5","type":""}],"src":"2311:154:5"},{"body":{"nativeSrc":"2540:177:5","nodeType":"YulBlock","src":"2540:177:5","statements":[{"body":{"nativeSrc":"2586:16:5","nodeType":"YulBlock","src":"2586:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2595:1:5","nodeType":"YulLiteral","src":"2595:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"2598:1:5","nodeType":"YulLiteral","src":"2598:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2588:6:5","nodeType":"YulIdentifier","src":"2588:6:5"},"nativeSrc":"2588:12:5","nodeType":"YulFunctionCall","src":"2588:12:5"},"nativeSrc":"2588:12:5","nodeType":"YulExpressionStatement","src":"2588:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2561:7:5","nodeType":"YulIdentifier","src":"2561:7:5"},{"name":"headStart","nativeSrc":"2570:9:5","nodeType":"YulIdentifier","src":"2570:9:5"}],"functionName":{"name":"sub","nativeSrc":"2557:3:5","nodeType":"YulIdentifier","src":"2557:3:5"},"nativeSrc":"2557:23:5","nodeType":"YulFunctionCall","src":"2557:23:5"},{"kind":"number","nativeSrc":"2582:2:5","nodeType":"YulLiteral","src":"2582:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2553:3:5","nodeType":"YulIdentifier","src":"2553:3:5"},"nativeSrc":"2553:32:5","nodeType":"YulFunctionCall","src":"2553:32:5"},"nativeSrc":"2550:52:5","nodeType":"YulIf","src":"2550:52:5"},{"nativeSrc":"2611:36:5","nodeType":"YulVariableDeclaration","src":"2611:36:5","value":{"arguments":[{"name":"headStart","nativeSrc":"2637:9:5","nodeType":"YulIdentifier","src":"2637:9:5"}],"functionName":{"name":"calldataload","nativeSrc":"2624:12:5","nodeType":"YulIdentifier","src":"2624:12:5"},"nativeSrc":"2624:23:5","nodeType":"YulFunctionCall","src":"2624:23:5"},"variables":[{"name":"value","nativeSrc":"2615:5:5","nodeType":"YulTypedName","src":"2615:5:5","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2681:5:5","nodeType":"YulIdentifier","src":"2681:5:5"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2656:24:5","nodeType":"YulIdentifier","src":"2656:24:5"},"nativeSrc":"2656:31:5","nodeType":"YulFunctionCall","src":"2656:31:5"},"nativeSrc":"2656:31:5","nodeType":"YulExpressionStatement","src":"2656:31:5"},{"nativeSrc":"2696:15:5","nodeType":"YulAssignment","src":"2696:15:5","value":{"name":"value","nativeSrc":"2706:5:5","nodeType":"YulIdentifier","src":"2706:5:5"},"variableNames":[{"name":"value0","nativeSrc":"2696:6:5","nodeType":"YulIdentifier","src":"2696:6:5"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2470:247:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2506:9:5","nodeType":"YulTypedName","src":"2506:9:5","type":""},{"name":"dataEnd","nativeSrc":"2517:7:5","nodeType":"YulTypedName","src":"2517:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2529:6:5","nodeType":"YulTypedName","src":"2529:6:5","type":""}],"src":"2470:247:5"},{"body":{"nativeSrc":"2754:152:5","nodeType":"YulBlock","src":"2754:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2771:1:5","nodeType":"YulLiteral","src":"2771:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"2774:77:5","nodeType":"YulLiteral","src":"2774:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2764:6:5","nodeType":"YulIdentifier","src":"2764:6:5"},"nativeSrc":"2764:88:5","nodeType":"YulFunctionCall","src":"2764:88:5"},"nativeSrc":"2764:88:5","nodeType":"YulExpressionStatement","src":"2764:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2868:1:5","nodeType":"YulLiteral","src":"2868:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"2871:4:5","nodeType":"YulLiteral","src":"2871:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2861:6:5","nodeType":"YulIdentifier","src":"2861:6:5"},"nativeSrc":"2861:15:5","nodeType":"YulFunctionCall","src":"2861:15:5"},"nativeSrc":"2861:15:5","nodeType":"YulExpressionStatement","src":"2861:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2892:1:5","nodeType":"YulLiteral","src":"2892:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"2895:4:5","nodeType":"YulLiteral","src":"2895:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2885:6:5","nodeType":"YulIdentifier","src":"2885:6:5"},"nativeSrc":"2885:15:5","nodeType":"YulFunctionCall","src":"2885:15:5"},"nativeSrc":"2885:15:5","nodeType":"YulExpressionStatement","src":"2885:15:5"}]},"name":"panic_error_0x41","nativeSrc":"2722:184:5","nodeType":"YulFunctionDefinition","src":"2722:184:5"},{"body":{"nativeSrc":"2991:842:5","nodeType":"YulBlock","src":"2991:842:5","statements":[{"body":{"nativeSrc":"3037:16:5","nodeType":"YulBlock","src":"3037:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3046:1:5","nodeType":"YulLiteral","src":"3046:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3049:1:5","nodeType":"YulLiteral","src":"3049:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3039:6:5","nodeType":"YulIdentifier","src":"3039:6:5"},"nativeSrc":"3039:12:5","nodeType":"YulFunctionCall","src":"3039:12:5"},"nativeSrc":"3039:12:5","nodeType":"YulExpressionStatement","src":"3039:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3012:7:5","nodeType":"YulIdentifier","src":"3012:7:5"},{"name":"headStart","nativeSrc":"3021:9:5","nodeType":"YulIdentifier","src":"3021:9:5"}],"functionName":{"name":"sub","nativeSrc":"3008:3:5","nodeType":"YulIdentifier","src":"3008:3:5"},"nativeSrc":"3008:23:5","nodeType":"YulFunctionCall","src":"3008:23:5"},{"kind":"number","nativeSrc":"3033:2:5","nodeType":"YulLiteral","src":"3033:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3004:3:5","nodeType":"YulIdentifier","src":"3004:3:5"},"nativeSrc":"3004:32:5","nodeType":"YulFunctionCall","src":"3004:32:5"},"nativeSrc":"3001:52:5","nodeType":"YulIf","src":"3001:52:5"},{"nativeSrc":"3062:37:5","nodeType":"YulVariableDeclaration","src":"3062:37:5","value":{"arguments":[{"name":"headStart","nativeSrc":"3089:9:5","nodeType":"YulIdentifier","src":"3089:9:5"}],"functionName":{"name":"calldataload","nativeSrc":"3076:12:5","nodeType":"YulIdentifier","src":"3076:12:5"},"nativeSrc":"3076:23:5","nodeType":"YulFunctionCall","src":"3076:23:5"},"variables":[{"name":"offset","nativeSrc":"3066:6:5","nodeType":"YulTypedName","src":"3066:6:5","type":""}]},{"nativeSrc":"3108:28:5","nodeType":"YulVariableDeclaration","src":"3108:28:5","value":{"kind":"number","nativeSrc":"3118:18:5","nodeType":"YulLiteral","src":"3118:18:5","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3112:2:5","nodeType":"YulTypedName","src":"3112:2:5","type":""}]},{"body":{"nativeSrc":"3163:16:5","nodeType":"YulBlock","src":"3163:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3172:1:5","nodeType":"YulLiteral","src":"3172:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3175:1:5","nodeType":"YulLiteral","src":"3175:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3165:6:5","nodeType":"YulIdentifier","src":"3165:6:5"},"nativeSrc":"3165:12:5","nodeType":"YulFunctionCall","src":"3165:12:5"},"nativeSrc":"3165:12:5","nodeType":"YulExpressionStatement","src":"3165:12:5"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3151:6:5","nodeType":"YulIdentifier","src":"3151:6:5"},{"name":"_1","nativeSrc":"3159:2:5","nodeType":"YulIdentifier","src":"3159:2:5"}],"functionName":{"name":"gt","nativeSrc":"3148:2:5","nodeType":"YulIdentifier","src":"3148:2:5"},"nativeSrc":"3148:14:5","nodeType":"YulFunctionCall","src":"3148:14:5"},"nativeSrc":"3145:34:5","nodeType":"YulIf","src":"3145:34:5"},{"nativeSrc":"3188:32:5","nodeType":"YulVariableDeclaration","src":"3188:32:5","value":{"arguments":[{"name":"headStart","nativeSrc":"3202:9:5","nodeType":"YulIdentifier","src":"3202:9:5"},{"name":"offset","nativeSrc":"3213:6:5","nodeType":"YulIdentifier","src":"3213:6:5"}],"functionName":{"name":"add","nativeSrc":"3198:3:5","nodeType":"YulIdentifier","src":"3198:3:5"},"nativeSrc":"3198:22:5","nodeType":"YulFunctionCall","src":"3198:22:5"},"variables":[{"name":"_2","nativeSrc":"3192:2:5","nodeType":"YulTypedName","src":"3192:2:5","type":""}]},{"body":{"nativeSrc":"3268:16:5","nodeType":"YulBlock","src":"3268:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3277:1:5","nodeType":"YulLiteral","src":"3277:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3280:1:5","nodeType":"YulLiteral","src":"3280:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3270:6:5","nodeType":"YulIdentifier","src":"3270:6:5"},"nativeSrc":"3270:12:5","nodeType":"YulFunctionCall","src":"3270:12:5"},"nativeSrc":"3270:12:5","nodeType":"YulExpressionStatement","src":"3270:12:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3247:2:5","nodeType":"YulIdentifier","src":"3247:2:5"},{"kind":"number","nativeSrc":"3251:4:5","nodeType":"YulLiteral","src":"3251:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3243:3:5","nodeType":"YulIdentifier","src":"3243:3:5"},"nativeSrc":"3243:13:5","nodeType":"YulFunctionCall","src":"3243:13:5"},{"name":"dataEnd","nativeSrc":"3258:7:5","nodeType":"YulIdentifier","src":"3258:7:5"}],"functionName":{"name":"slt","nativeSrc":"3239:3:5","nodeType":"YulIdentifier","src":"3239:3:5"},"nativeSrc":"3239:27:5","nodeType":"YulFunctionCall","src":"3239:27:5"}],"functionName":{"name":"iszero","nativeSrc":"3232:6:5","nodeType":"YulIdentifier","src":"3232:6:5"},"nativeSrc":"3232:35:5","nodeType":"YulFunctionCall","src":"3232:35:5"},"nativeSrc":"3229:55:5","nodeType":"YulIf","src":"3229:55:5"},{"nativeSrc":"3293:26:5","nodeType":"YulVariableDeclaration","src":"3293:26:5","value":{"arguments":[{"name":"_2","nativeSrc":"3316:2:5","nodeType":"YulIdentifier","src":"3316:2:5"}],"functionName":{"name":"calldataload","nativeSrc":"3303:12:5","nodeType":"YulIdentifier","src":"3303:12:5"},"nativeSrc":"3303:16:5","nodeType":"YulFunctionCall","src":"3303:16:5"},"variables":[{"name":"_3","nativeSrc":"3297:2:5","nodeType":"YulTypedName","src":"3297:2:5","type":""}]},{"body":{"nativeSrc":"3342:22:5","nodeType":"YulBlock","src":"3342:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3344:16:5","nodeType":"YulIdentifier","src":"3344:16:5"},"nativeSrc":"3344:18:5","nodeType":"YulFunctionCall","src":"3344:18:5"},"nativeSrc":"3344:18:5","nodeType":"YulExpressionStatement","src":"3344:18:5"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"3334:2:5","nodeType":"YulIdentifier","src":"3334:2:5"},{"name":"_1","nativeSrc":"3338:2:5","nodeType":"YulIdentifier","src":"3338:2:5"}],"functionName":{"name":"gt","nativeSrc":"3331:2:5","nodeType":"YulIdentifier","src":"3331:2:5"},"nativeSrc":"3331:10:5","nodeType":"YulFunctionCall","src":"3331:10:5"},"nativeSrc":"3328:36:5","nodeType":"YulIf","src":"3328:36:5"},{"nativeSrc":"3373:17:5","nodeType":"YulVariableDeclaration","src":"3373:17:5","value":{"arguments":[{"kind":"number","nativeSrc":"3387:2:5","nodeType":"YulLiteral","src":"3387:2:5","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3383:3:5","nodeType":"YulIdentifier","src":"3383:3:5"},"nativeSrc":"3383:7:5","nodeType":"YulFunctionCall","src":"3383:7:5"},"variables":[{"name":"_4","nativeSrc":"3377:2:5","nodeType":"YulTypedName","src":"3377:2:5","type":""}]},{"nativeSrc":"3399:23:5","nodeType":"YulVariableDeclaration","src":"3399:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"3419:2:5","nodeType":"YulLiteral","src":"3419:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3413:5:5","nodeType":"YulIdentifier","src":"3413:5:5"},"nativeSrc":"3413:9:5","nodeType":"YulFunctionCall","src":"3413:9:5"},"variables":[{"name":"memPtr","nativeSrc":"3403:6:5","nodeType":"YulTypedName","src":"3403:6:5","type":""}]},{"nativeSrc":"3431:71:5","nodeType":"YulVariableDeclaration","src":"3431:71:5","value":{"arguments":[{"name":"memPtr","nativeSrc":"3453:6:5","nodeType":"YulIdentifier","src":"3453:6:5"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3477:2:5","nodeType":"YulIdentifier","src":"3477:2:5"},{"kind":"number","nativeSrc":"3481:4:5","nodeType":"YulLiteral","src":"3481:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3473:3:5","nodeType":"YulIdentifier","src":"3473:3:5"},"nativeSrc":"3473:13:5","nodeType":"YulFunctionCall","src":"3473:13:5"},{"name":"_4","nativeSrc":"3488:2:5","nodeType":"YulIdentifier","src":"3488:2:5"}],"functionName":{"name":"and","nativeSrc":"3469:3:5","nodeType":"YulIdentifier","src":"3469:3:5"},"nativeSrc":"3469:22:5","nodeType":"YulFunctionCall","src":"3469:22:5"},{"kind":"number","nativeSrc":"3493:2:5","nodeType":"YulLiteral","src":"3493:2:5","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3465:3:5","nodeType":"YulIdentifier","src":"3465:3:5"},"nativeSrc":"3465:31:5","nodeType":"YulFunctionCall","src":"3465:31:5"},{"name":"_4","nativeSrc":"3498:2:5","nodeType":"YulIdentifier","src":"3498:2:5"}],"functionName":{"name":"and","nativeSrc":"3461:3:5","nodeType":"YulIdentifier","src":"3461:3:5"},"nativeSrc":"3461:40:5","nodeType":"YulFunctionCall","src":"3461:40:5"}],"functionName":{"name":"add","nativeSrc":"3449:3:5","nodeType":"YulIdentifier","src":"3449:3:5"},"nativeSrc":"3449:53:5","nodeType":"YulFunctionCall","src":"3449:53:5"},"variables":[{"name":"newFreePtr","nativeSrc":"3435:10:5","nodeType":"YulTypedName","src":"3435:10:5","type":""}]},{"body":{"nativeSrc":"3561:22:5","nodeType":"YulBlock","src":"3561:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3563:16:5","nodeType":"YulIdentifier","src":"3563:16:5"},"nativeSrc":"3563:18:5","nodeType":"YulFunctionCall","src":"3563:18:5"},"nativeSrc":"3563:18:5","nodeType":"YulExpressionStatement","src":"3563:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3520:10:5","nodeType":"YulIdentifier","src":"3520:10:5"},{"name":"_1","nativeSrc":"3532:2:5","nodeType":"YulIdentifier","src":"3532:2:5"}],"functionName":{"name":"gt","nativeSrc":"3517:2:5","nodeType":"YulIdentifier","src":"3517:2:5"},"nativeSrc":"3517:18:5","nodeType":"YulFunctionCall","src":"3517:18:5"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3540:10:5","nodeType":"YulIdentifier","src":"3540:10:5"},{"name":"memPtr","nativeSrc":"3552:6:5","nodeType":"YulIdentifier","src":"3552:6:5"}],"functionName":{"name":"lt","nativeSrc":"3537:2:5","nodeType":"YulIdentifier","src":"3537:2:5"},"nativeSrc":"3537:22:5","nodeType":"YulFunctionCall","src":"3537:22:5"}],"functionName":{"name":"or","nativeSrc":"3514:2:5","nodeType":"YulIdentifier","src":"3514:2:5"},"nativeSrc":"3514:46:5","nodeType":"YulFunctionCall","src":"3514:46:5"},"nativeSrc":"3511:72:5","nodeType":"YulIf","src":"3511:72:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3599:2:5","nodeType":"YulLiteral","src":"3599:2:5","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3603:10:5","nodeType":"YulIdentifier","src":"3603:10:5"}],"functionName":{"name":"mstore","nativeSrc":"3592:6:5","nodeType":"YulIdentifier","src":"3592:6:5"},"nativeSrc":"3592:22:5","nodeType":"YulFunctionCall","src":"3592:22:5"},"nativeSrc":"3592:22:5","nodeType":"YulExpressionStatement","src":"3592:22:5"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3630:6:5","nodeType":"YulIdentifier","src":"3630:6:5"},{"name":"_3","nativeSrc":"3638:2:5","nodeType":"YulIdentifier","src":"3638:2:5"}],"functionName":{"name":"mstore","nativeSrc":"3623:6:5","nodeType":"YulIdentifier","src":"3623:6:5"},"nativeSrc":"3623:18:5","nodeType":"YulFunctionCall","src":"3623:18:5"},"nativeSrc":"3623:18:5","nodeType":"YulExpressionStatement","src":"3623:18:5"},{"body":{"nativeSrc":"3687:16:5","nodeType":"YulBlock","src":"3687:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3696:1:5","nodeType":"YulLiteral","src":"3696:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3699:1:5","nodeType":"YulLiteral","src":"3699:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3689:6:5","nodeType":"YulIdentifier","src":"3689:6:5"},"nativeSrc":"3689:12:5","nodeType":"YulFunctionCall","src":"3689:12:5"},"nativeSrc":"3689:12:5","nodeType":"YulExpressionStatement","src":"3689:12:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3664:2:5","nodeType":"YulIdentifier","src":"3664:2:5"},{"name":"_3","nativeSrc":"3668:2:5","nodeType":"YulIdentifier","src":"3668:2:5"}],"functionName":{"name":"add","nativeSrc":"3660:3:5","nodeType":"YulIdentifier","src":"3660:3:5"},"nativeSrc":"3660:11:5","nodeType":"YulFunctionCall","src":"3660:11:5"},{"kind":"number","nativeSrc":"3673:2:5","nodeType":"YulLiteral","src":"3673:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3656:3:5","nodeType":"YulIdentifier","src":"3656:3:5"},"nativeSrc":"3656:20:5","nodeType":"YulFunctionCall","src":"3656:20:5"},{"name":"dataEnd","nativeSrc":"3678:7:5","nodeType":"YulIdentifier","src":"3678:7:5"}],"functionName":{"name":"gt","nativeSrc":"3653:2:5","nodeType":"YulIdentifier","src":"3653:2:5"},"nativeSrc":"3653:33:5","nodeType":"YulFunctionCall","src":"3653:33:5"},"nativeSrc":"3650:53:5","nodeType":"YulIf","src":"3650:53:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3729:6:5","nodeType":"YulIdentifier","src":"3729:6:5"},{"kind":"number","nativeSrc":"3737:2:5","nodeType":"YulLiteral","src":"3737:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3725:3:5","nodeType":"YulIdentifier","src":"3725:3:5"},"nativeSrc":"3725:15:5","nodeType":"YulFunctionCall","src":"3725:15:5"},{"arguments":[{"name":"_2","nativeSrc":"3746:2:5","nodeType":"YulIdentifier","src":"3746:2:5"},{"kind":"number","nativeSrc":"3750:2:5","nodeType":"YulLiteral","src":"3750:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3742:3:5","nodeType":"YulIdentifier","src":"3742:3:5"},"nativeSrc":"3742:11:5","nodeType":"YulFunctionCall","src":"3742:11:5"},{"name":"_3","nativeSrc":"3755:2:5","nodeType":"YulIdentifier","src":"3755:2:5"}],"functionName":{"name":"calldatacopy","nativeSrc":"3712:12:5","nodeType":"YulIdentifier","src":"3712:12:5"},"nativeSrc":"3712:46:5","nodeType":"YulFunctionCall","src":"3712:46:5"},"nativeSrc":"3712:46:5","nodeType":"YulExpressionStatement","src":"3712:46:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3782:6:5","nodeType":"YulIdentifier","src":"3782:6:5"},{"name":"_3","nativeSrc":"3790:2:5","nodeType":"YulIdentifier","src":"3790:2:5"}],"functionName":{"name":"add","nativeSrc":"3778:3:5","nodeType":"YulIdentifier","src":"3778:3:5"},"nativeSrc":"3778:15:5","nodeType":"YulFunctionCall","src":"3778:15:5"},{"kind":"number","nativeSrc":"3795:2:5","nodeType":"YulLiteral","src":"3795:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3774:3:5","nodeType":"YulIdentifier","src":"3774:3:5"},"nativeSrc":"3774:24:5","nodeType":"YulFunctionCall","src":"3774:24:5"},{"kind":"number","nativeSrc":"3800:1:5","nodeType":"YulLiteral","src":"3800:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3767:6:5","nodeType":"YulIdentifier","src":"3767:6:5"},"nativeSrc":"3767:35:5","nodeType":"YulFunctionCall","src":"3767:35:5"},"nativeSrc":"3767:35:5","nodeType":"YulExpressionStatement","src":"3767:35:5"},{"nativeSrc":"3811:16:5","nodeType":"YulAssignment","src":"3811:16:5","value":{"name":"memPtr","nativeSrc":"3821:6:5","nodeType":"YulIdentifier","src":"3821:6:5"},"variableNames":[{"name":"value0","nativeSrc":"3811:6:5","nodeType":"YulIdentifier","src":"3811:6:5"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"2911:922:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2957:9:5","nodeType":"YulTypedName","src":"2957:9:5","type":""},{"name":"dataEnd","nativeSrc":"2968:7:5","nodeType":"YulTypedName","src":"2968:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2980:6:5","nodeType":"YulTypedName","src":"2980:6:5","type":""}],"src":"2911:922:5"},{"body":{"nativeSrc":"3888:373:5","nodeType":"YulBlock","src":"3888:373:5","statements":[{"nativeSrc":"3898:26:5","nodeType":"YulVariableDeclaration","src":"3898:26:5","value":{"arguments":[{"name":"value","nativeSrc":"3918:5:5","nodeType":"YulIdentifier","src":"3918:5:5"}],"functionName":{"name":"mload","nativeSrc":"3912:5:5","nodeType":"YulIdentifier","src":"3912:5:5"},"nativeSrc":"3912:12:5","nodeType":"YulFunctionCall","src":"3912:12:5"},"variables":[{"name":"length","nativeSrc":"3902:6:5","nodeType":"YulTypedName","src":"3902:6:5","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3940:3:5","nodeType":"YulIdentifier","src":"3940:3:5"},{"name":"length","nativeSrc":"3945:6:5","nodeType":"YulIdentifier","src":"3945:6:5"}],"functionName":{"name":"mstore","nativeSrc":"3933:6:5","nodeType":"YulIdentifier","src":"3933:6:5"},"nativeSrc":"3933:19:5","nodeType":"YulFunctionCall","src":"3933:19:5"},"nativeSrc":"3933:19:5","nodeType":"YulExpressionStatement","src":"3933:19:5"},{"nativeSrc":"3961:10:5","nodeType":"YulVariableDeclaration","src":"3961:10:5","value":{"kind":"number","nativeSrc":"3970:1:5","nodeType":"YulLiteral","src":"3970:1:5","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3965:1:5","nodeType":"YulTypedName","src":"3965:1:5","type":""}]},{"body":{"nativeSrc":"4032:110:5","nodeType":"YulBlock","src":"4032:110:5","statements":[{"nativeSrc":"4046:14:5","nodeType":"YulVariableDeclaration","src":"4046:14:5","value":{"kind":"number","nativeSrc":"4056:4:5","nodeType":"YulLiteral","src":"4056:4:5","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"4050:2:5","nodeType":"YulTypedName","src":"4050:2:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4088:3:5","nodeType":"YulIdentifier","src":"4088:3:5"},{"name":"i","nativeSrc":"4093:1:5","nodeType":"YulIdentifier","src":"4093:1:5"}],"functionName":{"name":"add","nativeSrc":"4084:3:5","nodeType":"YulIdentifier","src":"4084:3:5"},"nativeSrc":"4084:11:5","nodeType":"YulFunctionCall","src":"4084:11:5"},{"name":"_1","nativeSrc":"4097:2:5","nodeType":"YulIdentifier","src":"4097:2:5"}],"functionName":{"name":"add","nativeSrc":"4080:3:5","nodeType":"YulIdentifier","src":"4080:3:5"},"nativeSrc":"4080:20:5","nodeType":"YulFunctionCall","src":"4080:20:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4116:5:5","nodeType":"YulIdentifier","src":"4116:5:5"},{"name":"i","nativeSrc":"4123:1:5","nodeType":"YulIdentifier","src":"4123:1:5"}],"functionName":{"name":"add","nativeSrc":"4112:3:5","nodeType":"YulIdentifier","src":"4112:3:5"},"nativeSrc":"4112:13:5","nodeType":"YulFunctionCall","src":"4112:13:5"},{"name":"_1","nativeSrc":"4127:2:5","nodeType":"YulIdentifier","src":"4127:2:5"}],"functionName":{"name":"add","nativeSrc":"4108:3:5","nodeType":"YulIdentifier","src":"4108:3:5"},"nativeSrc":"4108:22:5","nodeType":"YulFunctionCall","src":"4108:22:5"}],"functionName":{"name":"mload","nativeSrc":"4102:5:5","nodeType":"YulIdentifier","src":"4102:5:5"},"nativeSrc":"4102:29:5","nodeType":"YulFunctionCall","src":"4102:29:5"}],"functionName":{"name":"mstore","nativeSrc":"4073:6:5","nodeType":"YulIdentifier","src":"4073:6:5"},"nativeSrc":"4073:59:5","nodeType":"YulFunctionCall","src":"4073:59:5"},"nativeSrc":"4073:59:5","nodeType":"YulExpressionStatement","src":"4073:59:5"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3991:1:5","nodeType":"YulIdentifier","src":"3991:1:5"},{"name":"length","nativeSrc":"3994:6:5","nodeType":"YulIdentifier","src":"3994:6:5"}],"functionName":{"name":"lt","nativeSrc":"3988:2:5","nodeType":"YulIdentifier","src":"3988:2:5"},"nativeSrc":"3988:13:5","nodeType":"YulFunctionCall","src":"3988:13:5"},"nativeSrc":"3980:162:5","nodeType":"YulForLoop","post":{"nativeSrc":"4002:21:5","nodeType":"YulBlock","src":"4002:21:5","statements":[{"nativeSrc":"4004:17:5","nodeType":"YulAssignment","src":"4004:17:5","value":{"arguments":[{"name":"i","nativeSrc":"4013:1:5","nodeType":"YulIdentifier","src":"4013:1:5"},{"kind":"number","nativeSrc":"4016:4:5","nodeType":"YulLiteral","src":"4016:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4009:3:5","nodeType":"YulIdentifier","src":"4009:3:5"},"nativeSrc":"4009:12:5","nodeType":"YulFunctionCall","src":"4009:12:5"},"variableNames":[{"name":"i","nativeSrc":"4004:1:5","nodeType":"YulIdentifier","src":"4004:1:5"}]}]},"pre":{"nativeSrc":"3984:3:5","nodeType":"YulBlock","src":"3984:3:5","statements":[]},"src":"3980:162:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4166:3:5","nodeType":"YulIdentifier","src":"4166:3:5"},{"name":"length","nativeSrc":"4171:6:5","nodeType":"YulIdentifier","src":"4171:6:5"}],"functionName":{"name":"add","nativeSrc":"4162:3:5","nodeType":"YulIdentifier","src":"4162:3:5"},"nativeSrc":"4162:16:5","nodeType":"YulFunctionCall","src":"4162:16:5"},{"kind":"number","nativeSrc":"4180:4:5","nodeType":"YulLiteral","src":"4180:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4158:3:5","nodeType":"YulIdentifier","src":"4158:3:5"},"nativeSrc":"4158:27:5","nodeType":"YulFunctionCall","src":"4158:27:5"},{"kind":"number","nativeSrc":"4187:1:5","nodeType":"YulLiteral","src":"4187:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4151:6:5","nodeType":"YulIdentifier","src":"4151:6:5"},"nativeSrc":"4151:38:5","nodeType":"YulFunctionCall","src":"4151:38:5"},"nativeSrc":"4151:38:5","nodeType":"YulExpressionStatement","src":"4151:38:5"},{"nativeSrc":"4198:57:5","nodeType":"YulAssignment","src":"4198:57:5","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4213:3:5","nodeType":"YulIdentifier","src":"4213:3:5"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4226:6:5","nodeType":"YulIdentifier","src":"4226:6:5"},{"kind":"number","nativeSrc":"4234:2:5","nodeType":"YulLiteral","src":"4234:2:5","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4222:3:5","nodeType":"YulIdentifier","src":"4222:3:5"},"nativeSrc":"4222:15:5","nodeType":"YulFunctionCall","src":"4222:15:5"},{"arguments":[{"kind":"number","nativeSrc":"4243:2:5","nodeType":"YulLiteral","src":"4243:2:5","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4239:3:5","nodeType":"YulIdentifier","src":"4239:3:5"},"nativeSrc":"4239:7:5","nodeType":"YulFunctionCall","src":"4239:7:5"}],"functionName":{"name":"and","nativeSrc":"4218:3:5","nodeType":"YulIdentifier","src":"4218:3:5"},"nativeSrc":"4218:29:5","nodeType":"YulFunctionCall","src":"4218:29:5"}],"functionName":{"name":"add","nativeSrc":"4209:3:5","nodeType":"YulIdentifier","src":"4209:3:5"},"nativeSrc":"4209:39:5","nodeType":"YulFunctionCall","src":"4209:39:5"},{"kind":"number","nativeSrc":"4250:4:5","nodeType":"YulLiteral","src":"4250:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4205:3:5","nodeType":"YulIdentifier","src":"4205:3:5"},"nativeSrc":"4205:50:5","nodeType":"YulFunctionCall","src":"4205:50:5"},"variableNames":[{"name":"end","nativeSrc":"4198:3:5","nodeType":"YulIdentifier","src":"4198:3:5"}]}]},"name":"abi_encode_string","nativeSrc":"3838:423:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3865:5:5","nodeType":"YulTypedName","src":"3865:5:5","type":""},{"name":"pos","nativeSrc":"3872:3:5","nodeType":"YulTypedName","src":"3872:3:5","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3880:3:5","nodeType":"YulTypedName","src":"3880:3:5","type":""}],"src":"3838:423:5"},{"body":{"nativeSrc":"4471:279:5","nodeType":"YulBlock","src":"4471:279:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4488:9:5","nodeType":"YulIdentifier","src":"4488:9:5"},{"arguments":[{"name":"value0","nativeSrc":"4503:6:5","nodeType":"YulIdentifier","src":"4503:6:5"},{"kind":"number","nativeSrc":"4511:42:5","nodeType":"YulLiteral","src":"4511:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4499:3:5","nodeType":"YulIdentifier","src":"4499:3:5"},"nativeSrc":"4499:55:5","nodeType":"YulFunctionCall","src":"4499:55:5"}],"functionName":{"name":"mstore","nativeSrc":"4481:6:5","nodeType":"YulIdentifier","src":"4481:6:5"},"nativeSrc":"4481:74:5","nodeType":"YulFunctionCall","src":"4481:74:5"},"nativeSrc":"4481:74:5","nodeType":"YulExpressionStatement","src":"4481:74:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4575:9:5","nodeType":"YulIdentifier","src":"4575:9:5"},{"kind":"number","nativeSrc":"4586:2:5","nodeType":"YulLiteral","src":"4586:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4571:3:5","nodeType":"YulIdentifier","src":"4571:3:5"},"nativeSrc":"4571:18:5","nodeType":"YulFunctionCall","src":"4571:18:5"},{"kind":"number","nativeSrc":"4591:3:5","nodeType":"YulLiteral","src":"4591:3:5","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"4564:6:5","nodeType":"YulIdentifier","src":"4564:6:5"},"nativeSrc":"4564:31:5","nodeType":"YulFunctionCall","src":"4564:31:5"},"nativeSrc":"4564:31:5","nodeType":"YulExpressionStatement","src":"4564:31:5"},{"nativeSrc":"4604:54:5","nodeType":"YulAssignment","src":"4604:54:5","value":{"arguments":[{"name":"value1","nativeSrc":"4630:6:5","nodeType":"YulIdentifier","src":"4630:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"4642:9:5","nodeType":"YulIdentifier","src":"4642:9:5"},{"kind":"number","nativeSrc":"4653:3:5","nodeType":"YulLiteral","src":"4653:3:5","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4638:3:5","nodeType":"YulIdentifier","src":"4638:3:5"},"nativeSrc":"4638:19:5","nodeType":"YulFunctionCall","src":"4638:19:5"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4612:17:5","nodeType":"YulIdentifier","src":"4612:17:5"},"nativeSrc":"4612:46:5","nodeType":"YulFunctionCall","src":"4612:46:5"},"variableNames":[{"name":"tail","nativeSrc":"4604:4:5","nodeType":"YulIdentifier","src":"4604:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4678:9:5","nodeType":"YulIdentifier","src":"4678:9:5"},{"kind":"number","nativeSrc":"4689:2:5","nodeType":"YulLiteral","src":"4689:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4674:3:5","nodeType":"YulIdentifier","src":"4674:3:5"},"nativeSrc":"4674:18:5","nodeType":"YulFunctionCall","src":"4674:18:5"},{"name":"value2","nativeSrc":"4694:6:5","nodeType":"YulIdentifier","src":"4694:6:5"}],"functionName":{"name":"mstore","nativeSrc":"4667:6:5","nodeType":"YulIdentifier","src":"4667:6:5"},"nativeSrc":"4667:34:5","nodeType":"YulFunctionCall","src":"4667:34:5"},"nativeSrc":"4667:34:5","nodeType":"YulExpressionStatement","src":"4667:34:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4721:9:5","nodeType":"YulIdentifier","src":"4721:9:5"},{"kind":"number","nativeSrc":"4732:2:5","nodeType":"YulLiteral","src":"4732:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4717:3:5","nodeType":"YulIdentifier","src":"4717:3:5"},"nativeSrc":"4717:18:5","nodeType":"YulFunctionCall","src":"4717:18:5"},{"name":"value3","nativeSrc":"4737:6:5","nodeType":"YulIdentifier","src":"4737:6:5"}],"functionName":{"name":"mstore","nativeSrc":"4710:6:5","nodeType":"YulIdentifier","src":"4710:6:5"},"nativeSrc":"4710:34:5","nodeType":"YulFunctionCall","src":"4710:34:5"},"nativeSrc":"4710:34:5","nodeType":"YulExpressionStatement","src":"4710:34:5"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4266:484:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4416:9:5","nodeType":"YulTypedName","src":"4416:9:5","type":""},{"name":"value3","nativeSrc":"4427:6:5","nodeType":"YulTypedName","src":"4427:6:5","type":""},{"name":"value2","nativeSrc":"4435:6:5","nodeType":"YulTypedName","src":"4435:6:5","type":""},{"name":"value1","nativeSrc":"4443:6:5","nodeType":"YulTypedName","src":"4443:6:5","type":""},{"name":"value0","nativeSrc":"4451:6:5","nodeType":"YulTypedName","src":"4451:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4462:4:5","nodeType":"YulTypedName","src":"4462:4:5","type":""}],"src":"4266:484:5"},{"body":{"nativeSrc":"4856:76:5","nodeType":"YulBlock","src":"4856:76:5","statements":[{"nativeSrc":"4866:26:5","nodeType":"YulAssignment","src":"4866:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"4878:9:5","nodeType":"YulIdentifier","src":"4878:9:5"},{"kind":"number","nativeSrc":"4889:2:5","nodeType":"YulLiteral","src":"4889:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4874:3:5","nodeType":"YulIdentifier","src":"4874:3:5"},"nativeSrc":"4874:18:5","nodeType":"YulFunctionCall","src":"4874:18:5"},"variableNames":[{"name":"tail","nativeSrc":"4866:4:5","nodeType":"YulIdentifier","src":"4866:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4908:9:5","nodeType":"YulIdentifier","src":"4908:9:5"},{"name":"value0","nativeSrc":"4919:6:5","nodeType":"YulIdentifier","src":"4919:6:5"}],"functionName":{"name":"mstore","nativeSrc":"4901:6:5","nodeType":"YulIdentifier","src":"4901:6:5"},"nativeSrc":"4901:25:5","nodeType":"YulFunctionCall","src":"4901:25:5"},"nativeSrc":"4901:25:5","nodeType":"YulExpressionStatement","src":"4901:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4755:177:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4825:9:5","nodeType":"YulTypedName","src":"4825:9:5","type":""},{"name":"value0","nativeSrc":"4836:6:5","nodeType":"YulTypedName","src":"4836:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4847:4:5","nodeType":"YulTypedName","src":"4847:4:5","type":""}],"src":"4755:177:5"},{"body":{"nativeSrc":"5018:170:5","nodeType":"YulBlock","src":"5018:170:5","statements":[{"body":{"nativeSrc":"5064:16:5","nodeType":"YulBlock","src":"5064:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5073:1:5","nodeType":"YulLiteral","src":"5073:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"5076:1:5","nodeType":"YulLiteral","src":"5076:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5066:6:5","nodeType":"YulIdentifier","src":"5066:6:5"},"nativeSrc":"5066:12:5","nodeType":"YulFunctionCall","src":"5066:12:5"},"nativeSrc":"5066:12:5","nodeType":"YulExpressionStatement","src":"5066:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5039:7:5","nodeType":"YulIdentifier","src":"5039:7:5"},{"name":"headStart","nativeSrc":"5048:9:5","nodeType":"YulIdentifier","src":"5048:9:5"}],"functionName":{"name":"sub","nativeSrc":"5035:3:5","nodeType":"YulIdentifier","src":"5035:3:5"},"nativeSrc":"5035:23:5","nodeType":"YulFunctionCall","src":"5035:23:5"},{"kind":"number","nativeSrc":"5060:2:5","nodeType":"YulLiteral","src":"5060:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5031:3:5","nodeType":"YulIdentifier","src":"5031:3:5"},"nativeSrc":"5031:32:5","nodeType":"YulFunctionCall","src":"5031:32:5"},"nativeSrc":"5028:52:5","nodeType":"YulIf","src":"5028:52:5"},{"nativeSrc":"5089:29:5","nodeType":"YulVariableDeclaration","src":"5089:29:5","value":{"arguments":[{"name":"headStart","nativeSrc":"5108:9:5","nodeType":"YulIdentifier","src":"5108:9:5"}],"functionName":{"name":"mload","nativeSrc":"5102:5:5","nodeType":"YulIdentifier","src":"5102:5:5"},"nativeSrc":"5102:16:5","nodeType":"YulFunctionCall","src":"5102:16:5"},"variables":[{"name":"value","nativeSrc":"5093:5:5","nodeType":"YulTypedName","src":"5093:5:5","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5152:5:5","nodeType":"YulIdentifier","src":"5152:5:5"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5127:24:5","nodeType":"YulIdentifier","src":"5127:24:5"},"nativeSrc":"5127:31:5","nodeType":"YulFunctionCall","src":"5127:31:5"},"nativeSrc":"5127:31:5","nodeType":"YulExpressionStatement","src":"5127:31:5"},{"nativeSrc":"5167:15:5","nodeType":"YulAssignment","src":"5167:15:5","value":{"name":"value","nativeSrc":"5177:5:5","nodeType":"YulIdentifier","src":"5177:5:5"},"variableNames":[{"name":"value0","nativeSrc":"5167:6:5","nodeType":"YulIdentifier","src":"5167:6:5"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"4937:251:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4984:9:5","nodeType":"YulTypedName","src":"4984:9:5","type":""},{"name":"dataEnd","nativeSrc":"4995:7:5","nodeType":"YulTypedName","src":"4995:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5007:6:5","nodeType":"YulTypedName","src":"5007:6:5","type":""}],"src":"4937:251:5"},{"body":{"nativeSrc":"5367:173:5","nodeType":"YulBlock","src":"5367:173:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5384:9:5","nodeType":"YulIdentifier","src":"5384:9:5"},{"kind":"number","nativeSrc":"5395:2:5","nodeType":"YulLiteral","src":"5395:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5377:6:5","nodeType":"YulIdentifier","src":"5377:6:5"},"nativeSrc":"5377:21:5","nodeType":"YulFunctionCall","src":"5377:21:5"},"nativeSrc":"5377:21:5","nodeType":"YulExpressionStatement","src":"5377:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5418:9:5","nodeType":"YulIdentifier","src":"5418:9:5"},{"kind":"number","nativeSrc":"5429:2:5","nodeType":"YulLiteral","src":"5429:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5414:3:5","nodeType":"YulIdentifier","src":"5414:3:5"},"nativeSrc":"5414:18:5","nodeType":"YulFunctionCall","src":"5414:18:5"},{"kind":"number","nativeSrc":"5434:2:5","nodeType":"YulLiteral","src":"5434:2:5","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"5407:6:5","nodeType":"YulIdentifier","src":"5407:6:5"},"nativeSrc":"5407:30:5","nodeType":"YulFunctionCall","src":"5407:30:5"},"nativeSrc":"5407:30:5","nodeType":"YulExpressionStatement","src":"5407:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5457:9:5","nodeType":"YulIdentifier","src":"5457:9:5"},{"kind":"number","nativeSrc":"5468:2:5","nodeType":"YulLiteral","src":"5468:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5453:3:5","nodeType":"YulIdentifier","src":"5453:3:5"},"nativeSrc":"5453:18:5","nodeType":"YulFunctionCall","src":"5453:18:5"},{"hexValue":"596f7520646f6e2774206f776e20746869732063617264","kind":"string","nativeSrc":"5473:25:5","nodeType":"YulLiteral","src":"5473:25:5","type":"","value":"You don't own this card"}],"functionName":{"name":"mstore","nativeSrc":"5446:6:5","nodeType":"YulIdentifier","src":"5446:6:5"},"nativeSrc":"5446:53:5","nodeType":"YulFunctionCall","src":"5446:53:5"},"nativeSrc":"5446:53:5","nodeType":"YulExpressionStatement","src":"5446:53:5"},{"nativeSrc":"5508:26:5","nodeType":"YulAssignment","src":"5508:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"5520:9:5","nodeType":"YulIdentifier","src":"5520:9:5"},{"kind":"number","nativeSrc":"5531:2:5","nodeType":"YulLiteral","src":"5531:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5516:3:5","nodeType":"YulIdentifier","src":"5516:3:5"},"nativeSrc":"5516:18:5","nodeType":"YulFunctionCall","src":"5516:18:5"},"variableNames":[{"name":"tail","nativeSrc":"5508:4:5","nodeType":"YulIdentifier","src":"5508:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_3afb092d64fcfebeb1708138e27e032546cd5a67e62e6ca98cb36f26f0cc1abe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5193:347:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5344:9:5","nodeType":"YulTypedName","src":"5344:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5358:4:5","nodeType":"YulTypedName","src":"5358:4:5","type":""}],"src":"5193:347:5"},{"body":{"nativeSrc":"5719:174:5","nodeType":"YulBlock","src":"5719:174:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5736:9:5","nodeType":"YulIdentifier","src":"5736:9:5"},{"kind":"number","nativeSrc":"5747:2:5","nodeType":"YulLiteral","src":"5747:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5729:6:5","nodeType":"YulIdentifier","src":"5729:6:5"},"nativeSrc":"5729:21:5","nodeType":"YulFunctionCall","src":"5729:21:5"},"nativeSrc":"5729:21:5","nodeType":"YulExpressionStatement","src":"5729:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5770:9:5","nodeType":"YulIdentifier","src":"5770:9:5"},{"kind":"number","nativeSrc":"5781:2:5","nodeType":"YulLiteral","src":"5781:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5766:3:5","nodeType":"YulIdentifier","src":"5766:3:5"},"nativeSrc":"5766:18:5","nodeType":"YulFunctionCall","src":"5766:18:5"},{"kind":"number","nativeSrc":"5786:2:5","nodeType":"YulLiteral","src":"5786:2:5","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"5759:6:5","nodeType":"YulIdentifier","src":"5759:6:5"},"nativeSrc":"5759:30:5","nodeType":"YulFunctionCall","src":"5759:30:5"},"nativeSrc":"5759:30:5","nodeType":"YulExpressionStatement","src":"5759:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5809:9:5","nodeType":"YulIdentifier","src":"5809:9:5"},{"kind":"number","nativeSrc":"5820:2:5","nodeType":"YulLiteral","src":"5820:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5805:3:5","nodeType":"YulIdentifier","src":"5805:3:5"},"nativeSrc":"5805:18:5","nodeType":"YulFunctionCall","src":"5805:18:5"},{"hexValue":"426174746c6520494420616c726561647920657869737473","kind":"string","nativeSrc":"5825:26:5","nodeType":"YulLiteral","src":"5825:26:5","type":"","value":"Battle ID already exists"}],"functionName":{"name":"mstore","nativeSrc":"5798:6:5","nodeType":"YulIdentifier","src":"5798:6:5"},"nativeSrc":"5798:54:5","nodeType":"YulFunctionCall","src":"5798:54:5"},"nativeSrc":"5798:54:5","nodeType":"YulExpressionStatement","src":"5798:54:5"},{"nativeSrc":"5861:26:5","nodeType":"YulAssignment","src":"5861:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"5873:9:5","nodeType":"YulIdentifier","src":"5873:9:5"},{"kind":"number","nativeSrc":"5884:2:5","nodeType":"YulLiteral","src":"5884:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5869:3:5","nodeType":"YulIdentifier","src":"5869:3:5"},"nativeSrc":"5869:18:5","nodeType":"YulFunctionCall","src":"5869:18:5"},"variableNames":[{"name":"tail","nativeSrc":"5861:4:5","nodeType":"YulIdentifier","src":"5861:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_8bf3e846f44a2dc9e1f910f2fb7fa1b9c84daacdeb1187926858c401614800a5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5545:348:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5696:9:5","nodeType":"YulTypedName","src":"5696:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5710:4:5","nodeType":"YulTypedName","src":"5710:4:5","type":""}],"src":"5545:348:5"},{"body":{"nativeSrc":"6027:119:5","nodeType":"YulBlock","src":"6027:119:5","statements":[{"nativeSrc":"6037:26:5","nodeType":"YulAssignment","src":"6037:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"6049:9:5","nodeType":"YulIdentifier","src":"6049:9:5"},{"kind":"number","nativeSrc":"6060:2:5","nodeType":"YulLiteral","src":"6060:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6045:3:5","nodeType":"YulIdentifier","src":"6045:3:5"},"nativeSrc":"6045:18:5","nodeType":"YulFunctionCall","src":"6045:18:5"},"variableNames":[{"name":"tail","nativeSrc":"6037:4:5","nodeType":"YulIdentifier","src":"6037:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6079:9:5","nodeType":"YulIdentifier","src":"6079:9:5"},{"name":"value0","nativeSrc":"6090:6:5","nodeType":"YulIdentifier","src":"6090:6:5"}],"functionName":{"name":"mstore","nativeSrc":"6072:6:5","nodeType":"YulIdentifier","src":"6072:6:5"},"nativeSrc":"6072:25:5","nodeType":"YulFunctionCall","src":"6072:25:5"},"nativeSrc":"6072:25:5","nodeType":"YulExpressionStatement","src":"6072:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6117:9:5","nodeType":"YulIdentifier","src":"6117:9:5"},{"kind":"number","nativeSrc":"6128:2:5","nodeType":"YulLiteral","src":"6128:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6113:3:5","nodeType":"YulIdentifier","src":"6113:3:5"},"nativeSrc":"6113:18:5","nodeType":"YulFunctionCall","src":"6113:18:5"},{"name":"value1","nativeSrc":"6133:6:5","nodeType":"YulIdentifier","src":"6133:6:5"}],"functionName":{"name":"mstore","nativeSrc":"6106:6:5","nodeType":"YulIdentifier","src":"6106:6:5"},"nativeSrc":"6106:34:5","nodeType":"YulFunctionCall","src":"6106:34:5"},"nativeSrc":"6106:34:5","nodeType":"YulExpressionStatement","src":"6106:34:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5898:248:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5988:9:5","nodeType":"YulTypedName","src":"5988:9:5","type":""},{"name":"value1","nativeSrc":"5999:6:5","nodeType":"YulTypedName","src":"5999:6:5","type":""},{"name":"value0","nativeSrc":"6007:6:5","nodeType":"YulTypedName","src":"6007:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6018:4:5","nodeType":"YulTypedName","src":"6018:4:5","type":""}],"src":"5898:248:5"},{"body":{"nativeSrc":"6206:382:5","nodeType":"YulBlock","src":"6206:382:5","statements":[{"nativeSrc":"6216:22:5","nodeType":"YulAssignment","src":"6216:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"6230:1:5","nodeType":"YulLiteral","src":"6230:1:5","type":"","value":"1"},{"name":"data","nativeSrc":"6233:4:5","nodeType":"YulIdentifier","src":"6233:4:5"}],"functionName":{"name":"shr","nativeSrc":"6226:3:5","nodeType":"YulIdentifier","src":"6226:3:5"},"nativeSrc":"6226:12:5","nodeType":"YulFunctionCall","src":"6226:12:5"},"variableNames":[{"name":"length","nativeSrc":"6216:6:5","nodeType":"YulIdentifier","src":"6216:6:5"}]},{"nativeSrc":"6247:38:5","nodeType":"YulVariableDeclaration","src":"6247:38:5","value":{"arguments":[{"name":"data","nativeSrc":"6277:4:5","nodeType":"YulIdentifier","src":"6277:4:5"},{"kind":"number","nativeSrc":"6283:1:5","nodeType":"YulLiteral","src":"6283:1:5","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6273:3:5","nodeType":"YulIdentifier","src":"6273:3:5"},"nativeSrc":"6273:12:5","nodeType":"YulFunctionCall","src":"6273:12:5"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6251:18:5","nodeType":"YulTypedName","src":"6251:18:5","type":""}]},{"body":{"nativeSrc":"6324:31:5","nodeType":"YulBlock","src":"6324:31:5","statements":[{"nativeSrc":"6326:27:5","nodeType":"YulAssignment","src":"6326:27:5","value":{"arguments":[{"name":"length","nativeSrc":"6340:6:5","nodeType":"YulIdentifier","src":"6340:6:5"},{"kind":"number","nativeSrc":"6348:4:5","nodeType":"YulLiteral","src":"6348:4:5","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6336:3:5","nodeType":"YulIdentifier","src":"6336:3:5"},"nativeSrc":"6336:17:5","nodeType":"YulFunctionCall","src":"6336:17:5"},"variableNames":[{"name":"length","nativeSrc":"6326:6:5","nodeType":"YulIdentifier","src":"6326:6:5"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6304:18:5","nodeType":"YulIdentifier","src":"6304:18:5"}],"functionName":{"name":"iszero","nativeSrc":"6297:6:5","nodeType":"YulIdentifier","src":"6297:6:5"},"nativeSrc":"6297:26:5","nodeType":"YulFunctionCall","src":"6297:26:5"},"nativeSrc":"6294:61:5","nodeType":"YulIf","src":"6294:61:5"},{"body":{"nativeSrc":"6414:168:5","nodeType":"YulBlock","src":"6414:168:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6435:1:5","nodeType":"YulLiteral","src":"6435:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6438:77:5","nodeType":"YulLiteral","src":"6438:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6428:6:5","nodeType":"YulIdentifier","src":"6428:6:5"},"nativeSrc":"6428:88:5","nodeType":"YulFunctionCall","src":"6428:88:5"},"nativeSrc":"6428:88:5","nodeType":"YulExpressionStatement","src":"6428:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6536:1:5","nodeType":"YulLiteral","src":"6536:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"6539:4:5","nodeType":"YulLiteral","src":"6539:4:5","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6529:6:5","nodeType":"YulIdentifier","src":"6529:6:5"},"nativeSrc":"6529:15:5","nodeType":"YulFunctionCall","src":"6529:15:5"},"nativeSrc":"6529:15:5","nodeType":"YulExpressionStatement","src":"6529:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6564:1:5","nodeType":"YulLiteral","src":"6564:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6567:4:5","nodeType":"YulLiteral","src":"6567:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6557:6:5","nodeType":"YulIdentifier","src":"6557:6:5"},"nativeSrc":"6557:15:5","nodeType":"YulFunctionCall","src":"6557:15:5"},"nativeSrc":"6557:15:5","nodeType":"YulExpressionStatement","src":"6557:15:5"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6370:18:5","nodeType":"YulIdentifier","src":"6370:18:5"},{"arguments":[{"name":"length","nativeSrc":"6393:6:5","nodeType":"YulIdentifier","src":"6393:6:5"},{"kind":"number","nativeSrc":"6401:2:5","nodeType":"YulLiteral","src":"6401:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6390:2:5","nodeType":"YulIdentifier","src":"6390:2:5"},"nativeSrc":"6390:14:5","nodeType":"YulFunctionCall","src":"6390:14:5"}],"functionName":{"name":"eq","nativeSrc":"6367:2:5","nodeType":"YulIdentifier","src":"6367:2:5"},"nativeSrc":"6367:38:5","nodeType":"YulFunctionCall","src":"6367:38:5"},"nativeSrc":"6364:218:5","nodeType":"YulIf","src":"6364:218:5"}]},"name":"extract_byte_array_length","nativeSrc":"6151:437:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6186:4:5","nodeType":"YulTypedName","src":"6186:4:5","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6195:6:5","nodeType":"YulTypedName","src":"6195:6:5","type":""}],"src":"6151:437:5"},{"body":{"nativeSrc":"6767:168:5","nodeType":"YulBlock","src":"6767:168:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6784:9:5","nodeType":"YulIdentifier","src":"6784:9:5"},{"kind":"number","nativeSrc":"6795:2:5","nodeType":"YulLiteral","src":"6795:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6777:6:5","nodeType":"YulIdentifier","src":"6777:6:5"},"nativeSrc":"6777:21:5","nodeType":"YulFunctionCall","src":"6777:21:5"},"nativeSrc":"6777:21:5","nodeType":"YulExpressionStatement","src":"6777:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6818:9:5","nodeType":"YulIdentifier","src":"6818:9:5"},{"kind":"number","nativeSrc":"6829:2:5","nodeType":"YulLiteral","src":"6829:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6814:3:5","nodeType":"YulIdentifier","src":"6814:3:5"},"nativeSrc":"6814:18:5","nodeType":"YulFunctionCall","src":"6814:18:5"},{"kind":"number","nativeSrc":"6834:2:5","nodeType":"YulLiteral","src":"6834:2:5","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"6807:6:5","nodeType":"YulIdentifier","src":"6807:6:5"},"nativeSrc":"6807:30:5","nodeType":"YulFunctionCall","src":"6807:30:5"},"nativeSrc":"6807:30:5","nodeType":"YulExpressionStatement","src":"6807:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6857:9:5","nodeType":"YulIdentifier","src":"6857:9:5"},{"kind":"number","nativeSrc":"6868:2:5","nodeType":"YulLiteral","src":"6868:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6853:3:5","nodeType":"YulIdentifier","src":"6853:3:5"},"nativeSrc":"6853:18:5","nodeType":"YulFunctionCall","src":"6853:18:5"},{"hexValue":"416c72656164792072656769737465726564","kind":"string","nativeSrc":"6873:20:5","nodeType":"YulLiteral","src":"6873:20:5","type":"","value":"Already registered"}],"functionName":{"name":"mstore","nativeSrc":"6846:6:5","nodeType":"YulIdentifier","src":"6846:6:5"},"nativeSrc":"6846:48:5","nodeType":"YulFunctionCall","src":"6846:48:5"},"nativeSrc":"6846:48:5","nodeType":"YulExpressionStatement","src":"6846:48:5"},{"nativeSrc":"6903:26:5","nodeType":"YulAssignment","src":"6903:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"6915:9:5","nodeType":"YulIdentifier","src":"6915:9:5"},{"kind":"number","nativeSrc":"6926:2:5","nodeType":"YulLiteral","src":"6926:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6911:3:5","nodeType":"YulIdentifier","src":"6911:3:5"},"nativeSrc":"6911:18:5","nodeType":"YulFunctionCall","src":"6911:18:5"},"variableNames":[{"name":"tail","nativeSrc":"6903:4:5","nodeType":"YulIdentifier","src":"6903:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6593:342:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6744:9:5","nodeType":"YulTypedName","src":"6744:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6758:4:5","nodeType":"YulTypedName","src":"6758:4:5","type":""}],"src":"6593:342:5"},{"body":{"nativeSrc":"6996:65:5","nodeType":"YulBlock","src":"6996:65:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7013:1:5","nodeType":"YulLiteral","src":"7013:1:5","type":"","value":"0"},{"name":"ptr","nativeSrc":"7016:3:5","nodeType":"YulIdentifier","src":"7016:3:5"}],"functionName":{"name":"mstore","nativeSrc":"7006:6:5","nodeType":"YulIdentifier","src":"7006:6:5"},"nativeSrc":"7006:14:5","nodeType":"YulFunctionCall","src":"7006:14:5"},"nativeSrc":"7006:14:5","nodeType":"YulExpressionStatement","src":"7006:14:5"},{"nativeSrc":"7029:26:5","nodeType":"YulAssignment","src":"7029:26:5","value":{"arguments":[{"kind":"number","nativeSrc":"7047:1:5","nodeType":"YulLiteral","src":"7047:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"7050:4:5","nodeType":"YulLiteral","src":"7050:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7037:9:5","nodeType":"YulIdentifier","src":"7037:9:5"},"nativeSrc":"7037:18:5","nodeType":"YulFunctionCall","src":"7037:18:5"},"variableNames":[{"name":"data","nativeSrc":"7029:4:5","nodeType":"YulIdentifier","src":"7029:4:5"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"6940:121:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6979:3:5","nodeType":"YulTypedName","src":"6979:3:5","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6987:4:5","nodeType":"YulTypedName","src":"6987:4:5","type":""}],"src":"6940:121:5"},{"body":{"nativeSrc":"7147:462:5","nodeType":"YulBlock","src":"7147:462:5","statements":[{"body":{"nativeSrc":"7180:423:5","nodeType":"YulBlock","src":"7180:423:5","statements":[{"nativeSrc":"7194:11:5","nodeType":"YulVariableDeclaration","src":"7194:11:5","value":{"kind":"number","nativeSrc":"7204:1:5","nodeType":"YulLiteral","src":"7204:1:5","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"7198:2:5","nodeType":"YulTypedName","src":"7198:2:5","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7225:1:5","nodeType":"YulLiteral","src":"7225:1:5","type":"","value":"0"},{"name":"array","nativeSrc":"7228:5:5","nodeType":"YulIdentifier","src":"7228:5:5"}],"functionName":{"name":"mstore","nativeSrc":"7218:6:5","nodeType":"YulIdentifier","src":"7218:6:5"},"nativeSrc":"7218:16:5","nodeType":"YulFunctionCall","src":"7218:16:5"},"nativeSrc":"7218:16:5","nodeType":"YulExpressionStatement","src":"7218:16:5"},{"nativeSrc":"7247:30:5","nodeType":"YulVariableDeclaration","src":"7247:30:5","value":{"arguments":[{"kind":"number","nativeSrc":"7269:1:5","nodeType":"YulLiteral","src":"7269:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"7272:4:5","nodeType":"YulLiteral","src":"7272:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7259:9:5","nodeType":"YulIdentifier","src":"7259:9:5"},"nativeSrc":"7259:18:5","nodeType":"YulFunctionCall","src":"7259:18:5"},"variables":[{"name":"data","nativeSrc":"7251:4:5","nodeType":"YulTypedName","src":"7251:4:5","type":""}]},{"nativeSrc":"7290:57:5","nodeType":"YulVariableDeclaration","src":"7290:57:5","value":{"arguments":[{"name":"data","nativeSrc":"7313:4:5","nodeType":"YulIdentifier","src":"7313:4:5"},{"arguments":[{"kind":"number","nativeSrc":"7323:1:5","nodeType":"YulLiteral","src":"7323:1:5","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"7330:10:5","nodeType":"YulIdentifier","src":"7330:10:5"},{"kind":"number","nativeSrc":"7342:2:5","nodeType":"YulLiteral","src":"7342:2:5","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7326:3:5","nodeType":"YulIdentifier","src":"7326:3:5"},"nativeSrc":"7326:19:5","nodeType":"YulFunctionCall","src":"7326:19:5"}],"functionName":{"name":"shr","nativeSrc":"7319:3:5","nodeType":"YulIdentifier","src":"7319:3:5"},"nativeSrc":"7319:27:5","nodeType":"YulFunctionCall","src":"7319:27:5"}],"functionName":{"name":"add","nativeSrc":"7309:3:5","nodeType":"YulIdentifier","src":"7309:3:5"},"nativeSrc":"7309:38:5","nodeType":"YulFunctionCall","src":"7309:38:5"},"variables":[{"name":"deleteStart","nativeSrc":"7294:11:5","nodeType":"YulTypedName","src":"7294:11:5","type":""}]},{"body":{"nativeSrc":"7384:23:5","nodeType":"YulBlock","src":"7384:23:5","statements":[{"nativeSrc":"7386:19:5","nodeType":"YulAssignment","src":"7386:19:5","value":{"name":"data","nativeSrc":"7401:4:5","nodeType":"YulIdentifier","src":"7401:4:5"},"variableNames":[{"name":"deleteStart","nativeSrc":"7386:11:5","nodeType":"YulIdentifier","src":"7386:11:5"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7366:10:5","nodeType":"YulIdentifier","src":"7366:10:5"},{"kind":"number","nativeSrc":"7378:4:5","nodeType":"YulLiteral","src":"7378:4:5","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"7363:2:5","nodeType":"YulIdentifier","src":"7363:2:5"},"nativeSrc":"7363:20:5","nodeType":"YulFunctionCall","src":"7363:20:5"},"nativeSrc":"7360:47:5","nodeType":"YulIf","src":"7360:47:5"},{"nativeSrc":"7420:41:5","nodeType":"YulVariableDeclaration","src":"7420:41:5","value":{"arguments":[{"name":"data","nativeSrc":"7434:4:5","nodeType":"YulIdentifier","src":"7434:4:5"},{"arguments":[{"kind":"number","nativeSrc":"7444:1:5","nodeType":"YulLiteral","src":"7444:1:5","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"7451:3:5","nodeType":"YulIdentifier","src":"7451:3:5"},{"kind":"number","nativeSrc":"7456:2:5","nodeType":"YulLiteral","src":"7456:2:5","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7447:3:5","nodeType":"YulIdentifier","src":"7447:3:5"},"nativeSrc":"7447:12:5","nodeType":"YulFunctionCall","src":"7447:12:5"}],"functionName":{"name":"shr","nativeSrc":"7440:3:5","nodeType":"YulIdentifier","src":"7440:3:5"},"nativeSrc":"7440:20:5","nodeType":"YulFunctionCall","src":"7440:20:5"}],"functionName":{"name":"add","nativeSrc":"7430:3:5","nodeType":"YulIdentifier","src":"7430:3:5"},"nativeSrc":"7430:31:5","nodeType":"YulFunctionCall","src":"7430:31:5"},"variables":[{"name":"_2","nativeSrc":"7424:2:5","nodeType":"YulTypedName","src":"7424:2:5","type":""}]},{"nativeSrc":"7474:24:5","nodeType":"YulVariableDeclaration","src":"7474:24:5","value":{"name":"deleteStart","nativeSrc":"7487:11:5","nodeType":"YulIdentifier","src":"7487:11:5"},"variables":[{"name":"start","nativeSrc":"7478:5:5","nodeType":"YulTypedName","src":"7478:5:5","type":""}]},{"body":{"nativeSrc":"7572:21:5","nodeType":"YulBlock","src":"7572:21:5","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7581:5:5","nodeType":"YulIdentifier","src":"7581:5:5"},{"name":"_1","nativeSrc":"7588:2:5","nodeType":"YulIdentifier","src":"7588:2:5"}],"functionName":{"name":"sstore","nativeSrc":"7574:6:5","nodeType":"YulIdentifier","src":"7574:6:5"},"nativeSrc":"7574:17:5","nodeType":"YulFunctionCall","src":"7574:17:5"},"nativeSrc":"7574:17:5","nodeType":"YulExpressionStatement","src":"7574:17:5"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7522:5:5","nodeType":"YulIdentifier","src":"7522:5:5"},{"name":"_2","nativeSrc":"7529:2:5","nodeType":"YulIdentifier","src":"7529:2:5"}],"functionName":{"name":"lt","nativeSrc":"7519:2:5","nodeType":"YulIdentifier","src":"7519:2:5"},"nativeSrc":"7519:13:5","nodeType":"YulFunctionCall","src":"7519:13:5"},"nativeSrc":"7511:82:5","nodeType":"YulForLoop","post":{"nativeSrc":"7533:26:5","nodeType":"YulBlock","src":"7533:26:5","statements":[{"nativeSrc":"7535:22:5","nodeType":"YulAssignment","src":"7535:22:5","value":{"arguments":[{"name":"start","nativeSrc":"7548:5:5","nodeType":"YulIdentifier","src":"7548:5:5"},{"kind":"number","nativeSrc":"7555:1:5","nodeType":"YulLiteral","src":"7555:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7544:3:5","nodeType":"YulIdentifier","src":"7544:3:5"},"nativeSrc":"7544:13:5","nodeType":"YulFunctionCall","src":"7544:13:5"},"variableNames":[{"name":"start","nativeSrc":"7535:5:5","nodeType":"YulIdentifier","src":"7535:5:5"}]}]},"pre":{"nativeSrc":"7515:3:5","nodeType":"YulBlock","src":"7515:3:5","statements":[]},"src":"7511:82:5"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7163:3:5","nodeType":"YulIdentifier","src":"7163:3:5"},{"kind":"number","nativeSrc":"7168:2:5","nodeType":"YulLiteral","src":"7168:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7160:2:5","nodeType":"YulIdentifier","src":"7160:2:5"},"nativeSrc":"7160:11:5","nodeType":"YulFunctionCall","src":"7160:11:5"},"nativeSrc":"7157:446:5","nodeType":"YulIf","src":"7157:446:5"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"7066:543:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7119:5:5","nodeType":"YulTypedName","src":"7119:5:5","type":""},{"name":"len","nativeSrc":"7126:3:5","nodeType":"YulTypedName","src":"7126:3:5","type":""},{"name":"startIndex","nativeSrc":"7131:10:5","nodeType":"YulTypedName","src":"7131:10:5","type":""}],"src":"7066:543:5"},{"body":{"nativeSrc":"7699:81:5","nodeType":"YulBlock","src":"7699:81:5","statements":[{"nativeSrc":"7709:65:5","nodeType":"YulAssignment","src":"7709:65:5","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"7724:4:5","nodeType":"YulIdentifier","src":"7724:4:5"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7742:1:5","nodeType":"YulLiteral","src":"7742:1:5","type":"","value":"3"},{"name":"len","nativeSrc":"7745:3:5","nodeType":"YulIdentifier","src":"7745:3:5"}],"functionName":{"name":"shl","nativeSrc":"7738:3:5","nodeType":"YulIdentifier","src":"7738:3:5"},"nativeSrc":"7738:11:5","nodeType":"YulFunctionCall","src":"7738:11:5"},{"arguments":[{"kind":"number","nativeSrc":"7755:1:5","nodeType":"YulLiteral","src":"7755:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7751:3:5","nodeType":"YulIdentifier","src":"7751:3:5"},"nativeSrc":"7751:6:5","nodeType":"YulFunctionCall","src":"7751:6:5"}],"functionName":{"name":"shr","nativeSrc":"7734:3:5","nodeType":"YulIdentifier","src":"7734:3:5"},"nativeSrc":"7734:24:5","nodeType":"YulFunctionCall","src":"7734:24:5"}],"functionName":{"name":"not","nativeSrc":"7730:3:5","nodeType":"YulIdentifier","src":"7730:3:5"},"nativeSrc":"7730:29:5","nodeType":"YulFunctionCall","src":"7730:29:5"}],"functionName":{"name":"and","nativeSrc":"7720:3:5","nodeType":"YulIdentifier","src":"7720:3:5"},"nativeSrc":"7720:40:5","nodeType":"YulFunctionCall","src":"7720:40:5"},{"arguments":[{"kind":"number","nativeSrc":"7766:1:5","nodeType":"YulLiteral","src":"7766:1:5","type":"","value":"1"},{"name":"len","nativeSrc":"7769:3:5","nodeType":"YulIdentifier","src":"7769:3:5"}],"functionName":{"name":"shl","nativeSrc":"7762:3:5","nodeType":"YulIdentifier","src":"7762:3:5"},"nativeSrc":"7762:11:5","nodeType":"YulFunctionCall","src":"7762:11:5"}],"functionName":{"name":"or","nativeSrc":"7717:2:5","nodeType":"YulIdentifier","src":"7717:2:5"},"nativeSrc":"7717:57:5","nodeType":"YulFunctionCall","src":"7717:57:5"},"variableNames":[{"name":"used","nativeSrc":"7709:4:5","nodeType":"YulIdentifier","src":"7709:4:5"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7614:166:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7676:4:5","nodeType":"YulTypedName","src":"7676:4:5","type":""},{"name":"len","nativeSrc":"7682:3:5","nodeType":"YulTypedName","src":"7682:3:5","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7690:4:5","nodeType":"YulTypedName","src":"7690:4:5","type":""}],"src":"7614:166:5"},{"body":{"nativeSrc":"7881:1249:5","nodeType":"YulBlock","src":"7881:1249:5","statements":[{"nativeSrc":"7891:24:5","nodeType":"YulVariableDeclaration","src":"7891:24:5","value":{"arguments":[{"name":"src","nativeSrc":"7911:3:5","nodeType":"YulIdentifier","src":"7911:3:5"}],"functionName":{"name":"mload","nativeSrc":"7905:5:5","nodeType":"YulIdentifier","src":"7905:5:5"},"nativeSrc":"7905:10:5","nodeType":"YulFunctionCall","src":"7905:10:5"},"variables":[{"name":"newLen","nativeSrc":"7895:6:5","nodeType":"YulTypedName","src":"7895:6:5","type":""}]},{"body":{"nativeSrc":"7958:22:5","nodeType":"YulBlock","src":"7958:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7960:16:5","nodeType":"YulIdentifier","src":"7960:16:5"},"nativeSrc":"7960:18:5","nodeType":"YulFunctionCall","src":"7960:18:5"},"nativeSrc":"7960:18:5","nodeType":"YulExpressionStatement","src":"7960:18:5"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7930:6:5","nodeType":"YulIdentifier","src":"7930:6:5"},{"kind":"number","nativeSrc":"7938:18:5","nodeType":"YulLiteral","src":"7938:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7927:2:5","nodeType":"YulIdentifier","src":"7927:2:5"},"nativeSrc":"7927:30:5","nodeType":"YulFunctionCall","src":"7927:30:5"},"nativeSrc":"7924:56:5","nodeType":"YulIf","src":"7924:56:5"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8033:4:5","nodeType":"YulIdentifier","src":"8033:4:5"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8071:4:5","nodeType":"YulIdentifier","src":"8071:4:5"}],"functionName":{"name":"sload","nativeSrc":"8065:5:5","nodeType":"YulIdentifier","src":"8065:5:5"},"nativeSrc":"8065:11:5","nodeType":"YulFunctionCall","src":"8065:11:5"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8039:25:5","nodeType":"YulIdentifier","src":"8039:25:5"},"nativeSrc":"8039:38:5","nodeType":"YulFunctionCall","src":"8039:38:5"},{"name":"newLen","nativeSrc":"8079:6:5","nodeType":"YulIdentifier","src":"8079:6:5"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"7989:43:5","nodeType":"YulIdentifier","src":"7989:43:5"},"nativeSrc":"7989:97:5","nodeType":"YulFunctionCall","src":"7989:97:5"},"nativeSrc":"7989:97:5","nodeType":"YulExpressionStatement","src":"7989:97:5"},{"nativeSrc":"8095:18:5","nodeType":"YulVariableDeclaration","src":"8095:18:5","value":{"kind":"number","nativeSrc":"8112:1:5","nodeType":"YulLiteral","src":"8112:1:5","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8099:9:5","nodeType":"YulTypedName","src":"8099:9:5","type":""}]},{"nativeSrc":"8122:23:5","nodeType":"YulVariableDeclaration","src":"8122:23:5","value":{"kind":"number","nativeSrc":"8141:4:5","nodeType":"YulLiteral","src":"8141:4:5","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"8126:11:5","nodeType":"YulTypedName","src":"8126:11:5","type":""}]},{"nativeSrc":"8154:17:5","nodeType":"YulAssignment","src":"8154:17:5","value":{"kind":"number","nativeSrc":"8167:4:5","nodeType":"YulLiteral","src":"8167:4:5","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8154:9:5","nodeType":"YulIdentifier","src":"8154:9:5"}]},{"cases":[{"body":{"nativeSrc":"8217:656:5","nodeType":"YulBlock","src":"8217:656:5","statements":[{"nativeSrc":"8231:35:5","nodeType":"YulVariableDeclaration","src":"8231:35:5","value":{"arguments":[{"name":"newLen","nativeSrc":"8250:6:5","nodeType":"YulIdentifier","src":"8250:6:5"},{"arguments":[{"kind":"number","nativeSrc":"8262:2:5","nodeType":"YulLiteral","src":"8262:2:5","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"8258:3:5","nodeType":"YulIdentifier","src":"8258:3:5"},"nativeSrc":"8258:7:5","nodeType":"YulFunctionCall","src":"8258:7:5"}],"functionName":{"name":"and","nativeSrc":"8246:3:5","nodeType":"YulIdentifier","src":"8246:3:5"},"nativeSrc":"8246:20:5","nodeType":"YulFunctionCall","src":"8246:20:5"},"variables":[{"name":"loopEnd","nativeSrc":"8235:7:5","nodeType":"YulTypedName","src":"8235:7:5","type":""}]},{"nativeSrc":"8279:49:5","nodeType":"YulVariableDeclaration","src":"8279:49:5","value":{"arguments":[{"name":"slot","nativeSrc":"8323:4:5","nodeType":"YulIdentifier","src":"8323:4:5"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"8293:29:5","nodeType":"YulIdentifier","src":"8293:29:5"},"nativeSrc":"8293:35:5","nodeType":"YulFunctionCall","src":"8293:35:5"},"variables":[{"name":"dstPtr","nativeSrc":"8283:6:5","nodeType":"YulTypedName","src":"8283:6:5","type":""}]},{"nativeSrc":"8341:10:5","nodeType":"YulVariableDeclaration","src":"8341:10:5","value":{"kind":"number","nativeSrc":"8350:1:5","nodeType":"YulLiteral","src":"8350:1:5","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8345:1:5","nodeType":"YulTypedName","src":"8345:1:5","type":""}]},{"body":{"nativeSrc":"8428:172:5","nodeType":"YulBlock","src":"8428:172:5","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8453:6:5","nodeType":"YulIdentifier","src":"8453:6:5"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8471:3:5","nodeType":"YulIdentifier","src":"8471:3:5"},{"name":"srcOffset","nativeSrc":"8476:9:5","nodeType":"YulIdentifier","src":"8476:9:5"}],"functionName":{"name":"add","nativeSrc":"8467:3:5","nodeType":"YulIdentifier","src":"8467:3:5"},"nativeSrc":"8467:19:5","nodeType":"YulFunctionCall","src":"8467:19:5"}],"functionName":{"name":"mload","nativeSrc":"8461:5:5","nodeType":"YulIdentifier","src":"8461:5:5"},"nativeSrc":"8461:26:5","nodeType":"YulFunctionCall","src":"8461:26:5"}],"functionName":{"name":"sstore","nativeSrc":"8446:6:5","nodeType":"YulIdentifier","src":"8446:6:5"},"nativeSrc":"8446:42:5","nodeType":"YulFunctionCall","src":"8446:42:5"},"nativeSrc":"8446:42:5","nodeType":"YulExpressionStatement","src":"8446:42:5"},{"nativeSrc":"8505:24:5","nodeType":"YulAssignment","src":"8505:24:5","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8519:6:5","nodeType":"YulIdentifier","src":"8519:6:5"},{"kind":"number","nativeSrc":"8527:1:5","nodeType":"YulLiteral","src":"8527:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8515:3:5","nodeType":"YulIdentifier","src":"8515:3:5"},"nativeSrc":"8515:14:5","nodeType":"YulFunctionCall","src":"8515:14:5"},"variableNames":[{"name":"dstPtr","nativeSrc":"8505:6:5","nodeType":"YulIdentifier","src":"8505:6:5"}]},{"nativeSrc":"8546:40:5","nodeType":"YulAssignment","src":"8546:40:5","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8563:9:5","nodeType":"YulIdentifier","src":"8563:9:5"},{"name":"srcOffset_1","nativeSrc":"8574:11:5","nodeType":"YulIdentifier","src":"8574:11:5"}],"functionName":{"name":"add","nativeSrc":"8559:3:5","nodeType":"YulIdentifier","src":"8559:3:5"},"nativeSrc":"8559:27:5","nodeType":"YulFunctionCall","src":"8559:27:5"},"variableNames":[{"name":"srcOffset","nativeSrc":"8546:9:5","nodeType":"YulIdentifier","src":"8546:9:5"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8375:1:5","nodeType":"YulIdentifier","src":"8375:1:5"},{"name":"loopEnd","nativeSrc":"8378:7:5","nodeType":"YulIdentifier","src":"8378:7:5"}],"functionName":{"name":"lt","nativeSrc":"8372:2:5","nodeType":"YulIdentifier","src":"8372:2:5"},"nativeSrc":"8372:14:5","nodeType":"YulFunctionCall","src":"8372:14:5"},"nativeSrc":"8364:236:5","nodeType":"YulForLoop","post":{"nativeSrc":"8387:28:5","nodeType":"YulBlock","src":"8387:28:5","statements":[{"nativeSrc":"8389:24:5","nodeType":"YulAssignment","src":"8389:24:5","value":{"arguments":[{"name":"i","nativeSrc":"8398:1:5","nodeType":"YulIdentifier","src":"8398:1:5"},{"name":"srcOffset_1","nativeSrc":"8401:11:5","nodeType":"YulIdentifier","src":"8401:11:5"}],"functionName":{"name":"add","nativeSrc":"8394:3:5","nodeType":"YulIdentifier","src":"8394:3:5"},"nativeSrc":"8394:19:5","nodeType":"YulFunctionCall","src":"8394:19:5"},"variableNames":[{"name":"i","nativeSrc":"8389:1:5","nodeType":"YulIdentifier","src":"8389:1:5"}]}]},"pre":{"nativeSrc":"8368:3:5","nodeType":"YulBlock","src":"8368:3:5","statements":[]},"src":"8364:236:5"},{"body":{"nativeSrc":"8648:166:5","nodeType":"YulBlock","src":"8648:166:5","statements":[{"nativeSrc":"8666:43:5","nodeType":"YulVariableDeclaration","src":"8666:43:5","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8693:3:5","nodeType":"YulIdentifier","src":"8693:3:5"},{"name":"srcOffset","nativeSrc":"8698:9:5","nodeType":"YulIdentifier","src":"8698:9:5"}],"functionName":{"name":"add","nativeSrc":"8689:3:5","nodeType":"YulIdentifier","src":"8689:3:5"},"nativeSrc":"8689:19:5","nodeType":"YulFunctionCall","src":"8689:19:5"}],"functionName":{"name":"mload","nativeSrc":"8683:5:5","nodeType":"YulIdentifier","src":"8683:5:5"},"nativeSrc":"8683:26:5","nodeType":"YulFunctionCall","src":"8683:26:5"},"variables":[{"name":"lastValue","nativeSrc":"8670:9:5","nodeType":"YulTypedName","src":"8670:9:5","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8733:6:5","nodeType":"YulIdentifier","src":"8733:6:5"},{"arguments":[{"name":"lastValue","nativeSrc":"8745:9:5","nodeType":"YulIdentifier","src":"8745:9:5"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8772:1:5","nodeType":"YulLiteral","src":"8772:1:5","type":"","value":"3"},{"name":"newLen","nativeSrc":"8775:6:5","nodeType":"YulIdentifier","src":"8775:6:5"}],"functionName":{"name":"shl","nativeSrc":"8768:3:5","nodeType":"YulIdentifier","src":"8768:3:5"},"nativeSrc":"8768:14:5","nodeType":"YulFunctionCall","src":"8768:14:5"},{"kind":"number","nativeSrc":"8784:3:5","nodeType":"YulLiteral","src":"8784:3:5","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"8764:3:5","nodeType":"YulIdentifier","src":"8764:3:5"},"nativeSrc":"8764:24:5","nodeType":"YulFunctionCall","src":"8764:24:5"},{"arguments":[{"kind":"number","nativeSrc":"8794:1:5","nodeType":"YulLiteral","src":"8794:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8790:3:5","nodeType":"YulIdentifier","src":"8790:3:5"},"nativeSrc":"8790:6:5","nodeType":"YulFunctionCall","src":"8790:6:5"}],"functionName":{"name":"shr","nativeSrc":"8760:3:5","nodeType":"YulIdentifier","src":"8760:3:5"},"nativeSrc":"8760:37:5","nodeType":"YulFunctionCall","src":"8760:37:5"}],"functionName":{"name":"not","nativeSrc":"8756:3:5","nodeType":"YulIdentifier","src":"8756:3:5"},"nativeSrc":"8756:42:5","nodeType":"YulFunctionCall","src":"8756:42:5"}],"functionName":{"name":"and","nativeSrc":"8741:3:5","nodeType":"YulIdentifier","src":"8741:3:5"},"nativeSrc":"8741:58:5","nodeType":"YulFunctionCall","src":"8741:58:5"}],"functionName":{"name":"sstore","nativeSrc":"8726:6:5","nodeType":"YulIdentifier","src":"8726:6:5"},"nativeSrc":"8726:74:5","nodeType":"YulFunctionCall","src":"8726:74:5"},"nativeSrc":"8726:74:5","nodeType":"YulExpressionStatement","src":"8726:74:5"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8619:7:5","nodeType":"YulIdentifier","src":"8619:7:5"},{"name":"newLen","nativeSrc":"8628:6:5","nodeType":"YulIdentifier","src":"8628:6:5"}],"functionName":{"name":"lt","nativeSrc":"8616:2:5","nodeType":"YulIdentifier","src":"8616:2:5"},"nativeSrc":"8616:19:5","nodeType":"YulFunctionCall","src":"8616:19:5"},"nativeSrc":"8613:201:5","nodeType":"YulIf","src":"8613:201:5"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8834:4:5","nodeType":"YulIdentifier","src":"8834:4:5"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8848:1:5","nodeType":"YulLiteral","src":"8848:1:5","type":"","value":"1"},{"name":"newLen","nativeSrc":"8851:6:5","nodeType":"YulIdentifier","src":"8851:6:5"}],"functionName":{"name":"shl","nativeSrc":"8844:3:5","nodeType":"YulIdentifier","src":"8844:3:5"},"nativeSrc":"8844:14:5","nodeType":"YulFunctionCall","src":"8844:14:5"},{"kind":"number","nativeSrc":"8860:1:5","nodeType":"YulLiteral","src":"8860:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8840:3:5","nodeType":"YulIdentifier","src":"8840:3:5"},"nativeSrc":"8840:22:5","nodeType":"YulFunctionCall","src":"8840:22:5"}],"functionName":{"name":"sstore","nativeSrc":"8827:6:5","nodeType":"YulIdentifier","src":"8827:6:5"},"nativeSrc":"8827:36:5","nodeType":"YulFunctionCall","src":"8827:36:5"},"nativeSrc":"8827:36:5","nodeType":"YulExpressionStatement","src":"8827:36:5"}]},"nativeSrc":"8210:663:5","nodeType":"YulCase","src":"8210:663:5","value":{"kind":"number","nativeSrc":"8215:1:5","nodeType":"YulLiteral","src":"8215:1:5","type":"","value":"1"}},{"body":{"nativeSrc":"8890:234:5","nodeType":"YulBlock","src":"8890:234:5","statements":[{"nativeSrc":"8904:14:5","nodeType":"YulVariableDeclaration","src":"8904:14:5","value":{"kind":"number","nativeSrc":"8917:1:5","nodeType":"YulLiteral","src":"8917:1:5","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8908:5:5","nodeType":"YulTypedName","src":"8908:5:5","type":""}]},{"body":{"nativeSrc":"8953:67:5","nodeType":"YulBlock","src":"8953:67:5","statements":[{"nativeSrc":"8971:35:5","nodeType":"YulAssignment","src":"8971:35:5","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8990:3:5","nodeType":"YulIdentifier","src":"8990:3:5"},{"name":"srcOffset","nativeSrc":"8995:9:5","nodeType":"YulIdentifier","src":"8995:9:5"}],"functionName":{"name":"add","nativeSrc":"8986:3:5","nodeType":"YulIdentifier","src":"8986:3:5"},"nativeSrc":"8986:19:5","nodeType":"YulFunctionCall","src":"8986:19:5"}],"functionName":{"name":"mload","nativeSrc":"8980:5:5","nodeType":"YulIdentifier","src":"8980:5:5"},"nativeSrc":"8980:26:5","nodeType":"YulFunctionCall","src":"8980:26:5"},"variableNames":[{"name":"value","nativeSrc":"8971:5:5","nodeType":"YulIdentifier","src":"8971:5:5"}]}]},"condition":{"name":"newLen","nativeSrc":"8934:6:5","nodeType":"YulIdentifier","src":"8934:6:5"},"nativeSrc":"8931:89:5","nodeType":"YulIf","src":"8931:89:5"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9040:4:5","nodeType":"YulIdentifier","src":"9040:4:5"},{"arguments":[{"name":"value","nativeSrc":"9099:5:5","nodeType":"YulIdentifier","src":"9099:5:5"},{"name":"newLen","nativeSrc":"9106:6:5","nodeType":"YulIdentifier","src":"9106:6:5"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9046:52:5","nodeType":"YulIdentifier","src":"9046:52:5"},"nativeSrc":"9046:67:5","nodeType":"YulFunctionCall","src":"9046:67:5"}],"functionName":{"name":"sstore","nativeSrc":"9033:6:5","nodeType":"YulIdentifier","src":"9033:6:5"},"nativeSrc":"9033:81:5","nodeType":"YulFunctionCall","src":"9033:81:5"},"nativeSrc":"9033:81:5","nodeType":"YulExpressionStatement","src":"9033:81:5"}]},"nativeSrc":"8882:242:5","nodeType":"YulCase","src":"8882:242:5","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8190:6:5","nodeType":"YulIdentifier","src":"8190:6:5"},{"kind":"number","nativeSrc":"8198:2:5","nodeType":"YulLiteral","src":"8198:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8187:2:5","nodeType":"YulIdentifier","src":"8187:2:5"},"nativeSrc":"8187:14:5","nodeType":"YulFunctionCall","src":"8187:14:5"},"nativeSrc":"8180:944:5","nodeType":"YulSwitch","src":"8180:944:5"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7785:1345:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7866:4:5","nodeType":"YulTypedName","src":"7866:4:5","type":""},{"name":"src","nativeSrc":"7872:3:5","nodeType":"YulTypedName","src":"7872:3:5","type":""}],"src":"7785:1345:5"},{"body":{"nativeSrc":"9256:99:5","nodeType":"YulBlock","src":"9256:99:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9273:9:5","nodeType":"YulIdentifier","src":"9273:9:5"},{"kind":"number","nativeSrc":"9284:2:5","nodeType":"YulLiteral","src":"9284:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9266:6:5","nodeType":"YulIdentifier","src":"9266:6:5"},"nativeSrc":"9266:21:5","nodeType":"YulFunctionCall","src":"9266:21:5"},"nativeSrc":"9266:21:5","nodeType":"YulExpressionStatement","src":"9266:21:5"},{"nativeSrc":"9296:53:5","nodeType":"YulAssignment","src":"9296:53:5","value":{"arguments":[{"name":"value0","nativeSrc":"9322:6:5","nodeType":"YulIdentifier","src":"9322:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"9334:9:5","nodeType":"YulIdentifier","src":"9334:9:5"},{"kind":"number","nativeSrc":"9345:2:5","nodeType":"YulLiteral","src":"9345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9330:3:5","nodeType":"YulIdentifier","src":"9330:3:5"},"nativeSrc":"9330:18:5","nodeType":"YulFunctionCall","src":"9330:18:5"}],"functionName":{"name":"abi_encode_string","nativeSrc":"9304:17:5","nodeType":"YulIdentifier","src":"9304:17:5"},"nativeSrc":"9304:45:5","nodeType":"YulFunctionCall","src":"9304:45:5"},"variableNames":[{"name":"tail","nativeSrc":"9296:4:5","nodeType":"YulIdentifier","src":"9296:4:5"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9135:220:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9225:9:5","nodeType":"YulTypedName","src":"9225:9:5","type":""},{"name":"value0","nativeSrc":"9236:6:5","nodeType":"YulTypedName","src":"9236:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9247:4:5","nodeType":"YulTypedName","src":"9247:4:5","type":""}],"src":"9135:220:5"},{"body":{"nativeSrc":"9534:172:5","nodeType":"YulBlock","src":"9534:172:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9551:9:5","nodeType":"YulIdentifier","src":"9551:9:5"},{"kind":"number","nativeSrc":"9562:2:5","nodeType":"YulLiteral","src":"9562:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9544:6:5","nodeType":"YulIdentifier","src":"9544:6:5"},"nativeSrc":"9544:21:5","nodeType":"YulFunctionCall","src":"9544:21:5"},"nativeSrc":"9544:21:5","nodeType":"YulExpressionStatement","src":"9544:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9585:9:5","nodeType":"YulIdentifier","src":"9585:9:5"},{"kind":"number","nativeSrc":"9596:2:5","nodeType":"YulLiteral","src":"9596:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9581:3:5","nodeType":"YulIdentifier","src":"9581:3:5"},"nativeSrc":"9581:18:5","nodeType":"YulFunctionCall","src":"9581:18:5"},{"kind":"number","nativeSrc":"9601:2:5","nodeType":"YulLiteral","src":"9601:2:5","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"9574:6:5","nodeType":"YulIdentifier","src":"9574:6:5"},"nativeSrc":"9574:30:5","nodeType":"YulFunctionCall","src":"9574:30:5"},"nativeSrc":"9574:30:5","nodeType":"YulExpressionStatement","src":"9574:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9624:9:5","nodeType":"YulIdentifier","src":"9624:9:5"},{"kind":"number","nativeSrc":"9635:2:5","nodeType":"YulLiteral","src":"9635:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9620:3:5","nodeType":"YulIdentifier","src":"9620:3:5"},"nativeSrc":"9620:18:5","nodeType":"YulFunctionCall","src":"9620:18:5"},{"hexValue":"426174746c65206e6f7420696e2070726f6772657373","kind":"string","nativeSrc":"9640:24:5","nodeType":"YulLiteral","src":"9640:24:5","type":"","value":"Battle not in progress"}],"functionName":{"name":"mstore","nativeSrc":"9613:6:5","nodeType":"YulIdentifier","src":"9613:6:5"},"nativeSrc":"9613:52:5","nodeType":"YulFunctionCall","src":"9613:52:5"},"nativeSrc":"9613:52:5","nodeType":"YulExpressionStatement","src":"9613:52:5"},{"nativeSrc":"9674:26:5","nodeType":"YulAssignment","src":"9674:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"9686:9:5","nodeType":"YulIdentifier","src":"9686:9:5"},{"kind":"number","nativeSrc":"9697:2:5","nodeType":"YulLiteral","src":"9697:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9682:3:5","nodeType":"YulIdentifier","src":"9682:3:5"},"nativeSrc":"9682:18:5","nodeType":"YulFunctionCall","src":"9682:18:5"},"variableNames":[{"name":"tail","nativeSrc":"9674:4:5","nodeType":"YulIdentifier","src":"9674:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1c7cd9553ca65c6a2c63bd7aefffe6f98bd6a8fda9409d65aaa5406702ab21b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9360:346:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9511:9:5","nodeType":"YulTypedName","src":"9511:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9525:4:5","nodeType":"YulTypedName","src":"9525:4:5","type":""}],"src":"9360:346:5"},{"body":{"nativeSrc":"9885:175:5","nodeType":"YulBlock","src":"9885:175:5","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9902:9:5","nodeType":"YulIdentifier","src":"9902:9:5"},{"kind":"number","nativeSrc":"9913:2:5","nodeType":"YulLiteral","src":"9913:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9895:6:5","nodeType":"YulIdentifier","src":"9895:6:5"},"nativeSrc":"9895:21:5","nodeType":"YulFunctionCall","src":"9895:21:5"},"nativeSrc":"9895:21:5","nodeType":"YulExpressionStatement","src":"9895:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9936:9:5","nodeType":"YulIdentifier","src":"9936:9:5"},{"kind":"number","nativeSrc":"9947:2:5","nodeType":"YulLiteral","src":"9947:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9932:3:5","nodeType":"YulIdentifier","src":"9932:3:5"},"nativeSrc":"9932:18:5","nodeType":"YulFunctionCall","src":"9932:18:5"},{"kind":"number","nativeSrc":"9952:2:5","nodeType":"YulLiteral","src":"9952:2:5","type":"","value":"25"}],"functionName":{"name":"mstore","nativeSrc":"9925:6:5","nodeType":"YulIdentifier","src":"9925:6:5"},"nativeSrc":"9925:30:5","nodeType":"YulFunctionCall","src":"9925:30:5"},"nativeSrc":"9925:30:5","nodeType":"YulExpressionStatement","src":"9925:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9975:9:5","nodeType":"YulIdentifier","src":"9975:9:5"},{"kind":"number","nativeSrc":"9986:2:5","nodeType":"YulLiteral","src":"9986:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9971:3:5","nodeType":"YulIdentifier","src":"9971:3:5"},"nativeSrc":"9971:18:5","nodeType":"YulFunctionCall","src":"9971:18:5"},{"hexValue":"4e6f7420617574686f72697a656420746f207265736f6c7665","kind":"string","nativeSrc":"9991:27:5","nodeType":"YulLiteral","src":"9991:27:5","type":"","value":"Not authorized to resolve"}],"functionName":{"name":"mstore","nativeSrc":"9964:6:5","nodeType":"YulIdentifier","src":"9964:6:5"},"nativeSrc":"9964:55:5","nodeType":"YulFunctionCall","src":"9964:55:5"},"nativeSrc":"9964:55:5","nodeType":"YulExpressionStatement","src":"9964:55:5"},{"nativeSrc":"10028:26:5","nodeType":"YulAssignment","src":"10028:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"10040:9:5","nodeType":"YulIdentifier","src":"10040:9:5"},{"kind":"number","nativeSrc":"10051:2:5","nodeType":"YulLiteral","src":"10051:2:5","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10036:3:5","nodeType":"YulIdentifier","src":"10036:3:5"},"nativeSrc":"10036:18:5","nodeType":"YulFunctionCall","src":"10036:18:5"},"variableNames":[{"name":"tail","nativeSrc":"10028:4:5","nodeType":"YulIdentifier","src":"10028:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_b505ce087a48417edb145c0615ec91fa53261eab7f095369a503e89e1051aada__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9711:349:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9862:9:5","nodeType":"YulTypedName","src":"9862:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9876:4:5","nodeType":"YulTypedName","src":"9876:4:5","type":""}],"src":"9711:349:5"},{"body":{"nativeSrc":"10112:242:5","nodeType":"YulBlock","src":"10112:242:5","statements":[{"body":{"nativeSrc":"10151:168:5","nodeType":"YulBlock","src":"10151:168:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10172:1:5","nodeType":"YulLiteral","src":"10172:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"10175:77:5","nodeType":"YulLiteral","src":"10175:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10165:6:5","nodeType":"YulIdentifier","src":"10165:6:5"},"nativeSrc":"10165:88:5","nodeType":"YulFunctionCall","src":"10165:88:5"},"nativeSrc":"10165:88:5","nodeType":"YulExpressionStatement","src":"10165:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10273:1:5","nodeType":"YulLiteral","src":"10273:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"10276:4:5","nodeType":"YulLiteral","src":"10276:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10266:6:5","nodeType":"YulIdentifier","src":"10266:6:5"},"nativeSrc":"10266:15:5","nodeType":"YulFunctionCall","src":"10266:15:5"},"nativeSrc":"10266:15:5","nodeType":"YulExpressionStatement","src":"10266:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10301:1:5","nodeType":"YulLiteral","src":"10301:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"10304:4:5","nodeType":"YulLiteral","src":"10304:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10294:6:5","nodeType":"YulIdentifier","src":"10294:6:5"},"nativeSrc":"10294:15:5","nodeType":"YulFunctionCall","src":"10294:15:5"},"nativeSrc":"10294:15:5","nodeType":"YulExpressionStatement","src":"10294:15:5"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"10128:5:5","nodeType":"YulIdentifier","src":"10128:5:5"},{"arguments":[{"kind":"number","nativeSrc":"10139:1:5","nodeType":"YulLiteral","src":"10139:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10135:3:5","nodeType":"YulIdentifier","src":"10135:3:5"},"nativeSrc":"10135:6:5","nodeType":"YulFunctionCall","src":"10135:6:5"}],"functionName":{"name":"eq","nativeSrc":"10125:2:5","nodeType":"YulIdentifier","src":"10125:2:5"},"nativeSrc":"10125:17:5","nodeType":"YulFunctionCall","src":"10125:17:5"},"nativeSrc":"10122:197:5","nodeType":"YulIf","src":"10122:197:5"},{"nativeSrc":"10328:20:5","nodeType":"YulAssignment","src":"10328:20:5","value":{"arguments":[{"name":"value","nativeSrc":"10339:5:5","nodeType":"YulIdentifier","src":"10339:5:5"},{"kind":"number","nativeSrc":"10346:1:5","nodeType":"YulLiteral","src":"10346:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10335:3:5","nodeType":"YulIdentifier","src":"10335:3:5"},"nativeSrc":"10335:13:5","nodeType":"YulFunctionCall","src":"10335:13:5"},"variableNames":[{"name":"ret","nativeSrc":"10328:3:5","nodeType":"YulIdentifier","src":"10328:3:5"}]}]},"name":"increment_t_uint256","nativeSrc":"10065:289:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10094:5:5","nodeType":"YulTypedName","src":"10094:5:5","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"10104:3:5","nodeType":"YulTypedName","src":"10104:3:5","type":""}],"src":"10065:289:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_BattleStatus_$354_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint8_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, _1))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$264__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3afb092d64fcfebeb1708138e27e032546cd5a67e62e6ca98cb36f26f0cc1abe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You don't own this card\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bf3e846f44a2dc9e1f910f2fb7fa1b9c84daacdeb1187926858c401614800a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Battle ID already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_f1c7cd9553ca65c6a2c63bd7aefffe6f98bd6a8fda9409d65aaa5406702ab21b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Battle not in progress\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b505ce087a48417edb145c0615ec91fa53261eab7f095369a503e89e1051aada__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not authorized to resolve\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063d93705a51161005b578063d93705a5146101db578063e2eb41ff146101ee578063f2fde38b1461021157600080fd5b8063715018a6146101af5780638da5cb5b146101b7578063b3446f85146101c857600080fd5b8063606d2e96116100b2578063606d2e9614610113578063693bd2d0146101895780637016f9311461019c57600080fd5b8063255c9e6f146100ce5780633a7c2b71146100e3575b600080fd5b6100e16100dc3660046109a5565b610224565b005b6002546100f6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101756101213660046109e0565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff9095169693956001600160a01b03938416959293919290911688565b60405161010a989796959493929190610a0f565b6001546100f6906001600160a01b031681565b6100e16101aa366004610a86565b61048e565b6100e16104b8565b6000546001600160a01b03166100f6565b6100e16101d6366004610ac0565b6104cc565b6100e16101e93660046109e0565b6105eb565b6102016101fc366004610a86565b6107fd565b60405161010a9493929190610bb7565b6100e161021f366004610a86565b6108b8565b6001546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810186905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610bec565b6001600160a01b0316146103055760405162461bcd60e51b815260206004820152601760248201527f596f7520646f6e2774206f776e2074686973206361726400000000000000000060448201526064015b60405180910390fd5b600085815260046020526040902060010154156103645760405162461bcd60e51b815260206004820152601860248201527f426174746c6520494420616c726561647920657869737473000000000000000060448201526064016102fc565b6040805161010081019091528060018152602080820188905233604080840191909152606083018890526080830187905260a0830186905260c08301859052600060e09093018390528883526004909152902081518154829060ff191660018360028111156103d5576103d56109f9565b021790555060208281015160018301556040808401516002840180546001600160a01b03199081166001600160a01b0393841617909155606086015160038601556080860151600486015560a0860151600586015560c0860151600686015560e090950151600790940180549095169316929092179092558051868152918201859052339187917f7b010b92649cab9c2407084cd3618bec17673efa5ac581cd215068a8558580dc910160405180910390a35050505050565b61049661090f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6104c061090f565b6104ca6000610955565b565b33600090815260036020526040902060010180546104e990610c09565b1590506105385760405162461bcd60e51b815260206004820152601260248201527f416c72656164792072656769737465726564000000000000000000000000000060448201526064016102fc565b604080516080810182523380825260208083018581526000848601819052606085018190529283526003909152929020815181546001600160a01b0319166001600160a01b03909116178155915190919060018201906105989082610c94565b5060408281015160028301556060909201516003909101555133907f81ef79d1cda814a60c0fc60792e648a06d9c6bae67176346d1cc8b63030bfccd906105e0908490610d54565b60405180910390a250565b60008181526004602052604090206001815460ff166002811115610611576106116109f9565b1461065e5760405162461bcd60e51b815260206004820152601660248201527f426174746c65206e6f7420696e2070726f67726573730000000000000000000060448201526064016102fc565b60028101546001600160a01b031633148061068357506000546001600160a01b031633145b6106cf5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420617574686f72697a656420746f207265736f6c76650000000000000060448201526064016102fc565b8060060154816005015410156106f0576002546001600160a01b03166106ff565b60028101546001600160a01b03165b6007820180546001600160a01b039283166001600160a01b03199091168117909155825460ff191660029081178455830154909116600081815260036020526040902091036107645760028101805490600061075a83610d67565b919050555061077c565b60038101805490600061077683610d67565b91905055505b600282015460078301546001600160a01b039081169116146107ab5760028201546001600160a01b03166107b8565b6002546001600160a01b03165b60078301546040516001600160a01b03928316929091169085907fc77dc6cd4b51c8efc4af40a582ca4cf229fda505a830b4486b200ddcbdb1383f90600090a4505050565b600360205260009081526040902080546001820180546001600160a01b03909216929161082990610c09565b80601f016020809104026020016040519081016040528092919081815260200182805461085590610c09565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b5050505050908060020154908060030154905084565b6108c061090f565b6001600160a01b038116610903576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102fc565b61090c81610955565b50565b6000546001600160a01b031633146104ca576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600060a086880312156109bd57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156109f257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b610100810160038a10610a3257634e487b7160e01b600052602160045260246000fd5b98815260208101979097526001600160a01b0395861660408801526060870194909452608086019290925260a085015260c08401521660e09091015290565b6001600160a01b038116811461090c57600080fd5b600060208284031215610a9857600080fd5b8135610aa381610a71565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ad257600080fd5b813567ffffffffffffffff80821115610aea57600080fd5b818401915084601f830112610afe57600080fd5b813581811115610b1057610b10610aaa565b604051601f8201601f19908116603f01168101908382118183101715610b3857610b38610aaa565b81604052828152876020848701011115610b5157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610b9757602081850181015186830182015201610b7b565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0385168152608060208201526000610bd96080830186610b71565b6040830194909452506060015292915050565b600060208284031215610bfe57600080fd5b8151610aa381610a71565b600181811c90821680610c1d57607f821691505b602082108103610c3d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c8f576000816000526020600020601f850160051c81016020861015610c6c5750805b601f850160051c820191505b81811015610c8b57828155600101610c78565b5050505b505050565b815167ffffffffffffffff811115610cae57610cae610aaa565b610cc281610cbc8454610c09565b84610c43565b602080601f831160018114610cf75760008415610cdf5750858301515b600019600386901b1c1916600185901b178555610c8b565b600085815260208120601f198616915b82811015610d2657888601518255948401946001909101908401610d07565b5085821015610d445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610aa36020830184610b71565b600060018201610d8757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bacf57ba16eab5efc50e6967589a7af64ea1c3f384add7087ed6bd174d089c5564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD93705A5 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD93705A5 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xB3446F85 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x606D2E96 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x693BD2D0 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x7016F931 EQ PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x255C9E6F EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x3A7C2B71 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD PUSH1 0xFF SWAP1 SWAP6 AND SWAP7 SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 AND DUP9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E20746869732063617264000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C6520494420616C7265616479206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE DUP9 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x9F9 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 DUP8 SWAP2 PUSH32 0x7B010B92649CAB9C2407084CD3618BEC17673EFA5AC581CD215068A8558580DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x496 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x4CA PUSH1 0x0 PUSH2 0x955 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0xC09 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x0 DUP5 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x598 SWAP1 DUP3 PUSH2 0xC94 JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE MLOAD CALLER SWAP1 PUSH32 0x81EF79D1CDA814A60C0FC60792E648A06D9C6BAE67176346D1CC8B63030BFCCD SWAP1 PUSH2 0x5E0 SWAP1 DUP5 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x9F9 JUMP JUMPDEST EQ PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C65206E6F7420696E2070726F677265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x683 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207265736F6C766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR DUP5 SSTORE DUP4 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SUB PUSH2 0x764 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x75A DUP4 PUSH2 0xD67 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x77C JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x776 DUP4 PUSH2 0xD67 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x7AB JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0xC77DC6CD4B51C8EFC4AF40A582CA4CF229FDA505A830B4486B200DDCBDB1383F SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x829 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x855 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x877 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x885 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x90C DUP2 PUSH2 0x955 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD PUSH1 0x3 DUP11 LT PUSH2 0xA32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAA3 DUP2 PUSH2 0xA71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB10 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB38 JUMPI PUSH2 0xB38 PUSH2 0xAAA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB97 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB7B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xBD9 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAA3 DUP2 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC1D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xC6C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC78 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCAE JUMPI PUSH2 0xCAE PUSH2 0xAAA JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xCBC DUP5 SLOAD PUSH2 0xC09 JUMP JUMPDEST DUP5 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xCDF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD26 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD07 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD44 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xCF JUMPI 0xBA AND 0xEA 0xB5 0xEF 0xC5 0xE PUSH10 0x67589A7AF64EA1C3F384 0xAD 0xD7 ADDMOD PUSH31 0xD6BD174D089C5564736F6C6343000818003300000000000000000000000000 ","sourceMap":"520:6342:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4691:691;;;;;;:::i;:::-;;:::i;:::-;;756:30;;;;;-1:-1:-1;;;;;756:30:4;;;;;;-1:-1:-1;;;;;637:55:5;;;619:74;;607:2;592:18;756:30:4;;;;;;;;2261:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2261:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;647:27::-;;;;;-1:-1:-1;;;;;647:27:4;;;6743:117;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;3890:257:4;;;;;;:::i;:::-;;:::i;5741:773::-;;;;;;:::i;:::-;;:::i;2140:41::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;4691:691:4:-;4861:12;;:35;;;;;;;;4901:25:5;;;4900:10:4;;-1:-1:-1;;;;;4861:12:4;;:20;;4874:18:5;;4861:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4861:49:4;;4853:85;;;;-1:-1:-1;;;4853:85:4;;5395:2:5;4853:85:4;;;5377:21:5;5434:2;5414:18;;;5407:30;5473:25;5453:18;;;5446:53;5516:18;;4853:85:4;;;;;;;;;4956:18;;;;:7;:18;;;;;:27;;;:32;4948:69;;;;-1:-1:-1;;;4948:69:4;;5747:2:5;4948:69:4;;;5729:21:5;5786:2;5766:18;;;5759:30;5825:26;5805:18;;;5798:54;5869:18;;4948:69:4;5545:348:5;4948:69:4;5049:242;;;;;;;;;;5069:23;5049:242;;;;;;;;;5129:10;5049:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5049:242:4;;;;;;;5028:18;;;:7;:18;;;;;:263;;;;:18;;-1:-1:-1;;5028:263:4;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5028:263:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5028:263:4;;;-1:-1:-1;;;;;5028:263:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5307:68;;6072:25:5;;;6113:18;;;6106:34;;;5332:10:4;;5321:9;;5307:68;;6045:18:5;5307:68:4;;;;;;;4691:691;;;;;:::o;6743:117::-;1531:13:0;:11;:13::i;:::-;6824:15:4::1;:29:::0;;-1:-1:-1;;;;;;6824:29:4::1;-1:-1:-1::0;;;;;6824:29:4;;;::::1;::::0;;;::::1;::::0;;6743:117::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3890:257:4:-;3976:10;3968:19;;;;:7;:19;;;;;:30;;3962:44;;;;;:::i;:::-;:49;;-1:-1:-1;3954:80:4;;;;-1:-1:-1;;;3954:80:4;;6795:2:5;3954:80:4;;;6777:21:5;6834:2;6814:18;;;6807:30;6873:20;6853:18;;;6846:48;6911:18;;3954:80:4;6593:342:5;3954:80:4;4066:31;;;;;;;;4073:10;4066:31;;;;;;;;;;-1:-1:-1;4066:31:4;;;;;;;;;;;;4044:19;;;:7;:19;;;;;;:53;;;;-1:-1:-1;;;;;;4044:53:4;-1:-1:-1;;;;;4044:53:4;;;;;;;;4066:31;;4044:19;-1:-1:-1;4044:53:4;;;;;;;:::i;:::-;-1:-1:-1;4044:53:4;;;;;;;;;;;;;;;;;;;4112:28;4122:10;;4112:28;;;;4134:5;;4112:28;:::i;:::-;;;;;;;;3890:257;:::o;5741:773::-;5802:21;5826:18;;;:7;:18;;;;;5885:23;5862:19;;;;:46;;;;;;;;:::i;:::-;;5854:81;;;;-1:-1:-1;;;5854:81:4;;9562:2:5;5854:81:4;;;9544:21:5;9601:2;9581:18;;;9574:30;9640:24;9620:18;;;9613:52;9682:18;;5854:81:4;9360:346:5;5854:81:4;5967:13;;;;-1:-1:-1;;;;;5967:13:4;5953:10;:27;;:52;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;5984:10:4;:21;5953:52;5945:90;;;;-1:-1:-1;;;5945:90:4;;9913:2:5;5945:90:4;;;9895:21:5;9952:2;9932:18;;;9925:30;9991:27;9971:18;;;9964:55;10036:18;;5945:90:4;9711:349:5;5945:90:4;6088:6;:24;;;6062:6;:22;;;:50;;:84;;6131:15;;-1:-1:-1;;;;;6131:15:4;6062:84;;;6115:13;;;;-1:-1:-1;;;;;6115:13:4;6062:84;6046:13;;;:100;;-1:-1:-1;;;;;6046:100:4;;;-1:-1:-1;;;;;;6046:100:4;;;;;;;;6156:43;;-1:-1:-1;;6156:43:4;6178:21;6156:43;;;;;6242:13;;;;;;-1:-1:-1;6234:22:4;;;:7;:22;;;;;;6270:30;6266:120;;6316:11;;;:13;;;:11;:13;;;:::i;:::-;;;;;;6266:120;;;6360:13;;;:15;;;:13;:15;;;:::i;:::-;;;;;;6266:120;6459:13;;;;6442;;;;-1:-1:-1;;;;;6442:13:4;;;6459;;6442:30;:64;;6493:13;;;;-1:-1:-1;;;;;6493:13:4;6442:64;;;6475:15;;-1:-1:-1;;;;;6475:15:4;6442:64;6427:13;;;;6401:106;;-1:-1:-1;;;;;6401:106:4;;;;6427:13;;;;6416:9;;6401:106;;6427:13;;6401:106;5792:722;;5741:773;:::o;2140:41::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2140:41:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;619:74:5::0;592:18;;2672:31:0::1;473:226:5::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;;;;735:10:2;1901:40:0;;;619:74:5;592:18;;1901:40:0;473:226:5;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:454:5:-;109:6;117;125;133;141;194:3;182:9;173:7;169:23;165:33;162:53;;;211:1;208;201:12;162:53;-1:-1:-1;;234:23:5;;;304:2;289:18;;276:32;;-1:-1:-1;355:2:5;340:18;;327:32;;406:2;391:18;;378:32;;-1:-1:-1;457:3:5;442:19;429:33;;-1:-1:-1;14:454:5;-1:-1:-1;14:454:5:o;704:180::-;763:6;816:2;804:9;795:7;791:23;787:32;784:52;;;832:1;829;822:12;784:52;-1:-1:-1;855:23:5;;704:180;-1:-1:-1;704:180:5:o;889:184::-;-1:-1:-1;;;938:1:5;931:88;1038:4;1035:1;1028:15;1062:4;1059:1;1052:15;1078:982;1422:3;1407:19;;1456:1;1445:13;;1435:201;;-1:-1:-1;;;1489:1:5;1482:88;1593:4;1590:1;1583:15;1621:4;1618:1;1611:15;1435:201;1645:25;;;1701:2;1686:18;;1679:34;;;;-1:-1:-1;;;;;1810:15:5;;;1805:2;1790:18;;1783:43;1857:2;1842:18;;1835:34;;;;1900:3;1885:19;;1878:35;;;;1944:3;1929:19;;1922:35;1988:3;1973:19;;1966:35;2038:15;2032:3;2017:19;;;2010:44;1078:982;:::o;2311:154::-;-1:-1:-1;;;;;2390:5:5;2386:54;2379:5;2376:65;2366:93;;2455:1;2452;2445:12;2470:247;2529:6;2582:2;2570:9;2561:7;2557:23;2553:32;2550:52;;;2598:1;2595;2588:12;2550:52;2637:9;2624:23;2656:31;2681:5;2656:31;:::i;:::-;2706:5;2470:247;-1:-1:-1;;;2470:247:5:o;2722:184::-;-1:-1:-1;;;2771:1:5;2764:88;2871:4;2868:1;2861:15;2895:4;2892:1;2885:15;2911:922;2980:6;3033:2;3021:9;3012:7;3008:23;3004:32;3001:52;;;3049:1;3046;3039:12;3001:52;3089:9;3076:23;3118:18;3159:2;3151:6;3148:14;3145:34;;;3175:1;3172;3165:12;3145:34;3213:6;3202:9;3198:22;3188:32;;3258:7;3251:4;3247:2;3243:13;3239:27;3229:55;;3280:1;3277;3270:12;3229:55;3316:2;3303:16;3338:2;3334;3331:10;3328:36;;;3344:18;;:::i;:::-;3419:2;3413:9;3387:2;3473:13;;-1:-1:-1;;3469:22:5;;;3493:2;3465:31;3461:40;3449:53;;;3517:18;;;3537:22;;;3514:46;3511:72;;;3563:18;;:::i;:::-;3603:10;3599:2;3592:22;3638:2;3630:6;3623:18;3678:7;3673:2;3668;3664;3660:11;3656:20;3653:33;3650:53;;;3699:1;3696;3689:12;3650:53;3755:2;3750;3746;3742:11;3737:2;3729:6;3725:15;3712:46;3800:1;3778:15;;;3795:2;3774:24;3767:35;;;;-1:-1:-1;3782:6:5;2911:922;-1:-1:-1;;;;;2911:922:5:o;3838:423::-;3880:3;3918:5;3912:12;3945:6;3940:3;3933:19;3970:1;3980:162;3994:6;3991:1;3988:13;3980:162;;;4056:4;4112:13;;;4108:22;;4102:29;4084:11;;;4080:20;;4073:59;4009:12;3980:162;;;3984:3;4187:1;4180:4;4171:6;4166:3;4162:16;4158:27;4151:38;4250:4;4243:2;4239:7;4234:2;4226:6;4222:15;4218:29;4213:3;4209:39;4205:50;4198:57;;;3838:423;;;;:::o;4266:484::-;-1:-1:-1;;;;;4503:6:5;4499:55;4488:9;4481:74;4591:3;4586:2;4575:9;4571:18;4564:31;4462:4;4612:46;4653:3;4642:9;4638:19;4630:6;4612:46;:::i;:::-;4689:2;4674:18;;4667:34;;;;-1:-1:-1;4732:2:5;4717:18;4710:34;4604:54;4266:484;-1:-1:-1;;4266:484:5:o;4937:251::-;5007:6;5060:2;5048:9;5039:7;5035:23;5031:32;5028:52;;;5076:1;5073;5066:12;5028:52;5108:9;5102:16;5127:31;5152:5;5127:31;:::i;6151:437::-;6230:1;6226:12;;;;6273;;;6294:61;;6348:4;6340:6;6336:17;6326:27;;6294:61;6401:2;6393:6;6390:14;6370:18;6367:38;6364:218;;-1:-1:-1;;;6435:1:5;6428:88;6539:4;6536:1;6529:15;6567:4;6564:1;6557:15;6364:218;;6151:437;;;:::o;7066:543::-;7168:2;7163:3;7160:11;7157:446;;;7204:1;7228:5;7225:1;7218:16;7272:4;7269:1;7259:18;7342:2;7330:10;7326:19;7323:1;7319:27;7313:4;7309:38;7378:4;7366:10;7363:20;7360:47;;;-1:-1:-1;7401:4:5;7360:47;7456:2;7451:3;7447:12;7444:1;7440:20;7434:4;7430:31;7420:41;;7511:82;7529:2;7522:5;7519:13;7511:82;;;7574:17;;;7555:1;7544:13;7511:82;;;7515:3;;;7157:446;7066:543;;;:::o;7785:1345::-;7911:3;7905:10;7938:18;7930:6;7927:30;7924:56;;;7960:18;;:::i;:::-;7989:97;8079:6;8039:38;8071:4;8065:11;8039:38;:::i;:::-;8033:4;7989:97;:::i;:::-;8141:4;;8198:2;8187:14;;8215:1;8210:663;;;;8917:1;8934:6;8931:89;;;-1:-1:-1;8986:19:5;;;8980:26;8931:89;-1:-1:-1;;7742:1:5;7738:11;;;7734:24;7730:29;7720:40;7766:1;7762:11;;;7717:57;9033:81;;8180:944;;8210:663;7013:1;7006:14;;;7050:4;7037:18;;-1:-1:-1;;8246:20:5;;;8364:236;8378:7;8375:1;8372:14;8364:236;;;8467:19;;;8461:26;8446:42;;8559:27;;;;8527:1;8515:14;;;;8394:19;;8364:236;;;8368:3;8628:6;8619:7;8616:19;8613:201;;;8689:19;;;8683:26;-1:-1:-1;;8772:1:5;8768:14;;;8784:3;8764:24;8760:37;8756:42;8741:58;8726:74;;8613:201;-1:-1:-1;;;;;8860:1:5;8844:14;;;8840:22;8827:36;;-1:-1:-1;7785:1345:5:o;9135:220::-;9284:2;9273:9;9266:21;9247:4;9304:45;9345:2;9334:9;9330:18;9322:6;9304:45;:::i;10065:289::-;10104:3;10125:17;;;10122:197;;-1:-1:-1;;;10172:1:5;10165:88;10276:4;10273:1;10266:15;10304:4;10301:1;10294:15;10122:197;-1:-1:-1;10346:1:5;10335:13;;10065:289::o"},"methodIdentifiers":{"battles(uint256)":"606d2e96","cardContract()":"693bd2d0","computerAddress()":"3a7c2b71","createBattle(uint256,uint256,uint256,uint256,uint256)":"255c9e6f","owner()":"8da5cb5b","players(address)":"e2eb41ff","registerPlayer(string)":"b3446f85","renounceOwnership()":"715018a6","resolveBattle(uint256)":"d93705a5","transferOwnership(address)":"f2fde38b","updateComputerAddress(address)":"7016f931"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cardContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_computerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"loser\",\"type\":\"address\"}],\"name\":\"BattleFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"playerCardId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"computerCardId\",\"type\":\"uint256\"}],\"name\":\"BattleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewPlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battles\",\"outputs\":[{\"internalType\":\"enum TradingCardGame.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"playerCardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"computerCardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"playerStatValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"computerStatValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cardContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_battleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_playerCardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_computerCardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_playerStatValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_computerStatValue\",\"type\":\"uint256\"}],\"name\":\"createBattle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"playerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"wins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"losses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"registerPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_battleId\",\"type\":\"uint256\"}],\"name\":\"resolveBattle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateComputerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A smart contract for a simple trading card game where players can register, create battles against a computer opponent, and resolve battles based on card stats. The contract uses OpenZeppelin's Ownable contract for access control, allowing certain functions to be restricted to the contract owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"BattleFinished(uint256,address,address)\":{\"params\":{\"battleId\":\"The unique identifier for the battle\",\"loser\":\"The address of the battle loser\",\"winner\":\"The address of the battle winner\"}},\"BattleStarted(uint256,address,uint256,uint256)\":{\"params\":{\"battleId\":\"The unique identifier for the battle\",\"computerCardId\":\"The ID of the computer's card\",\"player\":\"The address of the player\",\"playerCardId\":\"The ID of the player's card\"}},\"NewPlayer(address,string)\":{\"params\":{\"name\":\"The name of the new player\",\"player\":\"The address of the new player\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the TradingCardGame contract.\",\"params\":{\"_cardContractAddress\":\"The address of the ERC721 card contract\",\"_computerAddress\":\"The address representing the computer opponent\"}},\"createBattle(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"The player must own the card with ID `_playerCardId`. The battle is automatically started upon creation.\",\"params\":{\"_battleId\":\"The unique identifier for the battle\",\"_computerCardId\":\"The ID of the computer's card\",\"_computerStatValue\":\"The stat value of the computer's card\",\"_playerCardId\":\"The ID of the player's card\",\"_playerStatValue\":\"The stat value of the player's card\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerPlayer(string)\":{\"details\":\"The player must not already be registered.\",\"params\":{\"_name\":\"The name chosen by the player\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolveBattle(uint256)\":{\"details\":\"Only the player who initiated the battle or the contract owner can resolve the battle. The winner is determined by comparing the player's card stat value with the computer's card stat value.\",\"params\":{\"_battleId\":\"The ID of the battle to resolve\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateComputerAddress(address)\":{\"details\":\"Only the contract owner can update the computer address.\",\"params\":{\"_newAddress\":\"The new address for the computer opponent\"}}},\"stateVariables\":{\"battles\":{\"details\":\"Mapping of battle IDs to their corresponding Battle struct.\"},\"players\":{\"details\":\"Mapping of player addresses to their corresponding Player struct.\"}},\"title\":\"TradingCardGame\",\"version\":1},\"userdoc\":{\"events\":{\"BattleFinished(uint256,address,address)\":{\"notice\":\"Emitted when a battle is finished.\"},\"BattleStarted(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a new battle is started.\"},\"NewPlayer(address,string)\":{\"notice\":\"Emitted when a new player registers in the game.\"}},\"kind\":\"user\",\"methods\":{\"cardContract()\":{\"notice\":\"The ERC721 contract representing the trading cards used in the game.\"},\"computerAddress()\":{\"notice\":\"The address representing the computer opponent in battles.\"},\"createBattle(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Create a new battle against the computer with a provided battle ID.\"},\"registerPlayer(string)\":{\"notice\":\"Register a new player in the game.\"},\"resolveBattle(uint256)\":{\"notice\":\"Resolve an in-progress battle and determine the winner.\"},\"updateComputerAddress(address)\":{\"notice\":\"Update the address representing the computer opponent.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CardGame.sol\":\"TradingCardGame\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/CardGame.sol\":{\"keccak256\":\"0xd5fa2b92ba47592f12eb5b6bfa744fd6d1bf6328032ddcaf8815d7fb7d90e0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a346905680908068ec7010a261a0377d91bc02c4904f1bc34ce923b9cb987af\",\"dweb:/ipfs/QmXDawxmXLWh7QEsNcqNnbsXzv2cn7F9KcrSZAi2XdbUH2\"]}},\"version\":1}"}}}}}